{"version":3,"sources":["../../../esm/components/ChipGroup/Chip.js"],"names":["React","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Chip","Component","constructor","props","createRef","children","className","onClick","component","createElement","styles","chip","modifiers","overflow","ChipButton","chipText","randomId","closeBtnAriaLabel","tooltipPosition","isReadOnly","state","isTooltipVisible","Tooltip","position","content","readOnly","ref","span","id","ariaLabel","TimesCircleIcon","componentDidMount","setState","Boolean","current","offsetWidth","scrollWidth","render","isOverflowChip","GenerateId","renderOverflowChip","renderChip","_pt","node","string","bool","func","oneOf","undefined"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { ChipButton } from './ChipButton';\nimport { Tooltip } from '../Tooltip';\nimport { TimesCircleIcon } from '@patternfly/react-icons';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport GenerateId from '../../helpers/GenerateId/GenerateId';\nexport class Chip extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"span\", React.createRef());\n\n    _defineProperty(this, \"renderOverflowChip\", () => {\n      const {\n        children,\n        className,\n        onClick\n      } = this.props;\n      const Component = this.props.component;\n      return React.createElement(Component, {\n        className: css(styles.chip, styles.modifiers.overflow, className)\n      }, React.createElement(ChipButton, {\n        onClick: onClick\n      }, React.createElement(\"span\", {\n        className: css(styles.chipText)\n      }, children)));\n    });\n\n    _defineProperty(this, \"renderChip\", randomId => {\n      const {\n        children,\n        closeBtnAriaLabel,\n        tooltipPosition,\n        className,\n        onClick,\n        isReadOnly\n      } = this.props;\n      const Component = this.props.component;\n\n      if (this.state.isTooltipVisible) {\n        return React.createElement(Tooltip, {\n          position: tooltipPosition,\n          content: children\n        }, React.createElement(Component, {\n          className: css(styles.chip, isReadOnly && styles.modifiers.readOnly, className)\n        }, React.createElement(\"span\", {\n          ref: this.span,\n          className: css(styles.chipText),\n          id: randomId\n        }, children), !isReadOnly && React.createElement(ChipButton, {\n          onClick: onClick,\n          ariaLabel: closeBtnAriaLabel,\n          id: `remove_${randomId}`,\n          \"aria-labelledby\": `remove_${randomId} ${randomId}`\n        }, React.createElement(TimesCircleIcon, {\n          \"aria-hidden\": \"true\"\n        }))));\n      }\n\n      return React.createElement(Component, {\n        className: css(styles.chip, isReadOnly && styles.modifiers.readOnly, className)\n      }, React.createElement(\"span\", {\n        ref: this.span,\n        className: css(styles.chipText),\n        id: randomId\n      }, children), !isReadOnly && React.createElement(ChipButton, {\n        onClick: onClick,\n        ariaLabel: closeBtnAriaLabel,\n        id: `remove_${randomId}`,\n        \"aria-labelledby\": `remove_${randomId} ${randomId}`\n      }, React.createElement(TimesCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })));\n    });\n\n    this.state = {\n      isTooltipVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n    });\n  }\n\n  render() {\n    const {\n      isOverflowChip\n    } = this.props;\n    return React.createElement(GenerateId, null, randomId => isOverflowChip ? this.renderOverflowChip() : this.renderChip(randomId));\n  }\n\n}\n\n_defineProperty(Chip, \"propTypes\", {\n  children: _pt.node,\n  closeBtnAriaLabel: _pt.string,\n  className: _pt.string,\n  isOverflowChip: _pt.bool,\n  isReadOnly: _pt.bool,\n  onClick: _pt.func,\n  component: _pt.node,\n  tooltipPosition: _pt.oneOf(['auto', 'top', 'bottom', 'left', 'right'])\n});\n\n_defineProperty(Chip, \"defaultProps\", {\n  closeBtnAriaLabel: 'close',\n  className: '',\n  isOverflowChip: false,\n  isReadOnly: false,\n  tooltipPosition: 'top',\n  onClick: () => undefined,\n  component: 'div'\n});\n//# sourceMappingURL=Chip.js.map"],"file":"Chip.js"}