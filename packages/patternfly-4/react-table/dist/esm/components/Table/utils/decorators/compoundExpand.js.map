{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/compoundExpand.tsx"],"names":["React","css","Button","styles","compoundExpand","value","rowIndex","columnIndex","rowData","column","property","title","props","extraParams","onExpand","extraData","onToggle","event","isOpen","className","tableCompoundExpansionToggle","modifiers","expanded","children","undefined","ariaControls"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAGA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAD,EAA6B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA,MAAlC;AAA0CC,EAAAA;AAA1C,CAA7B,KAA8F;AAC1H,MAAI,CAACL,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,KAAzB;AACA,QAAM;AACJQ,IAAAA,WAAW,EAAE;AAAEC,MAAAA;AAAF;AADT,MAEFL,MAFJ;AAGA,QAAMM,SAAS,GAAG;AAChBT,IAAAA,QADgB;AAEhBC,IAAAA,WAFgB;AAGhBE,IAAAA,MAHgB;AAIhBC,IAAAA;AAJgB,GAAlB;;AAOA,WAASM,QAAT,CAAkBC,KAAlB,EAA2C;AACzC;AACAH,IAAAA,QAAQ,IAAIA,QAAQ,CAACG,KAAD,EAAQX,QAAR,EAAkBC,WAAlB,EAA+BK,KAAK,CAACM,MAArC,EAA6CV,OAA7C,EAAsDO,SAAtD,CAApB;AACD;;AACD,SAAO;AACLI,IAAAA,SAAS,EAAElB,GAAG,CAACE,MAAM,CAACiB,4BAAR,EAAsCR,KAAK,CAACM,MAAN,IAAgBf,MAAM,CAACkB,SAAP,CAAiBC,QAAvE,CADT;AAELC,IAAAA,QAAQ,EAAEX,KAAK,CAACM,MAAN,KAAiBM,SAAjB,IACR,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAER,QAAhC;AAA0C,uBAAeJ,KAAK,CAACM,MAA/D;AAAuE,uBAAeN,KAAK,CAACa;AAA5F,OACGd,KADH;AAHG,GAAP;AAQD,CA3BM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '@patternfly/react-core';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType } from '../../Table';\n\nexport const compoundExpand = (value: IFormatterValueType, { rowIndex, columnIndex, rowData, column, property }: IExtra) => {\n  if (!value) {\n    return null;\n  }\n  const { title, props } = value;\n  const {\n    extraParams: { onExpand }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  function onToggle(event: React.MouseEvent) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && (\n      <Button variant=\"link\" onClick={onToggle} aria-expanded={props.isOpen} aria-controls={props.ariaControls}>\n        {title}\n      </Button>\n    )\n  };\n};\n"],"file":"compoundExpand.js"}