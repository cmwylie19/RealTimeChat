{"version":3,"sources":["../../../esm/components/TopologyView/TopologyView.js"],"names":["React","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","TopologyView","_ref","className","contextToolbar","viewToolbar","children","controlBar","sideBar","sideBarOpen","props","containerClasses","createElement","Stack","StackItem","isFilled","propTypes","_pt","string","node","bool"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport '@patternfly/react-styles/css/components/Topology/topology-view.css';\nexport const TopologyView = (_ref) => {\n  let {\n    className = '',\n    contextToolbar = null,\n    viewToolbar = null,\n    children = null,\n    controlBar = null,\n    sideBar = null,\n    sideBarOpen = false\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"contextToolbar\", \"viewToolbar\", \"children\", \"controlBar\", \"sideBar\", \"sideBarOpen\"]);\n\n  const containerClasses = `${sideBar ? 'pf-topology-container__with-sidebar' : ''}` + `${sideBarOpen ? ' pf-topology-container__with-sidebar--open' : ''}`;\n  return React.createElement(Stack, _extends({\n    className: className\n  }, props), contextToolbar && React.createElement(StackItem, {\n    isFilled: false\n  }, contextToolbar), viewToolbar && React.createElement(StackItem, {\n    isFilled: false\n  }, viewToolbar), React.createElement(StackItem, {\n    isFilled: true,\n    className: containerClasses\n  }, React.createElement(\"div\", {\n    className: \"pf-topology-content\"\n  }, children, controlBar && React.createElement(\"span\", {\n    className: \"pf-topology-control-bar\"\n  }, controlBar)), sideBar));\n};\nTopologyView.propTypes = {\n  className: _pt.string,\n  children: _pt.node,\n  contextToolbar: _pt.node,\n  viewToolbar: _pt.node,\n  controlBar: _pt.node,\n  sideBar: _pt.node,\n  sideBarOpen: _pt.bool\n};\n//# sourceMappingURL=TopologyView.js.map"],"file":"TopologyView.js"}