{"version":3,"sources":["../../../../src/components/TopologySideBar/TopologySideBar.tsx"],"names":["React","TimesIcon","Button","TopologySideBar","Component","constructor","props","setState","isIn","show","clearTimer","timer","setTimeout","updateForTransitions","clearTimeout","state","componentWillUnmount","render","className","onClose","header","children","otherProps","startTimer"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,wEAAP;AAmBA,OAAO,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA0F;AAI/FC,EAAAA,WAAW,CAACC,KAAD,EAA8B;AACvC,UAAMA,KAAN;;AADuC,mCAF5B,IAE4B;;AAAA,kDASlB,MAAM;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG;AAAnB,OAAd;AACD,KAXwC;;AAAA,wCAa5B,MAAM;AACjB,WAAKC,UAAL;AACA,WAAKC,KAAL,GAAaC,UAAU,CAAC,KAAKC,oBAAN,EAA4B,GAA5B,CAAvB;AACD,KAhBwC;;AAAA,wCAkB5B,MAAM;AACjB,UAAI,KAAKF,KAAT,EAAgB;AACdG,QAAAA,YAAY,CAAC,KAAKH,KAAN,CAAZ;AACA,aAAKA,KAAL,GAAa,IAAb;AACD;AACF,KAvBwC;;AAEvC,SAAKI,KAAL,GAAa;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAb;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,UAAL;AACD;;AAkBDO,EAAAA,MAAM,GAAG;AACP,wBAOI,KAAKX,KAPT;AAAA,UAAM;AACJY,MAAAA,SAAS,GAAG,EADR;AAEJT,MAAAA,IAAI,GAAG,KAFH;AAGJU,MAAAA,OAAO,GAAG,IAHN;AAIJC,MAAAA,MAJI;AAKJC,MAAAA,QAAQ,GAAG;AALP,KAAN;AAAA,UAMKC,UANL;;AAQA,UAAM;AAAEd,MAAAA;AAAF,QAAW,KAAKO,KAAtB;;AAEA,QAAIP,IAAI,KAAKC,IAAb,EAAmB;AACjB,WAAKC,UAAL;AACA,WAAKa,UAAL;AACD;;AAED,WACE,wCACMD,UADN;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAG,6BAA4BJ,SAAU,GAAET,IAAI,GAAG,QAAH,GAAc,EAAG,GAAED,IAAI,GAAG,KAAH,GAAW,EAAG;AAH/F,QAKGC,IAAI,IACH,oBAAC,KAAD,CAAO,QAAP,QACGU,OAAO,IACN,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,+BAAlB;AAAkD,MAAA,OAAO,EAAC,OAA1D;AAAkE,MAAA,OAAO,EAAEA,OAA3E;AAA2F,oBAAW;AAAtG,OACE,oBAAC,SAAD,OADF,CAFJ,EAMGC,MAAM,IACL;AAAK,MAAA,SAAS,EAAC;AAAf,OACGA,MADH,CAPJ,EAWE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGC,QADH,CAXF,CANJ,CADF;AAyBD;;AAtE8F;;gBAApFlB,e;AAfXe,EAAAA,S;AAEAG,EAAAA,Q;AAEAZ,EAAAA,I;AAEAU,EAAAA,O;AAEAC,EAAAA,M","sourcesContent":["import * as React from 'react';\n\nimport { TimesIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nimport '@patternfly/react-styles/css/components/Topology/topology-side-bar.css';\n\nexport interface TopologySideBarProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the sidebar */\n  className?: string;\n  /** Contents for the sidebar */\n  children?: React.ReactNode;\n  /** Flag if sidebar is open */\n  show?: boolean;\n  /** A callback for closing the sidebar, if provided the close button will be displayed in the sidebar */\n  onClose?: () => void;\n  /** Component to place in the header of the sidebar */\n  header?: React.ReactNode;\n}\n\ninterface TopologySideBarState {\n  isIn: boolean;\n}\n\nexport class TopologySideBar extends React.Component<TopologySideBarProps, TopologySideBarState> {\n\n  timer: any = null;\n\n  constructor(props: TopologySideBarProps) {\n    super(props);\n    this.state = { isIn: false };\n  }\n\n  componentWillUnmount() {\n    this.clearTimer();\n  }\n\n  updateForTransitions = () => {\n    this.setState({ isIn: this.props.show });\n  }\n\n  startTimer = () => {\n    this.clearTimer();\n    this.timer = setTimeout(this.updateForTransitions, 150);\n  }\n\n  clearTimer = () => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  render() {\n    const {\n      className = '',\n      show = false,\n      onClose = null,\n      header,\n      children = null,\n      ...otherProps\n    } = this.props;\n    const { isIn } = this.state;\n\n    if (isIn !== show) {\n      this.clearTimer();\n      this.startTimer();\n    }\n\n    return (\n      <div\n        {...otherProps}\n        role=\"dialog\"\n        className={`pf-topology-side-bar fade ${className}${show ? ' shown' : ''}${isIn ? ' in' : ''}`}\n      >\n        {show && (\n          <React.Fragment>\n            {onClose && (\n              <Button className=\"pf-topology-side-bar__dismiss\" variant=\"plain\" onClick={onClose as any} aria-label=\"Close\">\n                <TimesIcon />\n              </Button>\n            )}\n            {header && (\n              <div className=\"pf-topology-side-bar__header\">\n                {header}\n              </div>\n            )}\n            <div className=\"pf-topology-side-bar__body\">\n              {children}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n"],"file":"TopologySideBar.js"}