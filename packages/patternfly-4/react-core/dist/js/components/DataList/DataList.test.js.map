{"version":3,"sources":["../../../../src/components/DataList/DataList.test.js"],"names":["describe","test","view","expect","toMatchSnapshot","props","className","toBe","width","forEach","testCase","find","Button","id","DropdownPosition","right","jest","fn","DataListActionVisibility","visibleOnLg","hidden","toContain","hiddenOn2Xl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { DataList } from './DataList';\nimport { DataListItem } from './DataListItem';\nimport { DataListAction, DataListActionVisibility } from './DataListAction';\nimport { DataListCell } from './DataListCell';\nimport { DataListToggle } from './DataListToggle';\nimport { DataListItemCells } from './DataListItemCells';\nimport { DataListItemRow } from './DataListItemRow';\nimport { DataListContent } from './DataListContent';\nimport { Button } from '../Button';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownItem, Dropdown, KebabToggle, DropdownPosition } from '../Dropdown';\n\ndescribe('DataList', () => {\n  test('List default', () => {\n    const view = shallow(<DataList aria-label=\"this is a simple list\" />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('List', () => {\n    const view = shallow(<DataList key=\"list-id-1\" className=\"data-list-custom\" aria-label=\"this is a simple list\" />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('Item default', () => {\n    const view = shallow(\n      <DataListItem key=\"item-id-1\" aria-labelledby=\"item-1\">\n        test\n      </DataListItem>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('Item expanded', () => {\n    const view = shallow(\n      <DataListItem aria-labelledby=\"item-1\" isExpanded>\n        test\n      </DataListItem>\n    );\n    expect(view.props().className).toBe('pf-c-data-list__item pf-m-expanded');\n  });\n\n  test('Item', () => {\n    const view = shallow(\n      <DataListItem className=\"data-list-item-custom\" aria-labelledby=\"item-1\">\n        test\n      </DataListItem>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('item row default', () => {\n    const view = shallow(<DataListItemRow>test</DataListItemRow>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('Cell default', () => {\n    const view = shallow(<DataListCell>Secondary</DataListCell>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('Cells', () => {\n    const view = shallow(\n      <DataListItemCells\n        dataListCells={[\n          <DataListCell key=\"list-id-1\" id=\"primary-item\" className=\"data-list-custom\">\n            Primary Id\n          </DataListCell>,\n          <DataListCell key=\"list-id-2\" id=\"primary-item\" className=\"data-list-custom\">\n            Primary Id 2\n          </DataListCell>\n        ]}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('Cell with width modifier', () => {\n    [\n      { width: 1, class: '' },\n      { width: 2, class: 'pf-m-flex-2' },\n      { width: 3, class: 'pf-m-flex-3' },\n      { width: 4, class: 'pf-m-flex-4' },\n      { width: 5, class: 'pf-m-flex-5' }\n    ].forEach(testCase => {\n      const view = shallow(\n        <DataListCell width={testCase.width} key=\"list-id-1\" id=\"primary-item\">\n          Primary Id\n        </DataListCell>\n      );\n      testCase.class === ''\n        ? expect(view.props().className).toBe('pf-c-data-list__cell')\n        : expect(view.props().className).toBe(`pf-c-data-list__cell ${testCase.class}`);\n    });\n  });\n\n  test('Toggle default with aria label', () => {\n    const view = shallow(\n      <DataListToggle aria-label=\"Toggle details for\" aria-labelledby=\"ex-toggle2 ex-item2\" id=\"ex-toggle2\" />\n    );\n\n    expect(view.find(Button).props()['aria-label']).toBe('Toggle details for');\n    expect(view.find(Button).props()['aria-labelledby']).toBe(null);\n    expect(view.find(Button).props()['aria-expanded']).toBe(false);\n    expect(view.find(Button).props().id).toBe('ex-toggle2');\n    expect(view.find(Button).props().id).toBe('ex-toggle2');\n  });\n\n  test('Toggle expanded', () => {\n    const view = shallow(<DataListToggle aria-label=\"Toggle details for\" id=\"ex-toggle2\" isExpanded />);\n    expect(view.find(Button).props()['aria-expanded']).toBe(true);\n  });\n\n  test('DataListAction dropdown', () => {\n    const view = shallow(\n      <DataListAction aria-label=\"Actions\" aria-labelledby=\"ex-action\" id=\"ex-action\">\n        <Dropdown\n          isPlain\n          position={DropdownPosition.right}\n          toggle={<KebabToggle />}\n          dropdownItems={[\n            <DropdownItem component=\"button\" onClick={jest.fn()} key=\"action-1\">\n              action-1\n            </DropdownItem>,\n            <DropdownItem component=\"button\" onClick={jest.fn()} key=\"action-2\">\n              action-2\n            </DropdownItem>\n          ]}\n        />\n      </DataListAction>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('DataListAction button', () => {\n    const view = shallow(\n      <DataListAction aria-label=\"Actions\" aria-labelledby=\"ex-action\" id=\"ex-action\">\n        <Button id=\"delete-item-1\">Delete</Button>\n      </DataListAction>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('DataListAction visibility - show button when lg', () => {\n    const view = shallow(\n      <DataListAction\n        className={css(DataListActionVisibility.visibleOnLg, DataListActionVisibility.hidden)}\n        aria-labelledby=\"check-action-item2 check-action-action2\"\n        id=\"check-action-action2\"\n        aria-label=\"Actions\"\n      >\n        <Button variant=\"primary\">Primary</Button>\n      </DataListAction>\n    );\n    expect(view.find('div').props().className).toContain('pf-m-hidden');\n    expect(view.find('div').props().className).toContain('pf-m-visible-on-lg');\n  });\n\n  test('DataListAction visibility - hide button on 2xl', () => {\n    const view = shallow(\n      <DataListAction\n        className={css(DataListActionVisibility.hiddenOn2Xl)}\n        aria-labelledby=\"check-action-item2 check-action-action2\"\n        id=\"check-action-action2\"\n        aria-label=\"Actions\"\n      >\n        <Button variant=\"primary\">Primary</Button>\n      </DataListAction>\n    );\n    expect(view.find('div').props().className).toContain('pf-m-hidden-on-2xl');\n  });\n\n  test('DataListContent', () => {\n    const view = shallow(<DataListContent aria-label=\"Primary Content Details\"> test</DataListContent>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('DataListContent noPadding', () => {\n    const view = shallow(\n      <DataListContent aria-label=\"Primary Content Details\" hidden noPadding>\n        test\n      </DataListContent>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"DataList.test.js"}