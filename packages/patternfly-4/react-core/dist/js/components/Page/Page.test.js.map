{"version":3,"sources":["../../../../src/components/Page/Page.test.tsx"],"names":["props","test","Header","undefined","Sidebar","view","expect","toMatchSnapshot","PageBreadcrumb","find","getDOMNode","id","toBe","mainId","PageSkipToContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { Page } from './Page';\nimport { PageHeader } from './PageHeader';\nimport { PageSidebar } from './PageSidebar';\nimport { PageSection } from './PageSection';\nimport { Breadcrumb, BreadcrumbItem } from '../Breadcrumb';\nimport { SkipToContent } from '../SkipToContent';\n\nconst props = {\n  'aria-label': 'Page layout',\n  'id': 'PageId',\n  'className': 'my-page-class'\n};\n\ntest('Check page vertical layout example against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" onNavToggle={() => undefined} />;\n  const Sidebar = <PageSidebar nav=\"Navigation\" isNavOpen />;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check dark page against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" onNavToggle={() => undefined} />;\n  const Sidebar = <PageSidebar nav=\"Navigation\" isNavOpen theme=\"dark\"/>;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check page horizontal layout example against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check page to verify breadcrumb is created', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const PageBreadcrumb = () => (\n    <Breadcrumb>\n      <BreadcrumbItem>Section Home</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\" isActive>\n        Section Landing\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar} breadcrumb={<PageBreadcrumb />}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n  expect(view.find('.pf-c-page__main').getDOMNode().id).toBe('');\n});\n\ntest('Check page to verify skip to content points to main content region', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const PageBreadcrumb = (\n    <Breadcrumb>\n      <BreadcrumbItem>Section Home</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\" isActive>\n        Section Landing\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n  const mainId = 'main-content-page-layout-test-nav';\n  const PageSkipToContent = <SkipToContent href={`#${mainId}`}>Skip to Content</SkipToContent>;\n  const view = mount(\n    <Page\n      {...props}\n      header={Header}\n      sidebar={Sidebar}\n      breadcrumb={PageBreadcrumb}\n      skipToContent={PageSkipToContent}\n      mainContainerId={mainId}\n    >\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n  expect(view.find('.pf-c-page').getDOMNode().id).toBe(props.id);\n  expect(view.find('.pf-c-page__main').getDOMNode().id).toBe(mainId);\n});\n"],"file":"Page.test.js"}