{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/sortable.tsx"],"names":["sortable","label","columnIndex","column","property","extraParams","sortBy","onSort","extraData","isSortedBy","index","sortClicked","event","reversedDirection","SortByDirection","asc","direction","desc","styles","tableSort","modifiers","selected","buttonStyles","button","plain"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,QAA2E;AAAA,MAA5CC,WAA4C,QAA5CA,WAA4C;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,4BAG7FD,MAH6F,CAE/FE,WAF+F;AAAA,MAEhFC,MAFgF,uBAEhFA,MAFgF;AAAA,MAExEC,MAFwE,uBAExEA,MAFwE;AAIjG,MAAMC,SAAS,GAAG;AAChBN,IAAAA,WAAW,EAAXA,WADgB;AAEhBC,IAAAA,MAAM,EAANA,MAFgB;AAGhBC,IAAAA,QAAQ,EAARA;AAHgB,GAAlB;AAMA,MAAMK,UAAU,GAAGH,MAAM,IAAIJ,WAAW,KAAKI,MAAM,CAACI,KAApD;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA8C;AAC5C,QAAIC,iBAAJ;;AACA,QAAI,CAACJ,UAAL,EAAiB;AACfI,MAAAA,iBAAiB,GAAGC,uBAAgBC,GAApC;AACD,KAFD,MAEO;AACLF,MAAAA,iBAAiB,GAAGP,MAAM,CAACU,SAAP,KAAqBF,uBAAgBC,GAArC,GAA2CD,uBAAgBG,IAA3D,GAAkEH,uBAAgBC,GAAtG;AACD,KAN2C,CAO5C;;;AACAR,IAAAA,MAAM,IAAIA,MAAM,CAACK,KAAD,EAAQV,WAAR,EAAqBW,iBAArB,EAAwCL,SAAxC,CAAhB;AACD;;AAED,SAAO;AACL,iBAAa,sBAAIU,kBAAOC,SAAX,EAAsBV,UAAU,IAAIS,kBAAOE,SAAP,CAAiBC,QAArD,CADR;AAEL,iBAAaZ,UAAU,aAAMH,MAAM,CAACU,SAAb,cAAiC,MAFnD;AAGL,gBACE,oBAAC,sBAAD;AACE,MAAA,UAAU,EAAEP,UADd;AAEE,MAAA,aAAa,EAAEA,UAAU,GAAGH,MAAM,CAACU,SAAV,GAAsB,EAFjD;AAGE,MAAA,MAAM,EAAEL,WAHV;AAIE,MAAA,SAAS,EAAE,sBAAIW,mBAAaC,MAAjB,EAAyBD,mBAAaF,SAAb,CAAuBI,KAAhD;AAJb,OAMGvB,KANH;AAJG,GAAP;AAcD,CApCM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { SortByDirection, IExtra, IFormatterValueType } from '../../Table';\nimport { SortColumn } from '../../SortColumn';\n\nexport const sortable = (label: IFormatterValueType, { columnIndex, column, property }: IExtra) => {\n  const {\n    extraParams: { sortBy, onSort }\n  } = column;\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  function sortClicked(event: React.MouseEvent) {\n    let reversedDirection;\n    if (!isSortedBy) {\n      reversedDirection = SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    }\n    // tslint:disable-next-line:no-unused-expression\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    \"className\": css(styles.tableSort, isSortedBy && styles.modifiers.selected),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    \"children\": (\n      <SortColumn\n        isSortedBy={isSortedBy}\n        sortDirection={isSortedBy ? sortBy.direction : ''}\n        onSort={sortClicked}\n        className={css(buttonStyles.button, buttonStyles.modifiers.plain)}\n      >\n        {label}\n      </SortColumn>\n    )\n  };\n};\n"],"file":"sortable.js"}