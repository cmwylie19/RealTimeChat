{"version":3,"sources":["../../../../src/components/Dropdown/InternalDropdownItem.tsx"],"names":["React","css","DropdownContext","KEY_CODES","KEYHANDLER_DIRECTION","Tooltip","InternalDropdownItem","Component","createRef","event","keyCode","TAB","preventDefault","ARROW_UP","props","context","keyHandler","index","UP","ARROW_DOWN","DOWN","ENTER","childNode","ref","current","childNodes","length","click","componentDidMount","isDisabled","role","sendRef","render","className","children","isHovered","onClick","component","href","tooltip","tooltipProps","additionalProps","isComponentReactElement","classes","tabIndex","disabled","type","isValidElement","renderWithTooltip","onSelect","itemClass","disabledClass","hoverClass","onKeyDown","cloneElement","undefined","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEY_CODES, KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { Tooltip } from '../Tooltip';\n\nexport interface InternalDropdownItemProps extends React.HTMLProps<HTMLAnchorElement> {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Indicates which component will be used as dropdown item */\n  component?: React.ReactNode | string;\n  /** Role for the item */\n  role?: string;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  index?: number;\n  context?: {\n    keyHandler?: (index: number, direction: string) => void,\n    sendRef?: (index: number, ref: any, isDisabled: boolean, isSeparator: boolean) => void\n  };\n  /** Callback for click event */\n  onClick?: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => void;\n}\n\nexport class InternalDropdownItem extends React.Component<InternalDropdownItemProps> {\n  ref = React.createRef<HTMLLIElement>();\n\n  static defaultProps = {\n    className: '',\n    isHovered: false,\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    href: '',\n    tooltipProps: {},\n    onClick: (event: React.MouseEvent<HTMLAnchorElement>) => undefined as any,\n    onSelect: () => undefined as any,\n    index: -1,\n    context: {\n      keyHandler: Function.prototype,\n      sendRef: Function.prototype\n    },\n  };\n\n  componentDidMount() {\n    const { context, index, isDisabled, role } = this.props;\n    context.sendRef(index, this.ref.current, isDisabled, role === 'separator');\n  }\n\n  onKeyDown = (event: any) => {\n    // Detected key press on this item, notify the menu parent so that the appropriate\n    // item can be focused\n    if (event.keyCode === KEY_CODES.TAB) { return; }\n    event.preventDefault();\n    if (event.keyCode === KEY_CODES.ARROW_UP) {\n      this.props.context.keyHandler(this.props.index, KEYHANDLER_DIRECTION.UP);\n    } else if (event.keyCode === KEY_CODES.ARROW_DOWN) {\n      this.props.context.keyHandler(this.props.index, KEYHANDLER_DIRECTION.DOWN);\n    } else if (event.keyCode === KEY_CODES.ENTER) {\n      const childNode = ((this.ref.current && this.ref.current.childNodes && this.ref.current.childNodes.length) ? this.ref.current.childNodes[0] : this.ref.current) as HTMLElement;\n      if (childNode.click) {\n        childNode.click();\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      isHovered,\n      context,\n      onClick,\n      component,\n      role,\n      isDisabled,\n      index,\n      href,\n      tooltip,\n      tooltipProps,\n      ...additionalProps\n    } = this.props;\n    const Component = component as any;\n    let isComponentReactElement = false;\n    let classes: string;\n    if (Component === 'a') {\n      additionalProps['aria-disabled'] = isDisabled;\n      additionalProps.tabIndex = isDisabled ? -1 : additionalProps.tabIndex;\n    } else if (Component === 'button') {\n      additionalProps.disabled = isDisabled;\n      additionalProps.type = additionalProps.type || 'button';\n    } else if (React.isValidElement(Component)) {\n      // Render a custom wrapper component, for example router Link component\n      // instead of our wrapper\n      isComponentReactElement = true;\n    }\n\n    const renderWithTooltip = (childNode: React.ReactNode) =>\n      tooltip ? (\n        <Tooltip content={tooltip} {...tooltipProps}>\n          {childNode}\n        </Tooltip>\n      ) : (\n        childNode\n      );\n\n    return (\n      <DropdownContext.Consumer>\n        {({ onSelect, itemClass, disabledClass, hoverClass }) => {\n          if (this.props.role === 'separator') {\n            classes = className;\n          } else {\n            classes = css(isDisabled && disabledClass, isHovered && hoverClass, className);\n          }\n          return (\n            <li \n              role={role} \n              ref={this.ref} \n              onKeyDown={this.onKeyDown}\n              onClick={(event: any) => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event);\n                }\n              }}\n            >\n              {renderWithTooltip(\n                isComponentReactElement ? React.cloneElement(Component as React.ReactHTMLElement<any>, {\n                  ...additionalProps,\n                  className: css(classes, itemClass)\n                }) :\n                <Component\n                  {...additionalProps}\n                  href={href || null}\n                  className={css(classes, this.props.role !== 'separator' && itemClass)}\n                >\n                  {children}\n                </Component>\n              )}\n            </li>\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"],"file":"InternalDropdownItem.js"}