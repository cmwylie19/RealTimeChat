{"version":3,"sources":["../../../../src/layouts/Flex/Flex.test.tsx"],"names":["React","Flex","FlexItem","shallow","test","view","expect","toMatchSnapshot","prop","testId","toBe"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEAC,IAAI,CAAC,8BAAD,EAAiC,MAAM;AACzC,QAAMC,IAAI,GAAGF,OAAO,CAClB,oBAAC,IAAD,QACE,oBAAC,QAAD,eADF,CADkB,CAApB;AAKAG,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAPG,CAAJ;AASAH,IAAI,CAAC,aAAD,EAAgB,MAAM;AACxB,QAAMC,IAAI,GAAGF,OAAO,CAClB,oBAAC,IAAD,QACE,oBAAC,IAAD,QACE,oBAAC,QAAD,eADF,CADF,CADkB,CAApB;AAOAG,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CATG,CAAJ;AAWAH,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,QAAMC,IAAI,GAAGF,OAAO,CAAC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC;AAAhB,IAAD,CAApB;AACAG,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BD,eAA/B;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,QAAMK,MAAM,GAAG,MAAf;AACA,QAAMJ,IAAI,GAAGF,OAAO,CAAC,oBAAC,IAAD;AAAM,mBAAaM;AAAnB,IAAD,CAApB;AACAH,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,CAJG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { Flex } from './Flex';\nimport { FlexItem } from './FlexItem';\nimport { shallow } from 'enzyme';\n\ntest('Simple flex with single item', () => {\n  const view = shallow(\n    <Flex>\n      <FlexItem>Test</FlexItem>\n    </Flex>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Nested flex', () => {\n  const view = shallow(\n    <Flex>\n      <Flex>\n        <FlexItem>Test</FlexItem>\n      </Flex>\n    </Flex>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('className is added to the root element', () => {\n  const view = shallow(<Flex className=\"extra-class\" />);\n  expect(view.prop('className')).toMatchSnapshot();\n});\n\ntest('extra props are spread to the root element', () => {\n  const testId = 'flex';\n  const view = shallow(<Flex data-testid={testId} />);\n  expect(view.prop('data-testid')).toBe(testId);\n});\n"],"file":"Flex.test.js"}