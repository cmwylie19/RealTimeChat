{"version":3,"sources":["../../../esm/components/Form/FormGroup.test.js"],"names":["describe","returnFunction","React","createElement","test","view","FormGroup","label","fieldId","helperText","id","expect","toMatchSnapshot","isInline","isRequired","Form","isHorizontal","isValid","helperTextInvalid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormGroup } from './FormGroup';\nimport { Form } from './Form';\nimport { mount } from 'enzyme';\ndescribe('FormGroup component', () => {\n  const returnFunction = () => React.createElement(\"div\", null, \"label\");\n\n  test('should render default form group variant', () => {\n    const view = mount(React.createElement(FormGroup, {\n      label: \"label\",\n      fieldId: \"label-id\",\n      helperText: \"this is helper text\"\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render inline form group variant', () => {\n    const view = mount(React.createElement(FormGroup, {\n      isInline: true,\n      label: \"label\",\n      fieldId: \"label-id\",\n      helperText: \"this is helper text\"\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant with required label', () => {\n    const view = mount(React.createElement(FormGroup, {\n      label: \"label\",\n      isRequired: true,\n      fieldId: \"label-id\"\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant with node label', () => {\n    const view = mount(React.createElement(FormGroup, {\n      fieldId: \"id\",\n      label: React.createElement(\"h1\", null, \"Header\")\n    }, React.createElement(\"input\", {\n      \"aria-label\": \"input\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant with function label', () => {\n    const view = mount(React.createElement(FormGroup, {\n      fieldId: \"id\",\n      label: returnFunction()\n    }, React.createElement(\"input\", {\n      \"aria-label\": \"input\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant with node helperText', () => {\n    const view = mount(React.createElement(FormGroup, {\n      label: \"Label\",\n      fieldId: \"label-id\",\n      helperText: React.createElement(\"h1\", null, \"Header\")\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant with function helperText', () => {\n    const view = mount(React.createElement(FormGroup, {\n      label: \"Label\",\n      fieldId: \"label-id\",\n      helperText: returnFunction()\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render horizontal form group variant', () => {\n    const view = mount(React.createElement(Form, {\n      isHorizontal: true\n    }, React.createElement(FormGroup, {\n      label: \"label\",\n      fieldId: \"label-id\",\n      helperText: \"this is helperText\"\n    }, React.createElement(\"input\", {\n      id: \"label-id\"\n    }))));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group variant without label', () => {\n    const view = mount(React.createElement(FormGroup, {\n      fieldId: \"id\"\n    }, React.createElement(\"input\", {\n      \"aria-label\": \"input\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group required variant', () => {\n    const view = mount(React.createElement(FormGroup, {\n      isRequired: true,\n      label: \"label\",\n      fieldId: \"id\"\n    }, React.createElement(\"input\", {\n      id: \"id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render form group invalid variant', () => {\n    const view = mount(React.createElement(FormGroup, {\n      label: \"label\",\n      fieldId: \"label-id\",\n      isValid: false,\n      helperTextInvalid: \"Invalid FormGroup\"\n    }, React.createElement(\"input\", {\n      id: \"id\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render correctly when label is not a string with Children = Array', () => {\n    const view = mount(React.createElement(FormGroup, {\n      fieldId: \"id\",\n      label: returnFunction()\n    }, React.createElement(\"input\", {\n      \"aria-label\": \"label\"\n    }), React.createElement(\"input\", {\n      id: \"id\"\n    }), React.createElement(\"input\", null)));\n    expect(view).toMatchSnapshot();\n  });\n});\n//# sourceMappingURL=FormGroup.test.js.map"],"file":"FormGroup.test.js"}