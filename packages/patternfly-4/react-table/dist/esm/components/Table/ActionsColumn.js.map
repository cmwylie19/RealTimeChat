{"version":3,"sources":["../../../../src/components/Table/ActionsColumn.tsx"],"names":["React","Dropdown","DropdownPosition","DropdownDirection","KebabToggle","DropdownItem","DropdownSeparator","ActionsColumn","Component","constructor","props","isOpen","setState","event","onClick","rowData","extraData","preventDefault","rowIndex","state","render","items","children","dropdownPosition","dropdownDirection","isDisabled","onToggle","map","key","title","itemKey","isSeparator","onSelect","right","down"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle,\n  DropdownItem,\n  DropdownSeparator\n} from '@patternfly/react-core';\n\nimport { IAction, IExtraData, IRowData } from './Table';\n\nexport interface ActionsColumnProps {\n  children?: React.ReactNode;\n  items: IAction[];\n  isDisabled?: boolean;\n  dropdownPosition?: DropdownPosition;\n  dropdownDirection?: DropdownDirection;\n  rowData?: IRowData;\n  extraData?: IExtraData;\n}\n\nexport interface ActionsColumnState {\n  isOpen: boolean;\n}\n\nexport class ActionsColumn extends React.Component<ActionsColumnProps, ActionsColumnState> {\n  static defaultProps = {\n    children: null as React.ReactNode,\n    items: [] as IAction[],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    rowData: {} as IRowData,\n    extraData: {} as IExtraData\n  };\n  constructor(props: ActionsColumnProps) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  onToggle = (isOpen: boolean): void => {\n    this.setState({\n      isOpen\n    });\n  }\n\n  onSelect = (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n              onClick: ((event: React.MouseEvent, rowIndex: number | undefined, rowData: IRowData, extraData: IExtraData) => void) | undefined): void => {\n    const { rowData, extraData } = this.props;\n    event.preventDefault();\n    // tslint:disable-next-line:no-unused-expression\n    onClick && onClick(event as React.MouseEvent, extraData && extraData.rowIndex, rowData, extraData);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, children, dropdownPosition, dropdownDirection, isDisabled } = this.props;\n    return (\n      <React.Fragment>\n        <Dropdown\n          toggle={<KebabToggle isDisabled={isDisabled} onToggle={this.onToggle} />}\n          position={dropdownPosition}\n          direction={dropdownDirection}\n          isOpen={isOpen}\n          dropdownItems={items.map(\n            ({ title, itemKey, onClick, isSeparator, ...props }, key) =>\n              isSeparator ? (\n                <DropdownSeparator {...props} key={itemKey || key} data-key={itemKey || key} />\n              ) : (\n                <DropdownItem\n                  onClick={(event) => this.onSelect(event, onClick)}\n                  {...props}\n                  key={itemKey || key}\n                  data-key={itemKey || key}\n                >\n                  {title}\n                </DropdownItem>\n              )\n          )}\n          isPlain\n        />\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n"],"file":"ActionsColumn.js"}