{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/selectable.tsx"],"names":["React","css","styles","SelectColumn","selectable","label","rowIndex","columnIndex","rowData","column","property","extraParams","onSelect","allRowsSelected","rowLabeledBy","extraData","hasOwnProperty","showSelect","component","isVisible","scope","rowId","undefined","selectClick","event","selected","target","checked","customProps","className","tableCheck","children"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAA6B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA,MAAlC;AAA0CC,EAAAA;AAA1C,CAA7B,KAA8F;AACtH,QAAM;AACJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,eAAZ;AAA6BC,MAAAA,YAAY,GAAG;AAA5C;AADT,MAEFL,MAFJ;AAGA,QAAMM,SAAS,GAAG;AAChBT,IAAAA,QADgB;AAEhBC,IAAAA,WAFgB;AAGhBE,IAAAA,MAHgB;AAIhBC,IAAAA;AAJgB,GAAlB;;AAOA,MAAIF,OAAO,IAAIA,OAAO,CAACQ,cAAR,CAAuB,QAAvB,CAAX,IAA+C,CAACR,OAAO,CAACS,UAA5D,EAAwE;AACtE,WAAO;AACLC,MAAAA,SAAS,EAAE,IADN;AAELC,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD;;AACD,QAAMC,KAAK,GAAGf,QAAQ,KAAKgB,SAAb,GAAyBhB,QAAzB,GAAoC,CAAC,CAAnD;;AAEA,WAASiB,WAAT,CAAqBC,KAArB,EAAiE;AAC/D,UAAMC,QAAQ,GAAGnB,QAAQ,KAAKgB,SAAb,GAAyBE,KAAK,CAACE,MAAN,CAAaC,OAAtC,GAAgDnB,OAAO,IAAI,CAACA,OAAO,CAACiB,QAArF,CAD+D,CAE/D;AACA;;AACAb,IAAAA,QAAQ,IAAIA,QAAQ,CAAEY,KAAF,EAAyCC,QAAzC,EAAmDJ,KAAnD,EAA0Db,OAA1D,EAAmEO,SAAnE,CAApB;AACD;;AACD,QAAMa,WAAW,qBACXP,KAAK,KAAK,CAAC,CAAX,GACA;AACE,eAAWb,OAAO,IAAI,CAAC,CAACA,OAAO,CAACiB,QADlC;AAEE,uBAAmBX,YAAY,GAAGR;AAFpC,GADA,GAKA;AACE,eAAWO,eADb;AAEE,kBAAc;AAFhB,GANW,CAAjB;;AAYA,SAAO;AACLgB,IAAAA,SAAS,EAAE5B,GAAG,CAACC,MAAM,CAAC4B,UAAR,CADT;AAELZ,IAAAA,SAAS,EAAE,IAFN;AAGLE,IAAAA,KAAK,EAAE,EAHF;AAILD,IAAAA,SAAS,EAAE,IAJN;AAKLY,IAAAA,QAAQ,EACN,oBAAC,YAAD,eAAkBH,WAAlB;AAA+B,MAAA,QAAQ,EAAEL,WAAzC;AAAsD,MAAA,IAAI,EAAEF,KAAK,KAAK,CAAC,CAAX,GAAgB,WAAUf,QAAS,EAAnC,GAAuC;AAAnG,QACGD,KADH;AANG,GAAP;AAWD,CAjDM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType } from '../../Table';\nimport { SelectColumn } from '../../SelectColumn';\n\nexport const selectable = (label: IFormatterValueType, { rowIndex, columnIndex, rowData, column, property }: IExtra) => {\n  const {\n    extraParams: { onSelect, allRowsSelected, rowLabeledBy = 'simple-node' }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  if (rowData && rowData.hasOwnProperty('parent') && !rowData.showSelect) {\n    return {\n      component: 'td',\n      isVisible: true,\n      scope: ''\n    };\n  }\n  const rowId = rowIndex !== undefined ? rowIndex : -1;\n\n  function selectClick(event: React.ChangeEvent<HTMLInputElement>) {\n    const selected = rowIndex === undefined ? event.target.checked : rowData && !rowData.selected;\n    // todo: change event type to React.FormEvent<HTMLInputElement> in the future, breaking change a.t.m.\n    // tslint:disable-next-line:no-unused-expression\n    onSelect && onSelect((event as unknown) as React.MouseEvent, selected, rowId, rowData, extraData);\n  }\n  const customProps = {\n    ...(rowId !== -1\n      ? {\n          \"checked\": rowData && !!rowData.selected,\n          'aria-labelledby': rowLabeledBy + rowIndex\n        }\n      : {\n          \"checked\": allRowsSelected,\n          'aria-label': 'Select all rows'\n        })\n  };\n\n  return {\n    className: css(styles.tableCheck),\n    component: 'td',\n    scope: '',\n    isVisible: true,\n    children: (\n      <SelectColumn {...customProps} onSelect={selectClick} name={rowId !== -1 ? `checkrow${rowIndex}` : 'check-all'}>\n        {label}\n      </SelectColumn>\n    )\n  };\n};\n"],"file":"selectable.js"}