{"version":3,"sources":["../../../../src/components/Switch/Switch.tsx"],"names":["React","styles","css","CheckIcon","getUniqueId","withOuiaContext","Switch","Component","constructor","props","id","console","error","render","className","label","labelOff","isChecked","isDisabled","onChange","ouiaContext","ouiaId","isAriaLabelledBy","switch","isOuia","switchInput","event","target","checked","switchToggle","switchLabel","modifiers","on","off","switchToggleIcon","undefined","SwitchWithOuiaContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { getUniqueId } from '../../helpers/util';\nimport { Omit } from '../../helpers/typeUtils';\nimport { InjectedOuiaProps, withOuiaContext } from '../withOuia';\n\nexport interface SwitchProps extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'> {\n  /** id for the label. */\n  id?: string;\n  /** Additional classes added to the Switch */\n  className?: string;\n  /** Text value for the label when on */\n  label?: string;\n  /** Text value for the label when off */\n  labelOff?: string;\n  /** Flag to show if the Switch is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the Switch is disabled. */\n  isDisabled?: boolean;\n  /** A callback for when the Switch selection changes. (isChecked, event) => {} */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Adds accessible text to the Switch, and should describe the isChecked=\"true\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true. */\n  'aria-label'?: string;\n}\n\nclass Switch extends React.Component<SwitchProps & InjectedOuiaProps> {\n  id = '';\n\n  static defaultProps = {\n    \"id\": '',\n    \"className\": '',\n    \"label\": '',\n    \"labelOff\": '',\n    \"isChecked\": true,\n    \"isDisabled\": false,\n    'aria-label': '',\n    \"onChange\": () => undefined as any\n  };\n\n  constructor(props: SwitchProps & InjectedOuiaProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // tslint:disable-next-line:no-console\n      console.error('Switch: Switch requires either an id or aria-label to be specified');\n    }\n    this.id = props.id || getUniqueId();\n  }\n\n  render() {\n    const { className, label, labelOff, isChecked, isDisabled, onChange, ouiaContext, ouiaId, ...props } = this.props;\n    const isAriaLabelledBy = props['aria-label'] === '';\n    return (\n      <label\n        className={css(styles.switch, className)}\n        htmlFor={this.id}\n        {...ouiaContext.isOuia && {\n          'data-ouia-component-type': 'Switch',\n          'data-ouia-component-id': ouiaId || ouiaContext.ouiaId\n        }}\n      >\n        <input\n          id={this.id}\n          className={css(styles.switchInput)}\n          type=\"checkbox\"\n          onChange={(event) => onChange(event.target.checked, event)}\n          defaultChecked={isChecked}\n          disabled={isDisabled}\n          aria-labelledby={isAriaLabelledBy ? `${this.id}-on`: null}\n          {...props}\n        />\n        {label !== '' ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)} />\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff || label}\n            </span>\n          </React.Fragment>\n        ) : label !== '' && labelOff !== '' ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)} />\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff}\n            </span>\n          </React.Fragment>\n        ) : (\n          <span className={css(styles.switchToggle)}>\n            <div className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n              <CheckIcon noVerticalAlign />\n            </div>\n          </span>\n        )}\n      </label>\n    );\n  }\n}\n\nconst SwitchWithOuiaContext = withOuiaContext(Switch);\n\nexport { SwitchWithOuiaContext as Switch };\n"],"file":"Switch.js"}