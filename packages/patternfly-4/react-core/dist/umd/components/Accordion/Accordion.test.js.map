{"version":3,"sources":["../../../esm/components/Accordion/Accordion.test.js"],"names":["describe","test","view","React","createElement","Accordion","expect","render","toMatchSnapshot","asDefinitionList","headingLevel","AccordionItem","AccordionToggle","id","AccordionContent","button","find","getElement","props","toBe","isExpanded","className","toContain","container","component","getDOMNode","tagName","toLocaleUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { Accordion } from './Accordion';\nimport { AccordionToggle } from './AccordionToggle';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionItem } from './AccordionItem';\ndescribe('Accordion', () => {\n  test('Accordion default', () => {\n    const view = shallow(React.createElement(Accordion, {\n      \"aria-label\": \"this is a simple accordion\"\n    }));\n    expect(view.render()).toMatchSnapshot();\n  });\n  test('Accordion with non-default headingLevel', () => {\n    const view = shallow(React.createElement(Accordion, {\n      asDefinitionList: false,\n      headingLevel: \"h2\"\n    }, React.createElement(AccordionItem, null, React.createElement(AccordionToggle, {\n      id: \"item-1\"\n    }, \"Item One\"), React.createElement(AccordionContent, null, \"Item One Content\"))));\n    expect(view.render()).toMatchSnapshot();\n  });\n  test('It should pass optional aria props', () => {\n    const view = mount(React.createElement(Accordion, {\n      asDefinitionList: true\n    }, React.createElement(AccordionToggle, {\n      \"aria-label\": \"Toggle details for\",\n      \"aria-labelledby\": \"ex-toggle2 ex-item2\",\n      id: \"ex-toggle2\"\n    })));\n    const button = view.find('button[id=\"ex-toggle2\"]').getElement();\n    expect(button.props['aria-label']).toBe('Toggle details for');\n    expect(button.props['aria-labelledby']).toBe('ex-toggle2 ex-item2');\n    expect(button.props['aria-expanded']).toBe(false);\n  });\n  test('Toggle expanded', () => {\n    const view = mount(React.createElement(Accordion, {\n      asDefinitionList: true\n    }, React.createElement(AccordionToggle, {\n      \"aria-label\": \"Toggle details for\",\n      id: \"ex-toggle2\",\n      isExpanded: true\n    })));\n    const button = view.find('button[id=\"ex-toggle2\"]').getElement();\n    expect(button.props['aria-expanded']).toBe(true);\n    expect(button.props.className).toContain('pf-m-expanded');\n  });\n  test('Custom containers', () => {\n    const container = 'a';\n    const view = mount(React.createElement(Accordion, {\n      headingLevel: \"h2\"\n    }, React.createElement(AccordionItem, null, React.createElement(AccordionToggle, {\n      id: \"item-1\",\n      component: container\n    }, \"Item One\"), React.createElement(AccordionContent, {\n      component: container\n    }, \"Item One Content\"))));\n    expect(view.find(AccordionToggle).getDOMNode().tagName).toBe(container.toLocaleUpperCase());\n    expect(view.find(AccordionContent).getDOMNode().tagName).toBe(container.toLocaleUpperCase());\n  });\n});\n//# sourceMappingURL=Accordion.test.js.map"],"file":"Accordion.test.js"}