{"version":3,"sources":["../../../../src/components/Select/CheckboxSelectOption.test.tsx"],"names":["describe","test","view","jest","fn","expect","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,yBAAD,EAA4B,YAAM;AACxCC,EAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAM;AACtD,QAAMC,IAAI,GAAG,qBAAQ,gCAAC,0CAAD;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAA5C,MAAR,CAAb;AACAC,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GAHG,CAAJ;AAKAL,EAAAA,IAAI,CAAC,oCAAD,EAAuC,YAAM;AAC/C,QAAMC,IAAI,GAAG,qBACX,gCAAC,0CAAD;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAA5C,OACE,oDADF,CADW,CAAb;AAIAC,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GANG,CAAJ;AAQAN,EAAAA,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,IAAAA,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,UAAMC,IAAI,GAAG,qBAAQ,gCAAC,0CAAD;AAAsB,QAAA,SAAS,MAA/B;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAA6C,QAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAAtD,QAAR,CAAb;AACAC,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KAHG,CAAJ;AAID,GALO,CAAR;AAOAN,EAAAA,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzBC,IAAAA,IAAI,CAAC,+BAAD,EAAkC,YAAM;AAC1C,UAAMC,IAAI,GAAG,qBAAQ,gCAAC,0CAAD;AAAsB,QAAA,UAAU,MAAhC;AAAiC,QAAA,KAAK,EAAC,MAAvC;AAA8C,QAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAAvD,QAAR,CAAb;AACAC,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KAHG,CAAJ;AAID,GALO,CAAR;AAMD,CA3BO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { CheckboxSelectOption } from './CheckboxSelectOption';\n\ndescribe('checkbox select options', () => {\n  test('renders with value parameter successfully', () => {\n    const view = shallow(<CheckboxSelectOption value=\"test\" sendRef={jest.fn()} />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('renders with children successfully', () => {\n    const view = shallow(\n      <CheckboxSelectOption value=\"test\" sendRef={jest.fn()}>\n        <div>test</div>\n      </CheckboxSelectOption>);\n    expect(view).toMatchSnapshot();\n  });\n\n  describe('hover', () => {\n    test('renders with checked successfully', () => {\n      const view = shallow(<CheckboxSelectOption isChecked value=\"test\" sendRef={jest.fn()} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n\n  describe('disabled', () => {\n    test('renders disabled successfully', () => {\n      const view = shallow(<CheckboxSelectOption isDisabled value=\"test\" sendRef={jest.fn()} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"CheckboxSelectOption.test.js"}