{"version":3,"sources":["../../../../src/components/Select/SelectOption.tsx"],"names":["React","styles","default","checkStyles","css","CheckIcon","SelectConsumer","SelectVariant","KeyTypes","SelectOption","Component","createRef","event","key","Tab","preventDefault","ArrowUp","props","keyHandler","index","ArrowDown","Enter","ref","current","click","context","variant","checkbox","focus","componentDidMount","sendRef","componentDidUpdate","render","children","className","value","onClick","isDisabled","isPlaceholder","isSelected","isChecked","isFocused","onSelect","onClose","selectMenuItem","modifiers","selected","disabled","onKeyDown","toString","selectMenuItemIcon","check","checkInput","checkLabel","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { default as checkStyles } from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { SelectConsumer, SelectVariant, KeyTypes } from './selectConstants';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface SelectOptionObject {\n  toString(): string;\n}\nexport interface SelectOptionProps extends Omit<React.HTMLProps<HTMLElement>, 'type' | 'ref' | 'value'> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Internal index of the option */\n  index?: number;\n  /** The value for the option, if passing an object you most provide a toString function */\n  value: string | SelectOptionObject;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the option acts as a placeholder */\n  isPlaceholder?: boolean;\n  /** Internal flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Internal flag indicating if the option is focused */\n  isFocused?: boolean;\n  /** Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, index: number) => void;\n  /** Internal callback for keyboard navigation */\n  keyHandler?: (index: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\n\nexport class SelectOption extends React.Component<SelectOptionProps> {\n  private ref = React.createRef<any>();\n  static defaultProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isPlaceholder: false,\n    isSelected: false,\n    isChecked: false,\n    isFocused: false,\n    onClick: Function.prototype,\n    sendRef: Function.prototype,\n    keyHandler: Function.prototype\n  };\n\n  componentDidMount() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KeyTypes.Tab) {\n      return;\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      this.props.keyHandler(this.props.index, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      this.props.keyHandler(this.props.index, 'down');\n    } else if (event.key === KeyTypes.Enter) {\n      this.ref.current.click();\n      if (this.context.variant === SelectVariant.checkbox) {\n        this.ref.current.focus();\n      }\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      ...props\n    } = this.props;\n    return (\n      <SelectConsumer>\n        {({ onSelect, onClose, variant }) => (\n          <React.Fragment>\n            {variant !== SelectVariant.checkbox && (\n              <li role=\"presentation\">\n                <button\n                  {...props}\n                  className={css(\n                    styles.selectMenuItem,\n                    isSelected && styles.modifiers.selected,\n                    isDisabled && styles.modifiers.disabled,\n                    isFocused && styles.modifiers.focus,\n                    className\n                  )}\n                  onClick={(event) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value, isPlaceholder);\n                      onClose();\n                    }\n                  }}\n                  role=\"option\"\n                  aria-selected={isSelected || null}\n                  ref={this.ref}\n                  onKeyDown={this.onKeyDown}\n                  type=\"button\"\n                >\n                  {children || value.toString()}\n                  {isSelected && <CheckIcon className={css(styles.selectMenuItemIcon)} aria-hidden />}\n                </button>\n              </li>\n            )}\n            {variant === SelectVariant.checkbox && (\n              <label\n                {...props}\n                className={css(\n                  checkStyles.check,\n                  styles.selectMenuItem,\n                  isDisabled && styles.modifiers.disabled,\n                  className\n                )}\n                onKeyDown={this.onKeyDown}\n              >\n                <input\n                  id={value.toString()}\n                  className={css(checkStyles.checkInput)}\n                  type=\"checkbox\"\n                  onChange={(event) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value);\n                    }\n                  }}\n                  ref={this.ref}\n                  defaultChecked={isChecked || false}\n                  disabled={isDisabled}\n                />\n                <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{children || value.toString()}</span>\n              </label>\n            )}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"],"file":"SelectOption.js"}