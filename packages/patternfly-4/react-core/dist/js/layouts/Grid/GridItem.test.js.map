{"version":3,"sources":["../../../../src/layouts/Grid/GridItem.test.tsx"],"names":["test","view","expect","props","className","toMatchSnapshot","Object","values","DeviceSizes","forEach","size"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,IAAI,CAAC,iBAAD,EAAoB,YAAM;AAC5B,MAAMC,IAAI,GAAG,qBAAQ,oBAAC,kBAAD;AAAU,IAAA,IAAI,EAAE;AAAhB,IAAR,CAAb;AACAC,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAL,IAAI,CAAC,mBAAD,EAAsB,YAAM;AAC9B,MAAMC,IAAI,GAAG,qBAAQ,oBAAC,kBAAD;AAAU,IAAA,MAAM,EAAE;AAAlB,IAAR,CAAb;AACAC,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAL,IAAI,CAAC,gBAAD,EAAmB,YAAM;AAC3B,MAAMC,IAAI,GAAG,qBAAQ,oBAAC,kBAAD;AAAU,IAAA,OAAO,EAAE;AAAnB,IAAR,CAAb;AACAC,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAC,MAAM,CAACC,MAAP,CAAcC,kBAAd,EAA2BC,OAA3B,CAAmC,UAACC,IAAD,EAAU;AAC3CV,EAAAA,IAAI,gBAASU,IAAT,kBAA4B,YAAM;AACpC,QAAMP,KAAK,uBAAMO,IAAN,EAAa,CAAb,CAAX;;AACA,QAAMT,IAAI,GAAG,qBAAQ,oBAAC,kBAAD,EAAcE,KAAd,CAAR,CAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAMAL,EAAAA,IAAI,gBAASU,IAAT,sBAAgC,YAAM;AACxC,QAAMP,KAAK,iCAASO,IAAT,aAAwB,CAAxB,CAAX;;AACA,QAAMT,IAAI,GAAG,qBAAQ,oBAAC,kBAAD,EAAcE,KAAd,CAAR,CAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAMAL,EAAAA,IAAI,gBAASU,IAAT,mBAA6B,YAAM;AACrC,QAAMP,KAAK,iCAASO,IAAT,cAAyB,CAAzB,CAAX;;AACA,QAAMT,IAAI,GAAG,qBAAQ,oBAAC,kBAAD,EAAcE,KAAd,CAAR,CAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAKD,CAlBD","sourcesContent":["import * as React from 'react';\nimport { GridItem } from './GridItem';\nimport { shallow } from 'enzyme';\nimport { DeviceSizes } from '../../styles/sizes';\n\ntest('adds span class', () => {\n  const view = shallow(<GridItem span={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\ntest('adds offset class', () => {\n  const view = shallow(<GridItem offset={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\ntest('adds row class', () => {\n  const view = shallow(<GridItem rowSpan={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\nObject.values(DeviceSizes).forEach((size) => {\n  test(`adds ${size} span class`, () => {\n    const props = { [size]: 4 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n\n  test(`adds ${size} offset classes`, () => {\n    const props = { [`${size}Offset`]: 1 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n\n  test(`adds ${size} row classes`, () => {\n    const props = { [`${size}RowSpan`]: 1 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n});\n"],"file":"GridItem.test.js"}