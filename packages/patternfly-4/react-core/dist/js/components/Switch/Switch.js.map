{"version":3,"sources":["../../../../src/components/Switch/Switch.tsx"],"names":["Switch","props","id","console","error","className","label","labelOff","isChecked","isDisabled","onChange","ouiaContext","ouiaId","isAriaLabelledBy","styles","isOuia","switchInput","event","target","checked","switchToggle","switchLabel","modifiers","on","off","switchToggleIcon","React","Component","undefined","SwitchWithOuiaContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { getUniqueId } from '../../helpers/util';\nimport { Omit } from '../../helpers/typeUtils';\nimport { InjectedOuiaProps, withOuiaContext } from '../withOuia';\n\nexport interface SwitchProps extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'> {\n  /** id for the label. */\n  id?: string;\n  /** Additional classes added to the Switch */\n  className?: string;\n  /** Text value for the label when on */\n  label?: string;\n  /** Text value for the label when off */\n  labelOff?: string;\n  /** Flag to show if the Switch is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the Switch is disabled. */\n  isDisabled?: boolean;\n  /** A callback for when the Switch selection changes. (isChecked, event) => {} */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Adds accessible text to the Switch, and should describe the isChecked=\"true\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true. */\n  'aria-label'?: string;\n}\n\nclass Switch extends React.Component<SwitchProps & InjectedOuiaProps> {\n  id = '';\n\n  static defaultProps = {\n    \"id\": '',\n    \"className\": '',\n    \"label\": '',\n    \"labelOff\": '',\n    \"isChecked\": true,\n    \"isDisabled\": false,\n    'aria-label': '',\n    \"onChange\": () => undefined as any\n  };\n\n  constructor(props: SwitchProps & InjectedOuiaProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // tslint:disable-next-line:no-console\n      console.error('Switch: Switch requires either an id or aria-label to be specified');\n    }\n    this.id = props.id || getUniqueId();\n  }\n\n  render() {\n    const { className, label, labelOff, isChecked, isDisabled, onChange, ouiaContext, ouiaId, ...props } = this.props;\n    const isAriaLabelledBy = props['aria-label'] === '';\n    return (\n      <label\n        className={css(styles.switch, className)}\n        htmlFor={this.id}\n        {...ouiaContext.isOuia && {\n          'data-ouia-component-type': 'Switch',\n          'data-ouia-component-id': ouiaId || ouiaContext.ouiaId\n        }}\n      >\n        <input\n          id={this.id}\n          className={css(styles.switchInput)}\n          type=\"checkbox\"\n          onChange={(event) => onChange(event.target.checked, event)}\n          defaultChecked={isChecked}\n          disabled={isDisabled}\n          aria-labelledby={isAriaLabelledBy ? `${this.id}-on`: null}\n          {...props}\n        />\n        {label !== '' ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)} />\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff || label}\n            </span>\n          </React.Fragment>\n        ) : label !== '' && labelOff !== '' ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)} />\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff}\n            </span>\n          </React.Fragment>\n        ) : (\n          <span className={css(styles.switchToggle)}>\n            <div className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n              <CheckIcon noVerticalAlign />\n            </div>\n          </span>\n        )}\n      </label>\n    );\n  }\n}\n\nconst SwitchWithOuiaContext = withOuiaContext(Switch);\n\nexport { SwitchWithOuiaContext as Switch };\n"],"file":"Switch.js"}