{"version":3,"sources":["../../../../src/components/Tabs/TabContent.tsx"],"names":["TabContent0","id","activeKey","ariaLabel","child","children","className","eventKey","innerRef","props","labelledBy","TabContent","React","forwardRef","ref"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;AAqBA,IAAMA,WAAsC,GAAG,SAAzCA,WAAyC,OAUxB;AAAA,MATrBC,EASqB,QATrBA,EASqB;AAAA,MARrBC,SAQqB,QARrBA,SAQqB;AAAA,MAPPC,SAOO,QAPrB,YAOqB;AAAA,MANrBC,KAMqB,QANrBA,KAMqB;AAAA,MALrBC,QAKqB,QALrBA,QAKqB;AAAA,MAJrBC,SAIqB,QAJrBA,SAIqB;AAAA,MAHrBC,QAGqB,QAHrBA,QAGqB;AAAA,MAFrBC,QAEqB,QAFrBA,QAEqB;AAAA,MADlBC,KACkB;;AACrB,MAAIJ,QAAQ,IAAID,KAAhB,EAAuB;AACrB,QAAIM,UAAJ;;AACA,QAAIP,SAAJ,EAAe;AACbO,MAAAA,UAAU,GAAG,IAAb;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,GAAGL,QAAQ,oBAAaE,QAAb,cAAyBN,EAAzB,qBAA0CG,KAAK,CAACK,KAAN,CAAYF,QAAtD,cAAkEN,EAAlE,CAArB;AACD;;AAED,WACE;AACE,MAAA,GAAG,EAAEO,QADP;AAEE,MAAA,MAAM,EAAEH,QAAQ,GAAG,IAAH,GAAUD,KAAK,CAACK,KAAN,CAAYF,QAAZ,KAAyBL,SAFrD;AAGE,MAAA,SAAS,EAAEG,QAAQ,GAAG,sBAAI,kBAAJ,EAAwBC,SAAxB,CAAH,GAAwC,sBAAI,kBAAJ,EAAwBF,KAAK,CAACK,KAAN,CAAYH,SAApC,CAH7D;AAIE,MAAA,EAAE,EAAED,QAAQ,GAAGJ,EAAH,4BAA0BG,KAAK,CAACK,KAAN,CAAYF,QAAtC,cAAkDN,EAAlD,CAJd;AAKE,oBAAYE,SALd;AAME,yBAAiBO,UANnB;AAOE,MAAA,IAAI,EAAC,UAPP;AAQE,MAAA,QAAQ,EAAE;AARZ,OASMD,KATN,GAWGJ,QAAQ,IAAID,KAAK,CAACK,KAAN,CAAYJ,QAX3B,CADF;AAeD;;AACD,SAAO,IAAP;AACD,CApCD,C,CAsCA;;;;AAvDEA,EAAAA,Q;AAEAD,EAAAA,K;AAEAE,EAAAA,S;AAEAJ,EAAAA,S;AAEAK,EAAAA,Q;AAEAC,EAAAA,Q;AAEAP,EAAAA,E;AAEA,c;;AA0CK,IAAMU,UAAU,GAAGC,KAAK,CAACC,UAAN,CAAuC,UAACJ,KAAD,EAAQK,GAAR;AAAA,SAAgB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA;AAAvB,KAAgCL,KAAhC,EAAhB;AAAA,CAAvC,CAAnB","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TabContentProps extends React.HTMLProps<HTMLElement> {\n  /** content rendered inside the tab content area if used outside Tabs component */\n  children?: any;\n  /** Child to show in the content area */\n  child?: React.ReactElement<any>;\n  /** class of tab content area if used outside Tabs component */\n  className?: string;\n  /** Identifies the active Tab  */\n  activeKey?: number | string;\n  /** uniquely identifies the controlling Tab if used outside Tabs component */\n  eventKey?: number | string;\n  /** Callback for the section ref */\n  innerRef?: React.Ref<any>;\n  /** id passed from parent to identify the content section */\n  id: string;\n  /** title of controlling Tab if used outside Tabs component */\n  'aria-label'?: string;\n}\n\nconst TabContent0: React.FC<TabContentProps> = ({\n  id,\n  activeKey,\n  'aria-label': ariaLabel,\n  child,\n  children,\n  className,\n  eventKey,\n  innerRef,\n  ...props\n}: TabContentProps) => {\n  if (children || child) {\n    let labelledBy: string;\n    if (ariaLabel) {\n      labelledBy = null;\n    } else {\n      labelledBy = children ? `pf-tab-${eventKey}-${id}` : `pf-tab-${child.props.eventKey}-${id}`;\n    }\n\n    return (\n      <section\n        ref={innerRef}\n        hidden={children ? null : child.props.eventKey !== activeKey}\n        className={children ? css('pf-c-tab-content', className) : css('pf-c-tab-content', child.props.className)}\n        id={children ? id : `pf-tab-section-${child.props.eventKey}-${id}`}\n        aria-label={ariaLabel}\n        aria-labelledby={labelledBy}\n        role=\"tabpanel\"\n        tabIndex={0}\n        {...props}\n      >\n        {children || child.props.children}\n      </section>\n    );\n  }\n  return null;\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport const TabContent = React.forwardRef<any, TabContentProps>((props, ref) => <TabContent0 innerRef={ref} {...props} />);\n"],"file":"TabContent.js"}