{"version":3,"sources":["../../../../src/components/Pagination/Pagination.test.tsx"],"names":["describe","test","wrapper","expect","toMatchSnapshot","PaginationVariant","bottom","title","value","items","page","onSetPage","jest","fn","find","first","simulate","mock","calls","toHaveLength","toBe","target","keyCode","onFirst","onLast","onPrevious","onNext","onPerPage","update"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { Pagination, PaginationVariant } from './index';\n\ndescribe('component render', () => {\n  test('should render correctly top', () => {\n    const wrapper = mount(<Pagination itemCount={20} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('should render correctly bottom', () => {\n    const wrapper = mount(<Pagination itemCount={20} variant={PaginationVariant.bottom} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n  \n  test('should render correctly compact', () => {\n    const wrapper = mount(<Pagination itemCount={20} isCompact />);\n    expect(wrapper).toMatchSnapshot();\n  });\n  \n  test('should render correctly disabled', () => {\n    const wrapper = mount(<Pagination itemCount={20} isDisabled />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('limited number of pages', () => {\n    const wrapper = mount(<Pagination itemCount={20} perPage={20} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('zero results', () => {\n    const wrapper = mount(<Pagination itemCount={0} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('last page', () => {\n    const wrapper = mount(<Pagination itemCount={20} perPage={10} page={2} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('custom perPageOptions', () => {\n    const wrapper = mount(<Pagination itemCount={40} perPageOptions={[{ title: 'some', value: 1 }]} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('empty per page options', () => {\n    const wrapper = mount(<Pagination itemCount={40} perPageOptions={[]} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('no items', () => {\n    const wrapper = mount(<Pagination itemCount={0} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('custom start end', () => {\n    const wrapper = mount(<Pagination itemCount={40} itemsStart={5} itemsEnd={15} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('titles', () => {\n    const wrapper = mount(<Pagination itemCount={40} titles={{ items: 'values', page: 'books' }} />);\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('custom pagination toggle', () => {\n    const wrapper = mount(\n      // eslint-disable-next-line no-template-curly-in-string\n      <Pagination itemCount={40} toggleTemplate={'${firstIndex} - ${lastIndex} - ${itemCount} - ${itemsTitle}'} />\n    );\n    expect(wrapper).toMatchSnapshot();\n  });\n\n  test('up drop direction', () => {\n    const wrapper = mount(<Pagination itemCount={40} dropDirection=\"up\" />);\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n\ndescribe('API', () => {\n  describe('onSetPage', () => {\n    const onSetPage = jest.fn();\n\n    test('should call first', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} page={2} />);\n      wrapper\n        .find('[data-action=\"first\"]')\n        .first()\n        .simulate('click');\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(1);\n    });\n\n    test('should call previous', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} page={3} />);\n      wrapper\n        .find('[data-action=\"previous\"]')\n        .first()\n        .simulate('click');\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(2);\n    });\n\n    test('should call next', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('[data-action=\"next\"]')\n        .first()\n        .simulate('click');\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(2);\n    });\n\n    test('should call last', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('[data-action=\"last\"]')\n        .first()\n        .simulate('click');\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(4);\n    });\n\n    test('should call input', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('input')\n        .first()\n        .simulate('change', { target: { value: '1' } })\n        .simulate('keydown', { keyCode: 13 });\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(1);\n    });\n\n    test('should call input wrong value', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('input')\n        .first()\n        .simulate('change', { target: { value: 'a' } })\n        .simulate('keydown', { keyCode: 13 });\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(1);\n    });\n\n    test('should call input huge page number', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('input')\n        .first()\n        .simulate('change', { target: { value: '10' } })\n        .simulate('keydown', { keyCode: 13 });\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(4);\n    });\n\n    test('should call input small page number', () => {\n      const wrapper = mount(<Pagination onSetPage={onSetPage} itemCount={40} />);\n      wrapper\n        .find('input')\n        .first()\n        .simulate('change', { target: { value: '-10' } })\n        .simulate('keydown', { keyCode: 13 });\n      expect(onSetPage.mock.calls).toHaveLength(1);\n      expect(onSetPage.mock.calls[0][1]).toBe(1);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} />);\n      wrapper\n        .find('[data-action=\"last\"]')\n        .first()\n        .simulate('click');\n      expect(onSetPage.mock.calls).toHaveLength(0);\n    });\n  });\n\n  describe('onFirst', () => {\n    const onFirst = jest.fn();\n    test('should call', () => {\n      const wrapper = mount(<Pagination onFirstClick={onFirst} itemCount={40} page={2} />);\n      wrapper\n        .find('[data-action=\"first\"]')\n        .first()\n        .simulate('click');\n      expect(onFirst.mock.calls).toHaveLength(1);\n      expect(onFirst.mock.calls[0][1]).toBe(1);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} page={2} />);\n      wrapper\n        .find('[data-action=\"first\"]')\n        .first()\n        .simulate('click');\n      expect(onFirst.mock.calls).toHaveLength(0);\n    });\n  });\n\n  describe('onLast', () => {\n    const onLast = jest.fn();\n    test('should call', () => {\n      const wrapper = mount(<Pagination onLastClick={onLast} itemCount={40} />);\n      wrapper\n        .find('[data-action=\"last\"]')\n        .first()\n        .simulate('click');\n      expect(onLast.mock.calls).toHaveLength(1);\n      expect(onLast.mock.calls[0][1]).toBe(4);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} />);\n      wrapper\n        .find('[data-action=\"last\"]')\n        .first()\n        .simulate('click');\n      expect(onLast.mock.calls).toHaveLength(0);\n    });\n  });\n\n  describe('onPrevious', () => {\n    const onPrevious = jest.fn();\n    test('should call', () => {\n      const wrapper = mount(<Pagination onPreviousClick={onPrevious} itemCount={40} page={3} />);\n      wrapper\n        .find('[data-action=\"previous\"]')\n        .first()\n        .simulate('click');\n      expect(onPrevious.mock.calls).toHaveLength(1);\n      expect(onPrevious.mock.calls[0][1]).toBe(2);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} />);\n      wrapper\n        .find('[data-action=\"previous\"]')\n        .first()\n        .simulate('click');\n      expect(onPrevious.mock.calls).toHaveLength(0);\n    });\n  });\n\n  describe('onNext', () => {\n    const onNext = jest.fn();\n    test('should call', () => {\n      const wrapper = mount(<Pagination onNextClick={onNext} itemCount={40} />);\n      wrapper\n        .find('[data-action=\"next\"]')\n        .first()\n        .simulate('click');\n      expect(onNext.mock.calls).toHaveLength(1);\n      expect(onNext.mock.calls[0][1]).toBe(2);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} />);\n      wrapper\n        .find('[data-action=\"previous\"]')\n        .first()\n        .simulate('click');\n      expect(onNext.mock.calls).toHaveLength(0);\n    });\n  });\n\n  describe('onPerPage', () => {\n    const onPerPage = jest.fn();\n    test('should call', () => {\n      const wrapper = mount(<Pagination onPerPageSelect={onPerPage} itemCount={40} />);\n      wrapper\n        .find('.pf-c-options-menu button')\n        .first()\n        .simulate('click');\n      wrapper.update();\n      wrapper\n        .find('ul li [data-action=\"per-page-20\"]')\n        .first()\n        .simulate('click');\n      expect(onPerPage.mock.calls).toHaveLength(1);\n      expect(onPerPage.mock.calls[0][1]).toBe(20);\n    });\n\n    test('should NOT call', () => {\n      const wrapper = mount(<Pagination itemCount={40} />);\n      wrapper\n        .find('.pf-c-options-menu button')\n        .first()\n        .simulate('click');\n      wrapper.update();\n      wrapper\n        .find('ul li [data-action=\"per-page-20\"]')\n        .first()\n        .simulate('click');\n      expect(onPerPage.mock.calls).toHaveLength(0);\n    });\n  });\n});\n"],"file":"Pagination.test.js"}