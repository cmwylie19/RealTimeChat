{"version":3,"sources":["../../../esm/components/ClipboardCopy/ClipboardCopyToggle.test.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","id","textId","contentId","isExpanded","className","onClick","jest","fn","test","desc","view","React","createElement","ClipboardCopyToggle","expect","toMatchSnapshot","onclick","find","simulate","toBeCalled","toBe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,WAASA,QAAT,GAAoB;AAAEA,IAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,YAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,aAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,cAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,YAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,aAAOL,MAAP;AAAgB,KAA5P;;AAA8P,WAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAK7T,QAAMQ,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAE,OADQ;AAEZC,IAAAA,MAAM,EAAE,YAFI;AAGZC,IAAAA,SAAS,EAAE,eAHC;AAIZC,IAAAA,UAAU,EAAE,KAJA;AAKZC,IAAAA,SAAS,EAAE,aALC;AAMZC,IAAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AANG,GAAd;AAQAC,EAAAA,IAAI,CAAC,sBAAD,EAAyB,MAAM;AACjC,UAAMC,IAAI,GAAG,gBAAb;AACA,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC3B,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAChF,oBAAcU;AADkE,KAAZ,CAAjD,CAAR,CAAb;AAGAK,IAAAA,MAAM,CAACJ,IAAD,CAAN,CAAaK,eAAb;AACD,GANG,CAAJ;AAOAP,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMQ,OAAO,GAAGV,IAAI,CAACC,EAAL,EAAhB;AACA,UAAMG,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC3B,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAChFM,MAAAA,OAAO,EAAEW;AADuE,KAAZ,CAAjD,CAAR,CAAb;AAGAN,IAAAA,IAAI,CAACO,IAAL,CAAU,QAAV,EAAoBC,QAApB,CAA6B,OAA7B;AACAJ,IAAAA,MAAM,CAACE,OAAD,CAAN,CAAgBG,UAAhB;AACD,GAPG,CAAJ;AAQAX,EAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,QAAIE,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC3B,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAC9EI,MAAAA,UAAU,EAAE;AADkE,KAAZ,CAAjD,CAAR,CAAX;AAGAW,IAAAA,MAAM,CAACJ,IAAI,CAACX,KAAL,GAAa,eAAb,CAAD,CAAN,CAAsCqB,IAAtC,CAA2C,IAA3C;AACAV,IAAAA,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC3B,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAC1EI,MAAAA,UAAU,EAAE;AAD8D,KAAZ,CAAjD,CAAR,CAAP;AAGAW,IAAAA,MAAM,CAACJ,IAAI,CAACX,KAAL,GAAa,eAAb,CAAD,CAAN,CAAsCqB,IAAtC,CAA2C,KAA3C;AACD,GATG,CAAJ","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nconst props = {\n  id: 'my-id',\n  textId: 'my-text-id',\n  contentId: 'my-content-id',\n  isExpanded: false,\n  className: 'myclassName',\n  onClick: jest.fn()\n};\ntest('toggle button render', () => {\n  const desc = 'toggle content';\n  const view = shallow(React.createElement(ClipboardCopyToggle, _extends({}, props, {\n    \"aria-label\": desc\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('toggle button onClick', () => {\n  const onclick = jest.fn();\n  const view = shallow(React.createElement(ClipboardCopyToggle, _extends({}, props, {\n    onClick: onclick\n  })));\n  view.find('button').simulate('click');\n  expect(onclick).toBeCalled();\n});\ntest('toggle button is on expanded mode', () => {\n  let view = shallow(React.createElement(ClipboardCopyToggle, _extends({}, props, {\n    isExpanded: true\n  })));\n  expect(view.props()['aria-expanded']).toBe(true);\n  view = shallow(React.createElement(ClipboardCopyToggle, _extends({}, props, {\n    isExpanded: false\n  })));\n  expect(view.props()['aria-expanded']).toBe(false);\n});\n//# sourceMappingURL=ClipboardCopyToggle.test.js.map"],"file":"ClipboardCopyToggle.test.js"}