{"version":3,"sources":["../../../../src/components/Text/Text.tsx"],"names":["TextVariants","Text","children","className","component","p","props","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEYA,Y;;;WAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,4BAAAA,Y;;AAuBL,IAAMC,IAAwC,GAAG,SAA3CA,IAA2C,OAKvC;AAAA,2BAJfC,QAIe;AAAA,MAJfA,QAIe,8BAJJ,IAII;AAAA,4BAHfC,SAGe;AAAA,MAHfA,SAGe,+BAHH,EAGG;AAAA,4BAFfC,SAEe;AAAA,MAFfA,SAEe,+BAFHJ,YAAY,CAACK,CAEV;AAAA,MADZC,KACY;;AACf,MAAMC,SAAc,GAAGH,SAAvB;AAEA,SACE,oBAAC,SAAD,eAAeE,KAAf;AAAsB,2BAAtB;AAAsC,IAAA,SAAS,EAAE,sBAAIH,SAAJ;AAAjD,MACGD,QADH,CADF;AAKD,CAbM;;;;AAPLE,EAAAA,S,+BAAY,I,EAAO,I,EAAO,I,EAAO,I,EAAO,I,EAAO,I,EAAO,G,EAAM,G,EAAM,O,EAAU,Y,EAAe,K;AAE3FF,EAAAA,Q;AAEAC,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\n\nexport enum TextVariants {\n  h1 = 'h1',\n  h2 = 'h2',\n  h3 = 'h3',\n  h4 = 'h4',\n  h5 = 'h5',\n  h6 = 'h6',\n  p = 'p',\n  a = 'a',\n  small = 'small',\n  blockquote = 'blockquote',\n  pre = 'pre'\n}\n\nexport interface TextProps extends React.HTMLProps<HTMLElement> {\n  /** The text component */\n  component?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'a' | 'small' | 'blockquote' | 'pre';\n  /** Content rendered within the Text */\n  children?: React.ReactNode;\n  /** Additional classes added to the Text */\n  className?: string;\n}\n\nexport const Text: React.FunctionComponent<TextProps> = ({\n  children = null,\n  className = '',\n  component = TextVariants.p,\n  ...props\n}: TextProps) => {\n  const Component: any = component;\n\n  return (\n    <Component {...props} data-pf-content className={css(className)}>\n      {children}\n    </Component>\n  );\n};\n"],"file":"Text.js"}