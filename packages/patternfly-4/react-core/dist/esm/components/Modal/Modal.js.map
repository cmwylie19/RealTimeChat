{"version":3,"sources":["../../../../src/components/Modal/Modal.tsx"],"names":["React","ReactDOM","canUseDOM","css","styles","KEY_CODES","ModalContent","Modal","Component","constructor","props","event","keyCode","ESCAPE_KEY","isOpen","onClose","appendTo","target","hide","getElement","bodyChildren","children","child","Array","from","state","container","setAttribute","removeAttribute","newId","currentId","id","undefined","componentDidMount","document","createElement","setState","appendChild","addEventListener","handleEscKeyClick","classList","add","backdropOpen","remove","componentDidUpdate","toggleSiblingsFromScreenReaders","componentWillUnmount","removeChild","removeEventListener","render","createPortal","title","ariaDescribedById","className","header","hideTitle","showClose","footer","actions","isFooterLeftAligned","width","isLarge","isSmall","disableFocusTrap","body"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from 'exenv';\n\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\n\nimport { KEY_CODES } from '../../helpers/constants';\nimport { ModalContent } from './ModalContent';\n\nexport interface ModalProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the Modal. */\n  children: React.ReactNode;\n  /** Additional classes added to the Modal */\n  className?: string;\n  /** Flag to show the modal */\n  isOpen?: boolean;\n  /** Complex header (more than just text), supersedes title for header content */\n  header?: React.ReactNode;\n  /** Simple text content of the Modal Header, also used for aria-label on the body */\n  title: string;\n  /** Flag to hide the title */\n  hideTitle?: boolean;\n  /** Flag to show the close button in the header area of the modal */\n  showClose?: boolean;\n  /** Id to use for Modal Box description */\n  ariaDescribedById?: string;\n  /** Custom footer */\n  footer?: React.ReactNode;\n  /** Action buttons to add to the standard Modal Footer, ignored if `footer` is given */\n  actions?: any;\n  /** Flag to indicate that the Footer content is left aligned */\n  isFooterLeftAligned?: boolean;\n  /** A callback for when the close button is clicked */\n  onClose?: () => void;\n  /** Default width of the Modal. */\n  width?: number | string;\n  /** Creates a large version of the Modal */\n  isLarge?: boolean;\n  /** Creates a small version of the Modal */\n  isSmall?: boolean;\n  /** The parent container to append the modal to. Defaults to document.body */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n}\n\ninterface ModalState {\n  container: HTMLElement;\n}\n\nexport class Modal extends React.Component<ModalProps, ModalState> {\n  static currentId = 0;\n  id = '';\n\n  static defaultProps = {\n    className: '',\n    isOpen: false,\n    hideTitle: false,\n    showClose: true,\n    ariaDescribedById: '',\n    actions: [] as any[],\n    isFooterLeftAligned: false,\n    onClose: () => undefined as any,\n    isLarge: false,\n    isSmall: false,\n    appendTo: typeof document !== 'undefined' && document.body || null\n  };\n\n  constructor(props: ModalProps) {\n    super(props);\n    const newId = Modal.currentId++;\n    this.id = `pf-modal-${newId}`;\n\n    this.state = {\n      container: undefined\n    };\n  }\n\n  handleEscKeyClick = (event: KeyboardEvent): void => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n      this.props.onClose();\n    }\n  }\n\n  getElement = (appendTo: HTMLElement | (() => HTMLElement)) => {\n    let target: HTMLElement;\n    if (typeof appendTo === 'function') {\n      target = appendTo();\n    } else {\n      target = appendTo;\n    }\n    return target;\n  }\n\n  toggleSiblingsFromScreenReaders = (hide: boolean) => {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const bodyChildren = target.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.state.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const container = document.createElement('div');\n    this.setState({ container });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n\n  componentDidUpdate() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    const { appendTo, ...props } = this.props;\n    const { container } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <ModalContent {...props} title={this.props.title} id={this.id} ariaDescribedById={this.props.ariaDescribedById}/>,\n      container\n    );\n  }\n}\n"],"file":"Modal.js"}