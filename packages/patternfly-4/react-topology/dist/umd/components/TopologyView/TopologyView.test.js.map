{"version":3,"sources":["../../../esm/components/TopologyView/TopologyView.test.js"],"names":["React","describe","test","view","createElement","TopologyView","className","id","expect","toMatchSnapshot","contextToolbar","viewToolbar","controlBar","sideBar","sideBarOpen","find","length","toBe"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { TopologyView } from './index';\ndescribe('TopologyView', () => {\n  test('should display an empty topology correctly', () => {\n    const view = mount(React.createElement(TopologyView, {\n      className: \"my-test-class\",\n      id: \"simple-test-id\"\n    }));\n    expect(view).toMatchSnapshot();\n  });\n  test('should display topology correctly', () => {\n    const view = mount(React.createElement(TopologyView, {\n      className: \"my-test-class\",\n      id: \"simple-test-id\",\n      contextToolbar: React.createElement(\"div\", {\n        id: \"test-context-bar\"\n      }),\n      viewToolbar: React.createElement(\"div\", {\n        id: \"test-view-bar\"\n      }),\n      controlBar: React.createElement(\"div\", {\n        id: \"test-control-bar\"\n      })\n    }, React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n  });\n  test('should display topology sidebar correctly', () => {\n    const view = mount(React.createElement(TopologyView, {\n      className: \"my-test-class\",\n      id: \"simple-test-id\",\n      contextToolbar: React.createElement(\"div\", {\n        id: \"test-context-bar\"\n      }),\n      viewToolbar: React.createElement(\"div\", {\n        id: \"test-view-bar\"\n      }),\n      controlBar: React.createElement(\"div\", {\n        id: \"test-control-bar\"\n      }),\n      sideBar: React.createElement(\"div\", null, \"Test SideBar\"),\n      sideBarOpen: false\n    }, React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n    expect(view.find('div.pf-topology-container__with-sidebar').length).toBe(1);\n    expect(view.find('div.pf-topology-container__with-sidebar.pf-topology-container__with-sidebar--open').length).toBe(0);\n  });\n  test('should display topology w/ open sidebar correctly', () => {\n    const view = mount(React.createElement(TopologyView, {\n      className: \"my-test-class\",\n      id: \"simple-test-id\",\n      contextToolbar: React.createElement(\"div\", {\n        id: \"test-context-bar\"\n      }),\n      viewToolbar: React.createElement(\"div\", {\n        id: \"test-view-bar\"\n      }),\n      controlBar: React.createElement(\"div\", {\n        id: \"test-control-bar\"\n      }),\n      sideBar: React.createElement(\"div\", null, \"Test SideBar\"),\n      sideBarOpen: true\n    }, React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n    expect(view.find('div.pf-topology-container__with-sidebar.pf-topology-container__with-sidebar--open').length).toBe(1);\n  });\n});\n//# sourceMappingURL=TopologyView.test.js.map"],"file":"TopologyView.test.js"}