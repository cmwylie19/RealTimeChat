{"version":3,"sources":["../../../../src/components/Table/SortColumn.tsx"],"names":["React","LongArrowAltUpIcon","LongArrowAltDownIcon","ArrowsAltVIcon","css","styles","SortByDirection","SortColumn","children","className","isSortedBy","onSort","sortDirection","props","SortedByIcon","asc","event","tableSortIndicator"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,EAAmDC,cAAnD,QAAyE,yBAAzE;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAUA,OAAO,MAAMC,UAAoD,GAAG,UAO5C;AAAA,MAP6C;AACnEC,IAAAA,QAAQ,GAAG,IADwD;AAEnEC,IAAAA,SAAS,GAAG,EAFuD;AAGnEC,IAAAA,UAAU,GAAG,KAHsD;AAInEC,IAAAA,MAAM,GAAG,IAJ0D;AAKnEC,IAAAA,aAAa,GAAG;AALmD,GAO7C;AAAA,MADnBC,KACmB;;AACtB,MAAIC,YAAJ;;AACA,MAAIJ,UAAJ,EAAgB;AACdI,IAAAA,YAAY,GAAGF,aAAa,KAAKN,eAAe,CAACS,GAAlC,GAAwCd,kBAAxC,GAA6DC,oBAA5E;AACD,GAFD,MAEO;AACLY,IAAAA,YAAY,GAAGX,cAAf;AACD;;AACD,SACE,2CAAYU,KAAZ;AAAmB,IAAA,SAAS,EAAET,GAAG,CAACK,SAAD,CAAjC;AAA8C,IAAA,OAAO,EAAGO,KAAD,IAAWL,MAAM,IAAIA,MAAM,CAACK,KAAD;AAAlF,MACGR,QADH,EAEE;AAAM,IAAA,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACY,kBAAR;AAApB,KACE,oBAAC,YAAD,OADF,CAFF,CADF;AAQD,CAtBM;;AAPLT,EAAAA,Q;AACAC,EAAAA,S;AACAC,EAAAA,U;AACAC,EAAAA,M;AACAC,EAAAA,a","sourcesContent":["import * as React from 'react';\nimport { LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortByDirection } from './Table';\n\nexport interface SortColumnProps extends React.HTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode;\n  className?: string;\n  isSortedBy?: boolean;\n  onSort?: Function;\n  sortDirection?: string;\n}\n\nexport const SortColumn: React.FunctionComponent<SortColumnProps> = ({\n  children = null,\n  className = '',\n  isSortedBy = false,\n  onSort = null,\n  sortDirection = '',\n  ...props\n}: SortColumnProps ) => {\n  let SortedByIcon;\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n  return (\n    <button {...props} className={css(className)} onClick={(event) => onSort && onSort(event)}>\n      {children}\n      <span className={css(styles.tableSortIndicator)}>\n        <SortedByIcon />\n      </span>\n    </button>\n  );\n};\n"],"file":"SortColumn.js"}