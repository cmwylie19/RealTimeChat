{"version":3,"sources":["../../../../../src/demos/PageLayout/examples/PageLayoutGroupsNav.js"],"names":["React","Avatar","Brand","Button","ButtonVariant","Dropdown","DropdownToggle","DropdownItem","DropdownSeparator","KebabToggle","Nav","NavGroup","NavItem","Page","PageHeader","PageSection","PageSectionVariants","PageSidebar","SkipToContent","TextContent","Text","Toolbar","ToolbarGroup","ToolbarItem","accessibleStyles","spacingStyles","css","BellIcon","CogIcon","imgBrand","imgAvatar","PageLayoutGroupsNav","Component","constructor","props","isDropdownOpen","setState","event","state","isKebabDropdownOpen","result","activeItem","itemId","render","PageNav","onNavSelect","kebabDropdownItems","userDropdownItems","PageToolbar","screenReader","visibleOnLg","plain","hiddenOnLg","mr_0","onKebabDropdownSelect","onKebabDropdownToggle","visibleOnMd","onDropdownSelect","onDropdownToggle","Header","Sidebar","pageId","PageSkipToContent","light","dark","darker"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,aAJF,EAKEC,QALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,iBARF,EASEC,WATF,EAUEC,GAVF,EAWEC,QAXF,EAYEC,OAZF,EAaEC,IAbF,EAcEC,UAdF,EAeEC,WAfF,EAgBEC,mBAhBF,EAiBEC,WAjBF,EAkBEC,aAlBF,EAmBEC,WAnBF,EAoBEC,IApBF,EAqBEC,OArBF,EAsBEC,YAtBF,EAuBEC,WAvBF,QAwBO,wBAxBP,C,CAyBA;;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,yBAAlC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,mBAAN,SAAkC/B,KAAK,CAACgC,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,8CASAC,cAAc,IAAI;AACnC,WAAKC,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KAbkB;;AAAA,8CAeAE,KAAK,IAAI;AAC1B,WAAKD,QAAL,CAAc;AACZD,QAAAA,cAAc,EAAE,CAAC,KAAKG,KAAL,CAAWH;AADhB,OAAd;AAGD,KAnBkB;;AAAA,mDAqBKI,mBAAmB,IAAI;AAC7C,WAAKH,QAAL,CAAc;AACZG,QAAAA;AADY,OAAd;AAGD,KAzBkB;;AAAA,mDA2BKF,KAAK,IAAI;AAC/B,WAAKD,QAAL,CAAc;AACZG,QAAAA,mBAAmB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADrB,OAAd;AAGD,KA/BkB;;AAAA,yCAiCLC,MAAM,IAAI;AACtB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAED,MAAM,CAACE;AADP,OAAd;AAGD,KArCkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXH,MAAAA,cAAc,EAAE,KADL;AAEXI,MAAAA,mBAAmB,EAAE,KAFV;AAGXE,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAgCDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,cAAF;AAAkBI,MAAAA,mBAAlB;AAAuCE,MAAAA;AAAvC,QAAsD,KAAKH,KAAjE;AAEA,UAAMM,OAAO,GACX,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,KAAKC,WAApB;AAAiC,oBAAW,KAA5C;AAAkD,MAAA,KAAK,EAAC;AAAxD,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB,OACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEJ,UAAU,KAAK;AAAvD,kBADF,EAIE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,wBAJF,EAOE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,qBAPF,EAUE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,mBAVF,EAaE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,iBAbF,EAgBE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,iBAhBF,CADF,EAqBE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB,OACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,eADF,EAIE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,0BAJF,EAOE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEA,UAAU,KAAK;AAAvD,iBAPF,CArBF,CADF;AAmCA,UAAMK,kBAAkB,GAAG,CACzB,oBAAC,YAAD,QACE,oBAAC,QAAD,OADF,mBADyB,EAIzB,oBAAC,YAAD,QACE,oBAAC,OAAD,OADF,cAJyB,CAA3B;AAQA,UAAMC,iBAAiB,GAAG,CACxB,oBAAC,YAAD,eADwB,EAExB,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,gBAFwB,EAGxB,oBAAC,YAAD;AAAc,MAAA,UAAU;AAAxB,uBAHwB,EAIxB,oBAAC,YAAD;AAAc,MAAA,UAAU,MAAxB;AAAyB,MAAA,SAAS,EAAC;AAAnC,yBAJwB,EAOxB,oBAAC,iBAAD,OAPwB,EAQxB,oBAAC,YAAD,yBARwB,EASxB,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB,0BATwB,CAA1B;AAWA,UAAMC,WAAW,GACf,oBAAC,OAAD,QACE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEtB,GAAG,CAACF,gBAAgB,CAACyB,YAAlB,EAAgCzB,gBAAgB,CAAC0B,WAAjD;AAA5B,OACE,oBAAC,WAAD,QACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,uBAAX;AAAmC,oBAAW,uBAA9C;AAAsE,MAAA,OAAO,EAAE9C,aAAa,CAAC+C;AAA7F,OACE,oBAAC,QAAD,OADF,CADF,CADF,EAME,oBAAC,WAAD,QACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,uBAAX;AAAmC,oBAAW,iBAA9C;AAAgE,MAAA,OAAO,EAAE/C,aAAa,CAAC+C;AAAvF,OACE,oBAAC,OAAD,OADF,CADF,CANF,CADF,EAaE,oBAAC,YAAD,QACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEzB,GAAG,CAACF,gBAAgB,CAAC4B,UAAlB,EAA8B3B,aAAa,CAAC4B,IAA5C;AAA3B,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,QAAQ,EAAE,KAAKC,qBAHjB;AAIE,MAAA,MAAM,EAAE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKC;AAA5B,QAJV;AAKE,MAAA,MAAM,EAAEhB,mBALV;AAME,MAAA,aAAa,EAAEO;AANjB,MADF,CADF,EAWE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEpB,GAAG,CAACF,gBAAgB,CAACyB,YAAlB,EAAgCzB,gBAAgB,CAACgC,WAAjD;AAA3B,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,QAAQ,EAAE,KAAKC,gBAHjB;AAIE,MAAA,MAAM,EAAEtB,cAJV;AAKE,MAAA,MAAM,EAAE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKuB;AAA/B,sBALV;AAME,MAAA,aAAa,EAAEX;AANjB,MADF,CAXF,CAbF,CADF;AAuCA,UAAMY,MAAM,GACV,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE9B,QAAZ;AAAsB,QAAA,GAAG,EAAC;AAA1B,QADR;AAEE,MAAA,OAAO,EAAEmB,WAFX;AAGE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAElB,SAAb;AAAwB,QAAA,GAAG,EAAC;AAA5B,QAHV;AAIE,MAAA,aAAa;AAJf,MADF;AAQA,UAAM8B,OAAO,GAAG,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEhB,OAAlB;AAA2B,MAAA,KAAK,EAAC;AAAjC,MAAhB;AACA,UAAMiB,MAAM,GAAG,oCAAf;AACA,UAAMC,iBAAiB,GAAG,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAG,IAAGD,MAAO;AAAhC,yBAA1B;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP,QACE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAEF,MADV;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,gBAAgB,MAHlB;AAIE,MAAA,aAAa,EAAEE,iBAJjB;AAKE,MAAA,eAAe,EAAED;AALnB,OAOE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE7C,mBAAmB,CAAC+C;AAA1C,OACE,oBAAC,WAAD,QACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB,oBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB,gGACuF,+BADvF,8CAFF,CADF,CAPF,EAgBE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE/C,mBAAmB,CAAC+C;AAA1C,eAhBF,EAiBE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE/C,mBAAmB,CAACgD;AAA1C,cAjBF,EAkBE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEhD,mBAAmB,CAACiD;AAA1C,gBAlBF,EAmBE,oBAAC,WAAD,kBAnBF,CADF,CADF;AAyBD;;AA7K+C;;AAgLlD,eAAelC,mBAAf","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  KebabToggle,\n  Nav,\n  NavGroup,\n  NavItem,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\n// make sure you've installed @patternfly/patternfly\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport spacingStyles from '@patternfly/react-styles/css/utilities/Spacing/spacing';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport imgBrand from './imgBrand.png';\nimport imgAvatar from './imgAvatar.svg';\n\nclass PageLayoutGroupsNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 'grp-1_itm-1'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  }\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  }\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  }\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  }\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  }\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" theme=\"dark\">\n        <NavGroup title=\"System Panel\">\n          <NavItem itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n            Overview\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n            Resource Usage\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n            Hypervisors\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n            Instances\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n            Volumes\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n            Network\n          </NavItem>\n        </NavGroup>\n        <NavGroup title=\"Policy\">\n          <NavItem itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n            Hosts\n          </NavItem>\n          <NavItem itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n            Virtual Machines\n          </NavItem>\n          <NavItem itemId=\"grp-2_itm-3\" isActive={activeItem === 'grp-2_itm-3'}>\n            Storage\n          </NavItem>\n        </NavGroup>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <BellIcon /> Notifications\n      </DropdownItem>,\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownItem>Link</DropdownItem>,\n      <DropdownItem component=\"button\">Action</DropdownItem>,\n      <DropdownItem isDisabled>Disabled Link</DropdownItem>,\n      <DropdownItem isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator />,\n      <DropdownItem>Separated Link</DropdownItem>,\n      <DropdownItem component=\"button\">Separated Action</DropdownItem>\n    ];\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"groups-example-uid-01\" aria-label=\"Notifications actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"groups-example-uid-02\" aria-label=\"Setings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={imgAvatar} alt=\"Avatar image\" />}\n        showNavToggle\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} theme=\"dark\" />;\n    const pageId = 'main-content-page-layout-group-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\n          <PageSection>Content</PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutGroupsNav;\n"],"file":"PageLayoutGroupsNav.js"}