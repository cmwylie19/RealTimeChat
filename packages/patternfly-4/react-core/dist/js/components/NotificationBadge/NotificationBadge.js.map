{"version":3,"sources":["../../../../src/components/NotificationBadge/NotificationBadge.tsx"],"names":["NotificationBadge","isRead","className","children","props","ButtonVariant","plain","styles","notificationBadge","modifiers","read","unread"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAaO,IAAMA,iBAAkE,GAAG,SAArEA,iBAAqE;AAAA,yBAChFC,MADgF;AAAA,MAChFA,MADgF,4BACvE,KADuE;AAAA,MAEhFC,SAFgF,QAEhFA,SAFgF;AAAA,MAGhFC,QAHgF,QAGhFA,QAHgF;AAAA,MAI7EC,KAJ6E;;AAAA,SAMhF,oBAAC,cAAD;AAAQ,IAAA,OAAO,EAAEC,sBAAcC,KAA/B;AAAsC,IAAA,SAAS,EAAEJ;AAAjD,KAAgEE,KAAhE,GACE;AAAM,IAAA,SAAS,EAAE,sBAAIG,8BAAOC,iBAAX,EAA8BP,MAAM,GAAGM,8BAAOE,SAAP,CAAiBC,IAApB,GAA2BH,8BAAOE,SAAP,CAAiBE,MAAhF;AAAjB,KACGR,QADH,CADF,CANgF;AAAA,CAA3E;;;;AATLF,EAAAA,M;AAEAE,EAAAA,Q;AAEAD,EAAAA,S;AAEA,c","sourcesContent":["import * as React from 'react';\nimport { Button, ButtonVariant, ButtonProps } from '../Button';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationBadge/notification-badge';\n\nexport interface NotificationBadgeProps extends ButtonProps {\n  /**  Adds styling to the notification badge to indicate it has been read */\n  isRead?: boolean;\n  /** content rendered inside the Notification Badge */\n  children?: React.ReactNode;\n  /** additional classes added to the Notification Badge */\n  className?: string;\n  /** Adds accessible text to the Notification Badge. */\n  'aria-label'?: string;\n}\n\nexport const NotificationBadge: React.FunctionComponent<NotificationBadgeProps> = ({\n  isRead = false,\n  className,\n  children,\n  ...props\n}: NotificationBadgeProps) => (\n  <Button variant={ButtonVariant.plain} className={className} {...props}>\n    <span className={css(styles.notificationBadge, isRead ? styles.modifiers.read : styles.modifiers.unread)}>\n      {children}\n    </span>\n  </Button>\n);\n"],"file":"NotificationBadge.js"}