{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["React","styles","css","getModifier","withOuiaContext","ButtonVariant","ButtonType","Button","children","className","component","isActive","isBlock","isDisabled","isFocus","isHover","isInline","type","button","variant","primary","ariaLabel","icon","ouiaContext","ouiaId","props","Component","isButtonElement","modifiers","block","disabled","active","focus","hover","link","inline","isOuia","ButtonWithOuiaContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport { InjectedOuiaProps, withOuiaContext } from '../withOuia';\n\nexport enum ButtonVariant {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary',\n  danger = 'danger',\n  link = 'link',\n  plain = 'plain',\n  control = 'control'\n}\n\nexport enum ButtonType {\n  button = 'button',\n  submit = 'submit',\n  reset = 'reset'\n}\n\nexport interface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  /** Content rendered inside the button */\n  children?: React.ReactNode;\n  /** Additional classes added to the button */\n  className?: string;\n  /** Sets the base component to render. defaults to button */\n  component?: React.ReactNode;\n  /** Adds active styling to button. */\n  isActive?: boolean;\n  /** Adds block styling to button */\n  isBlock?: boolean;\n  /** Disables the button and adds disabled styling */\n  isDisabled?: boolean;\n  /** Adds focus styling to the button */\n  isFocus?: boolean;\n  /** Adds hover styling to the button */\n  isHover?: boolean;\n  /** Adds inline styling to a link button */\n  isInline?: boolean;\n  /** Sets button type */\n  type?: 'button' | 'submit' | 'reset';\n  /** Adds button variant styles */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger' | 'link' | 'plain' | 'control' ;\n  /** Adds accessible text to the button. */\n  'aria-label'?: string;\n  /** Icon for the button if variant is a link */\n  icon?: React.ReactNode | null;\n}\n\nconst Button: React.FunctionComponent<ButtonProps & InjectedOuiaProps> = ({\n  children = null,\n  className = '',\n  component = 'button',\n  isActive = false,\n  isBlock = false,\n  isDisabled = false,\n  isFocus = false,\n  isHover = false,\n  isInline = false,\n  type = ButtonType.button,\n  variant = ButtonVariant.primary,\n  'aria-label': ariaLabel = null,\n  icon = null,\n  ouiaContext = null,\n  ouiaId = null,\n  ...props\n}: ButtonProps & InjectedOuiaProps) => {\n  const Component = component as any;\n  const isButtonElement = Component === 'button';\n  return (\n  <Component\n    {...props}\n    aria-disabled={isButtonElement ? null : isDisabled}\n    aria-label={ariaLabel}\n    className={css(\n      styles.button,\n      getModifier(styles.modifiers, variant),\n      isBlock && styles.modifiers.block,\n      isDisabled && !isButtonElement && styles.modifiers.disabled,\n      isActive && styles.modifiers.active,\n      isFocus && styles.modifiers.focus,\n      isHover && styles.modifiers.hover,\n      isInline && variant === ButtonVariant.link && styles.modifiers.inline,\n      className\n    )}\n    disabled={isButtonElement ? isDisabled : null}\n    tabIndex={isDisabled && !isButtonElement ? -1 : null}\n    type={isButtonElement ? type : null}\n    {...ouiaContext.isOuia && {\n      'data-ouia-component-type': 'Button',\n      'data-ouia-component-id': ouiaId || ouiaContext.ouiaId\n    }}\n  >\n    {(icon && variant === ButtonVariant.link) && <span className=\"pf-c-button__icon\">{icon}</span>}\n    {children}\n  </Component>\n  );\n};\n\nconst  ButtonWithOuiaContext = withOuiaContext(Button);\nexport { ButtonWithOuiaContext as Button };\n"],"file":"Button.js"}