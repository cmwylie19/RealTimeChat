{"version":3,"sources":["../../../../src/components/Select/SelectMenu.tsx"],"names":["React","styles","default","formStyles","css","SelectConsumer","SelectVariant","FocusTrap","require","SelectMenu","Component","extendChildren","children","isGrouped","props","index","Children","map","group","cloneElement","titleId","label","replace","option","cloneOption","child","selected","sendRef","keyHandler","isSelected","constructor","Array","isArray","includes","value","id","toString","extendCheckboxChildren","checked","ariaLabel","ariaLabelledBy","formFieldset","isChecked","render","className","isExpanded","openedOnEnter","maxHeight","variant","checkbox","selectMenu","style","overflow","count","clickOutsideDeactivates","form","formGroup","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { default as formStyles } from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { SelectOptionObject } from './SelectOption';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport { Omit } from '../../helpers/typeUtils';\n\n// tslint:disable-next-line\nconst FocusTrap: any = require('focus-trap-react');\n\nexport interface SelectMenuProps extends Omit<React.HTMLProps<HTMLElement>, 'checked' | 'selected' | 'ref'> {\n  /** Content rendered inside the SelectMenu */\n  children: React.ReactElement[];\n  /** Additional classes added to the SelectMenu control */\n  className?: string;\n  /** Flag indicating the Select is expanded */\n  isExpanded: boolean;\n  /** Flag indicating the Select options are grouped */\n  isGrouped?: boolean;\n  /** Currently selected option (for single, typeahead variants) */\n  selected?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Currently checked options (for checkbox variant) */\n  checked?: (string | SelectOptionObject) [];\n  /** Internal flag for specifiying how the menu was opened */\n  openedOnEnter?: boolean;\n  /** Flag to specify the  maximum height of the menu, as a string percentage or number of pixels */\n  maxHeight?: string | number;\n  /** Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, index: number) => void;\n  /** Internal callback for keyboard navigation */\n  keyHandler?: (index: number, position: string) => void;\n}\n\nexport class SelectMenu extends React.Component<SelectMenuProps> {\n  static defaultProps = {\n    className: '',\n    isExpanded: false,\n    isGrouped: false,\n    openedOnEnter: false,\n    selected: '',\n    maxHeight: '',\n    sendRef: Function.prototype,\n    keyHandler: Function.prototype\n  };\n\n  extendChildren() {\n    const { children, isGrouped } = this.props;\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, (group: React.ReactElement) =>\n        React.cloneElement(group, {\n          titleId: group.props.label.replace(/\\W/g, '-'),\n          children: group.props.children.map((option: React.ReactElement) => this.cloneOption(option, index++))\n        })\n      );\n    }\n    return React.Children.map(this.props.children, (child: React.ReactElement, index: number) =>\n      this.cloneOption(child, index)\n    );\n  }\n\n  cloneOption(child: React.ReactElement, index: number) {\n    const { selected, sendRef, keyHandler } = this.props;\n    const isSelected =\n      selected && selected.constructor === Array\n        ? selected && (Array.isArray(selected) && selected.includes(child.props.value))\n        : selected === child.props.value;\n    return React.cloneElement(child, {\n      id: `${child.props.value ? child.props.value.toString() : ''}-${index}`,\n      isSelected,\n      sendRef,\n      keyHandler,\n      index\n    });\n  }\n\n  extendCheckboxChildren(props: any) {\n    const { children, isGrouped, checked, sendRef, keyHandler } = this.props;\n    const { 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy } = props;\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, (group: React.ReactElement) =>\n        React.cloneElement(group, {\n          titleId: group.props.label.replace(/\\W/g, '-'),\n          children: (\n            <fieldset aria-labelledby={group.props.label.replace(/\\W/g, '-')} className={css(formStyles.formFieldset)}>\n              {group.props.children.map((option: React.ReactElement) =>\n                React.cloneElement(option, {\n                  isChecked: checked && checked.includes(option.props.value),\n                  sendRef,\n                  keyHandler,\n                  index: index++\n                })\n              )}\n            </fieldset>\n          )\n        })\n      );\n    }\n    return (\n      <fieldset\n        {...props}\n        aria-label={ariaLabel}\n        aria-labelledby={(!ariaLabel && ariaLabelledBy) || null}\n        className={css(formStyles.formFieldset)}\n      >\n        {React.Children.map(children, (child: React.ReactElement, index: number) =>\n          React.cloneElement(child, {\n            isChecked: checked && checked.includes(child.props.value),\n            sendRef,\n            keyHandler,\n            index\n          })\n        )}\n      </fieldset>\n    );\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      isExpanded,\n      openedOnEnter,\n      selected,\n      checked,\n      isGrouped,\n      sendRef,\n      keyHandler,\n      maxHeight,\n      ...props\n    } = this.props;\n\n    return (\n      <SelectConsumer>\n        {({ variant }) => (\n          <React.Fragment>\n            {variant !== SelectVariant.checkbox && (\n              <ul className={css(styles.selectMenu, className)} role=\"listbox\" {...maxHeight && {style:({ maxHeight, overflow: 'auto' })}}  {...props}>\n                {this.extendChildren()}\n              </ul>\n            )}\n            {variant === SelectVariant.checkbox && React.Children.count(children) > 0 && (\n              <FocusTrap focusTrapOptions={{ clickOutsideDeactivates: true }}>\n                <div className={css(styles.selectMenu, className)} {...maxHeight && {style:({ maxHeight, overflow: 'auto' })}}>\n                  <form noValidate className={css(formStyles.form)}>\n                    <div className={css(formStyles.formGroup)}>{this.extendCheckboxChildren(props)}</div>\n                  </form>\n                </div>\n              </FocusTrap>\n            )}\n            {variant === SelectVariant.checkbox && React.Children.count(children) === 0 && (\n              <div className={css(styles.selectMenu, className)} {...maxHeight && {style:({ maxHeight, overflow: 'auto' })}}>\n                <form noValidate className={css(formStyles.form)}>\n                  <div className={css(formStyles.formGroup)}/>\n                </form>\n              </div>\n            )}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"],"file":"SelectMenu.js"}