{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/collapsible.tsx"],"names":["collapsible","value","rowIndex","columnIndex","rowData","column","property","extraParams","onCollapse","rowLabeledBy","expandId","extraData","onToggle","event","isOpen","className","undefined","styles","tableToggle","isVisible","fullWidth","children","expandable","hasOwnProperty","expandedRow","colSpan","expandedRowFormatter","contentId","id","noPadding","modifiers"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,QAA8F;AAAA,MAA/DC,QAA+D,QAA/DA,QAA+D;AAAA,MAArDC,WAAqD,QAArDA,WAAqD;AAAA,MAAxCC,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,4BAGnHD,MAHmH,CAErHE,WAFqH;AAAA,MAEtGC,UAFsG,uBAEtGA,UAFsG;AAAA,kDAE1FC,YAF0F;AAAA,MAE1FA,YAF0F,sCAE3E,aAF2E;AAAA,kDAE5DC,QAF4D;AAAA,MAE5DA,QAF4D,sCAEjD,eAFiD;AAIvH,MAAMC,SAAS,GAAG;AAChBT,IAAAA,QAAQ,EAARA,QADgB;AAEhBC,IAAAA,WAAW,EAAXA,WAFgB;AAGhBE,IAAAA,MAAM,EAANA,MAHgB;AAIhBC,IAAAA,QAAQ,EAARA;AAJgB,GAAlB;;AAOA,WAASM,QAAT,CAAkBC,KAAlB,EAA0E;AACxE;AACAL,IAAAA,UAAU,IAAIA,UAAU,CAACK,KAAD,EAAQX,QAAR,EAAkBE,OAAO,IAAI,CAACA,OAAO,CAACU,MAAtC,EAA8CV,OAA9C,EAAuDO,SAAvD,CAAxB;AACD;;AAED,SAAO;AACLI,IAAAA,SAAS,EAAEX,OAAO,CAACU,MAAR,KAAmBE,SAAnB,IAAgC,sBAAIC,kBAAOC,WAAX,CADtC;AAELC,IAAAA,SAAS,EAAE,CAACf,OAAO,CAACgB,SAFf;AAGLC,IAAAA,QAAQ,EACN,oBAAC,8BAAD;AACE,mCAAoBZ,YAApB,SAAmCP,QAAnC,cAA+CQ,QAA/C,SAA0DR,QAA1D,CADF;AAEE,MAAA,QAAQ,EAAEU,QAFZ;AAGE,MAAA,EAAE,EAAEF,QAAQ,GAAGR,QAHjB;AAIE,MAAA,MAAM,EAAEE,OAAO,IAAIA,OAAO,CAACU;AAJ7B,OAMGb,KANH;AAJG,GAAP;AAcD,CA9BM;;;;AAgCA,IAAMqB,UAAU,GAAG,SAAbA,UAAa,CAACrB,KAAD;AAAA,MAA+BG,OAA/B,SAA+BA,OAA/B;AAAA,SACxBA,OAAO,CAACmB,cAAR,CAAuB,QAAvB,IAAmC,oBAAC,0CAAD,QAAuBtB,KAAvB,CAAnC,GAA0FA,KADlE;AAAA,CAAnB;;;;AAGA,IAAMuB,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAqB;AAC9C,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BzB,KAD2B;AAAA,QAGzBC,QAHyB,SAGzBA,QAHyB;AAAA,QAIzBE,OAJyB,SAIzBA,OAJyB;AAAA,sCAKzBC,MALyB,CAMvBE,WANuB,CAMRoB,SANQ;AAAA,QAMRA,SANQ,sCAMI,kBANJ;AAAA,WAU3BvB,OAAO,CAACmB,cAAR,CAAuB,QAAvB,KAAoC;AAClC;AACAE,MAAAA,OAAO,EAAEA,OAAO,GAAI,CAAC,CAACrB,OAAO,CAACgB,SAFI;AAGlCQ,MAAAA,EAAE,EAAED,SAAS,GAAGzB,QAHkB;AAIlCa,MAAAA,SAAS,EAAEX,OAAO,CAACyB,SAAR,IAAqB,sBAAIZ,kBAAOa,SAAP,CAAiBD,SAArB;AAJE,KAVT;AAAA,GAA7B;;AAgBA,SAAOH,oBAAP;AACD,CAlBM","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { CollapseColumn } from '../../CollapseColumn';\nimport { ExpandableRowContent } from '../../ExpandableRowContent';\nimport { IExtra, IFormatterValueType } from '../../Table';\n\nexport const collapsible = (value: IFormatterValueType, { rowIndex, columnIndex, rowData, column, property }: IExtra) => {\n  const {\n    extraParams: { onCollapse, rowLabeledBy = 'simple-node', expandId = 'expand-toggle' }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  function onToggle(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    // tslint:disable-next-line:no-unused-expression\n    onCollapse && onCollapse(event, rowIndex, rowData && !rowData.isOpen, rowData, extraData);\n  }\n\n  return {\n    className: rowData.isOpen !== undefined && css(styles.tableToggle),\n    isVisible: !rowData.fullWidth,\n    children: (\n      <CollapseColumn\n        aria-labelledby={`${rowLabeledBy}${rowIndex} ${expandId}${rowIndex}`}\n        onToggle={onToggle}\n        id={expandId + rowIndex}\n        isOpen={rowData && rowData.isOpen}\n      >\n        {value}\n      </CollapseColumn>\n    )\n  };\n};\n\nexport const expandable = (value: IFormatterValueType, { rowData }: IExtra) =>\n  rowData.hasOwnProperty('parent') ? <ExpandableRowContent>{value}</ExpandableRowContent> : value;\n\nexport const expandedRow = (colSpan: number) => {\n  const expandedRowFormatter = (\n    value: IFormatterValueType,\n    {\n      rowIndex,\n      rowData,\n      column: {\n        extraParams: { contentId = 'expanded-content' }\n      }\n    }: IExtra\n  ) =>\n    rowData.hasOwnProperty('parent') && {\n      // todo: rewrite this logic, it is not type safe\n      colSpan: colSpan + (!!rowData.fullWidth as any),\n      id: contentId + rowIndex,\n      className: rowData.noPadding && css(styles.modifiers.noPadding)\n    };\n  return expandedRowFormatter;\n};\n"],"file":"collapsible.js"}