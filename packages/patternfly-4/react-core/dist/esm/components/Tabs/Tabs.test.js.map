{"version":3,"sources":["../../../../src/components/Tabs/Tabs.test.tsx"],"names":["React","render","mount","Tabs","Tab","test","view","expect","toMatchSnapshot","find","first","simulate","last"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, mount } from 'enzyme';\nimport { Tabs } from './Tabs';\nimport { Tab } from './Tab';\n\ntest('should render simple tabs', () => {\n  const view = render(\n    <Tabs id=\"simpleTabs\">\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n      <Tab\n        id=\"tab4\"\n        eventKey={3}\n        title={\n          <b>\n            Tab item <i>4</i>\n          </b>\n        }\n      >\n        Tab 4 section\n      </Tab>\n    </Tabs>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('should render accessible tabs', () => {\n  const view = render(\n    <Tabs id=\"accessibleTabs\" aria-label=\"accessible Tabs example\" variant=\"nav\">\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\" href=\"#/items/1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\" href=\"#/items/2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\" href=\"#/items/3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('should render filled tabs', () => {\n  const view = render(\n    <Tabs id=\"filledTabs\" isFilled>\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('should render secondary tabs', () => {\n  const view = render(\n    <Tabs id=\"primarieTabs\">\n      <Tab eventKey={0} title=\"Tab item 1\">\n        <Tabs id=\"secondaryTabs\">\n          <Tab id=\"secondary tab1\" eventKey={10} title=\"Secondary Tab 1\">\n            Secondary Tab 1 section\n          </Tab>\n          <Tab id=\"secondary tab2\" eventKey={11} title=\"Secondary Tab 2\">\n            Secondary Tab 2 section\n          </Tab>\n          <Tab id=\"secondary tab3\" eventKey={12} title=\"Secondary Tab 3\">\n            Secondary Tab 3 section\n          </Tab>\n        </Tabs>\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('should call scrollLeft tabs with scrolls', () => {\n  const view = mount(\n    <Tabs id=\"scrollLeft\" isFilled>\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  view\n    .find('.pf-c-tabs__scroll-button')\n    .first()\n    .simulate('click');\n  expect(view).toMatchSnapshot();\n});\n\ntest('should call scrollRight tabs with scrolls', () => {\n  const view = mount(\n    <Tabs id=\"scrollRight\" isFilled>\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  view\n    .find('.pf-c-tabs__scroll-button')\n    .last()\n    .simulate('click');\n  expect(view).toMatchSnapshot();\n});\n\ntest('should call handleScrollButtons tabs with scrolls', () => {\n  const view = mount(\n    <Tabs id=\"handleScrollButtons\" isFilled>\n      <Tab id=\"tab1\" eventKey={0} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={1} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={2} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  view.simulate('scroll');\n  expect(view).toMatchSnapshot();\n});\n\ntest('should render tabs with eventKey Strings', () => {\n  const view = render(\n    <Tabs id=\"eventKeyTabs\">\n      <Tab id=\"tab1\" eventKey={'one'} title=\"Tab item 1\">\n        Tab 1 section\n      </Tab>\n      <Tab id=\"tab2\" eventKey={'two'} title=\"Tab item 2\">\n        Tab 2 section\n      </Tab>\n      <Tab id=\"tab3\" eventKey={'three'} title=\"Tab item 3\">\n        Tab 3 section\n      </Tab>\n    </Tabs>\n  );\n  expect(view).toMatchSnapshot();\n});\n"],"file":"Tabs.test.js"}