{"version":3,"sources":["../../../../../src/components/Table/base/header.tsx"],"names":["React","ProviderContext","HeaderRow","BaseHeader","Component","render","props","children","headerRows","onRow","renderers","columns","createElement","header","wrapper","map","rowData","rowIndex","key","concat","className","Header"],"mappings":";;;;;;;;;;AAAA;;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAWA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAA0D;AACxDC,EAAAA,MAAM,GAAG;AACP,wBAAsE,KAAKC,KAA3E;AAAA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,UAAZ;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA,SAA/B;AAA0CC,MAAAA;AAA1C,KAAN;AAAA,UAA4DL,KAA5D,sGADO,CAGP;;;AACA,WAAON,KAAK,CAACY,aAAN,CACLF,SAAS,CAACG,MAAV,CAAiBC,OADZ,EAELR,KAFK,EAGL,CACE,CAACE,UAAU,IAAI,CAACG,OAAD,CAAf,EAAyCI,GAAzC,CAA6C,CAACC,OAAD,EAAoBC,QAApB,KAC3CjB,KAAK,CAACY,aAAN,CAAoBV,SAApB,EAA+B;AAC7BgB,MAAAA,GAAG,EAAG,GAAED,QAAS,aADY;AAE7BP,MAAAA,SAAS,EAAEA,SAAS,CAACG,MAFQ;AAG7BJ,MAAAA,KAH6B;AAI7BO,MAAAA,OAJ6B;AAK7BC,MAAAA;AAL6B,KAA/B,CADF,CADF,EAUEE,MAVF,CAUSZ,QAVT,CAHK,CAAP;AAeD;;AApBuD;;gBAApDJ,U;AARJK,EAAAA,U;AACAD,EAAAA,Q;AACAI,EAAAA,O;AAEAF,EAAAA,K;AACAW,EAAAA,S;;;AA0BF,OAAO,MAAMC,MAAM,GAAIf,KAAD,IACpB,oBAAC,eAAD,CAAiB,QAAjB,QACG,CAAC;AAAEK,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAD,KAA4B,oBAAC,UAAD;AAAY,EAAA,OAAO,EAAEC,OAArB;AAA8B,EAAA,SAAS,EAAED;AAAzC,GAAwDJ,KAAxD,EAD/B,CADK;;AA/BLE,EAAAA,U;AACAD,EAAAA,Q;AACAI,EAAAA,O;AAEAF,EAAAA,K;AACAW,EAAAA,S","sourcesContent":["/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { createElementType, RowsType, ColumnsType, RenderersTypes } from './types';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nexport interface HeaderProps {\n  headerRows?: RowsType[] | ColumnsType; // array of rows arrays\n  children?: React.ReactNode;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  onRow?: Function;\n  className?: string;\n}\n\nclass BaseHeader extends React.Component<HeaderProps, {}> {\n  render() {\n    const { children, headerRows, onRow, renderers, columns, ...props } = this.props;\n\n    // If headerRows aren't passed, default to bodyColumns as header rows\n    return React.createElement(\n      renderers.header.wrapper as createElementType,\n      props,\n      [\n        (headerRows || [columns] as ColumnsType).map((rowData: RowsType, rowIndex) =>\n          React.createElement(HeaderRow, {\n            key: `${rowIndex}-header-row`,\n            renderers: renderers.header,\n            onRow,\n            rowData,\n            rowIndex\n          })\n        )\n      ].concat(children as any)\n    );\n  }\n}\n\nexport const Header = (props: HeaderProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseHeader columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"],"file":"header.js"}