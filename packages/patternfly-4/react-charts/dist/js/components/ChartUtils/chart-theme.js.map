{"version":3,"sources":["../../../../src/components/ChartUtils/chart-theme.ts"],"names":["getCustomTheme","themeColor","themeVariant","customTheme","getTheme","getAxisTheme","theme","ChartAxisTheme","getBulletTheme","ChartBulletTheme","getBulletComparativeErrorMeasureTheme","ChartBulletComparativeErrorMeasureTheme","getBulletComparativeMeasureTheme","ChartBulletComparativeMeasureTheme","getBulletComparativeWarningMeasureTheme","ChartBulletComparativeWarningMeasureTheme","getBulletGroupTitleTheme","ChartBulletGroupTitleTheme","getBulletPrimaryDotMeasureTheme","ChartBulletPrimaryDotMeasureTheme","getBulletPrimaryNegativeMeasureTheme","ChartBulletPrimaryNegativeMeasureTheme","getBulletPrimarySegmentedMeasureTheme","ChartBulletPrimarySegmentedMeasureTheme","getBulletQualitativeRangeTheme","ChartBulletQualitativeRangeTheme","getDonutTheme","ChartDonutTheme","getDonutThresholdDynamicTheme","ChartDonutThresholdDynamicTheme","legend","colorScale","pie","ChartDonutThresholdStaticTheme","getDonutThresholdStaticTheme","invert","staticTheme","reverse","getDonutUtilizationTheme","ChartDonutUtilizationDynamicTheme","ChartDonutUtilizationStaticTheme","getDarkThemeColors","ChartThemeColor","blue","DarkBlueColorTheme","cyan","DarkCyanColorTheme","gold","DarkGoldColorTheme","gray","DarkGrayColorTheme","green","DarkGreenColorTheme","multi","multiOrdered","DarkMultiColorOrderedTheme","multiUnordered","DarkMultiColorUnorderedTheme","orange","DarkOrangeColorTheme","purple","DarkPurpleColorTheme","getLightThemeColors","LightBlueColorTheme","LightCyanColorTheme","LightGoldColorTheme","LightGrayColorTheme","LightGreenColorTheme","LightMultiColorOrderedTheme","LightMultiColorUnorderedTheme","LightOrangeColorTheme","LightPurpleColorTheme","baseTheme","JSON","parse","stringify","ChartBaseTheme","ChartThemeVariant","dark","light","getThresholdTheme","ChartThresholdTheme"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport { DarkBlueColorTheme } from '../ChartTheme/themes/dark/blue-color-theme';\nimport { DarkCyanColorTheme } from '../ChartTheme/themes/dark/cyan-color-theme';\nimport { DarkGoldColorTheme } from '../ChartTheme/themes/dark/gold-color-theme';\nimport { DarkGrayColorTheme } from '../ChartTheme/themes/dark/gray-color-theme';\nimport { DarkGreenColorTheme } from '../ChartTheme/themes/dark/green-color-theme';\nimport { DarkMultiColorOrderedTheme } from '../ChartTheme/themes/dark/multi-color-ordered-theme';\nimport { DarkMultiColorUnorderedTheme } from '../ChartTheme/themes/dark/multi-color-unordered-theme';\nimport { DarkOrangeColorTheme } from '../ChartTheme/themes/dark/orange-color-theme';\nimport { DarkPurpleColorTheme } from '../ChartTheme/themes/dark/purple-color-theme';\nimport { LightBlueColorTheme } from '../ChartTheme/themes/light/blue-color-theme';\nimport { LightCyanColorTheme } from '../ChartTheme/themes/light/cyan-color-theme';\nimport { LightGoldColorTheme } from '../ChartTheme/themes/light/gold-color-theme';\nimport { LightGrayColorTheme } from '../ChartTheme/themes/light/gray-color-theme';\nimport { LightGreenColorTheme } from '../ChartTheme/themes/light/green-color-theme';\nimport { LightMultiColorOrderedTheme } from '../ChartTheme/themes/light/multi-color-ordered-theme';\nimport { LightMultiColorUnorderedTheme } from '../ChartTheme/themes/light/multi-color-unordered-theme';\nimport { LightOrangeColorTheme } from '../ChartTheme/themes/light/orange-color-theme';\nimport { LightPurpleColorTheme } from '../ChartTheme/themes/light/purple-color-theme';\nimport {\n  ChartAxisTheme,\n  ChartBaseTheme,\n  ChartBulletComparativeErrorMeasureTheme,\n  ChartBulletComparativeMeasureTheme,\n  ChartBulletComparativeWarningMeasureTheme,\n  ChartBulletGroupTitleTheme,\n  ChartBulletPrimaryDotMeasureTheme,\n  ChartBulletPrimaryNegativeMeasureTheme,\n  ChartBulletPrimarySegmentedMeasureTheme,\n  ChartBulletTheme,\n  ChartBulletQualitativeRangeTheme,\n  ChartDonutTheme,\n  ChartDonutUtilizationDynamicTheme,\n  ChartDonutUtilizationStaticTheme,\n  ChartDonutThresholdDynamicTheme,\n  ChartDonutThresholdStaticTheme,\n  ChartThemeDefinition,\n  ChartThemeColor,\n  ChartThemeVariant,\n  ChartThresholdTheme\n} from '../ChartTheme/ChartTheme';\nimport { cloneDeep } from 'lodash';\n\n// Apply custom properties to base and color themes\nexport const getCustomTheme = (themeColor: string, themeVariant: string, customTheme: ChartThemeDefinition\n): ChartThemeDefinition =>\n  merge(getTheme(themeColor, themeVariant), customTheme);\n\n// Returns axis theme\nexport const getAxisTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartAxisTheme);\n  return theme;\n};\n\n// Returns bullet chart theme\nexport const getBulletTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletTheme);\n\n// Returns comparative error measure theme for bullet chart\nexport const getBulletComparativeErrorMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeErrorMeasureTheme);\n\n// Returns comparative measure theme for bullet chart\nexport const getBulletComparativeMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeMeasureTheme);\n\n// Returns comparative warning measure theme for bullet chart\nexport const getBulletComparativeWarningMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeWarningMeasureTheme);\n\n// Returns group title theme for bullet chart\nexport const getBulletGroupTitleTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletGroupTitleTheme);\n\n// Returns primary dot measure theme for bullet chart\nexport const getBulletPrimaryDotMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryDotMeasureTheme);\n\n// Returns primary negative measure theme for bullet chart\nexport const getBulletPrimaryNegativeMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryNegativeMeasureTheme);\n\n// Returns primary segmented measure theme for bullet chart\nexport const getBulletPrimarySegmentedMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimarySegmentedMeasureTheme);\n\n// Returns qualitative range theme for bullet chart\nexport const getBulletQualitativeRangeTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletQualitativeRangeTheme);\n\n// Returns donut theme\nexport const getDonutTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartDonutTheme);\n\n// Returns dynamic donut threshold theme\nexport const getDonutThresholdDynamicTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutThresholdDynamicTheme);\n\n  // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n  theme.legend.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdDynamicTheme.legend.colorScale];\n\n  // Merge the threshold colors in case users want to show the unused data\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdStaticTheme.pie.colorScale];\n  return theme;\n};\n\n// Returns static donut threshold theme\nexport const getDonutThresholdStaticTheme = (themeColor: string, themeVariant: string, invert?: boolean\n): ChartThemeDefinition => {\n  const staticTheme = cloneDeep(ChartDonutThresholdStaticTheme);\n  if (invert) {\n    staticTheme.pie.colorScale = staticTheme.pie.colorScale.reverse();\n  }\n  return getCustomTheme(themeColor, themeVariant, staticTheme);\n};\n\n// Returns donut utilization theme\nexport const getDonutUtilizationTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutUtilizationDynamicTheme);\n\n  // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutUtilizationStaticTheme.pie.colorScale];\n  theme.legend.colorScale = [theme.legend.colorScale[0],\n    ...ChartDonutUtilizationStaticTheme.legend.colorScale];\n  return theme;\n};\n\n// Returns dark theme colors\nexport const getDarkThemeColors = (themeColor: string) => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return DarkBlueColorTheme;\n    case ChartThemeColor.cyan:\n      return DarkCyanColorTheme;\n    case ChartThemeColor.gold:\n      return DarkGoldColorTheme;\n    case ChartThemeColor.gray:\n      return DarkGrayColorTheme;\n    case ChartThemeColor.green:\n      return DarkGreenColorTheme;\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return DarkMultiColorOrderedTheme;\n    case ChartThemeColor.multiUnordered:\n      return DarkMultiColorUnorderedTheme;\n    case ChartThemeColor.orange:\n      return DarkOrangeColorTheme;\n    case ChartThemeColor.purple:\n      return DarkPurpleColorTheme;\n    default:\n      return DarkBlueColorTheme;\n  }\n};\n\n// Returns light theme colors\nexport const getLightThemeColors = (themeColor: string) => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return LightBlueColorTheme;\n    case ChartThemeColor.cyan:\n      return LightCyanColorTheme;\n    case ChartThemeColor.gold:\n      return LightGoldColorTheme;\n    case ChartThemeColor.gray:\n      return LightGrayColorTheme;\n    case ChartThemeColor.green:\n      return LightGreenColorTheme;\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return LightMultiColorOrderedTheme;\n    case ChartThemeColor.multiUnordered:\n      return LightMultiColorUnorderedTheme;\n    case ChartThemeColor.orange:\n      return LightOrangeColorTheme;\n    case ChartThemeColor.purple:\n      return LightPurpleColorTheme;\n    default:\n      return LightBlueColorTheme;\n  }\n};\n\n// Applies theme color and variant to base theme\nexport const getTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  // Deep clone\n  const baseTheme = {\n    ...JSON.parse(JSON.stringify(ChartBaseTheme))\n  };\n  switch (themeVariant) {\n    case ChartThemeVariant.dark:\n      return merge(baseTheme, getDarkThemeColors(themeColor));\n    case ChartThemeVariant.light:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n    default:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n  }\n};\n\n// Returns threshold theme\nexport const getThresholdTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartThresholdTheme);\n"],"file":"chart-theme.js"}