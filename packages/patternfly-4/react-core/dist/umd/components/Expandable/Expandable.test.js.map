{"version":3,"sources":["../../../esm/components/Expandable/Expandable.test.js"],"names":["React","props","test","view","createElement","Expandable","expect","toMatchSnapshot","isExpanded","mockfn","jest","fn","onToggle","find","at","simulate","mock","calls","toHaveLength","toggleText"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGZ,QAAMC,KAAK,GAAG,EAAd;AACAC,EAAAA,IAAI,CAAC,YAAD,EAAe,MAAM;AACvB,UAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAgCJ,KAAhC,EAAuC,OAAvC,CAAR,CAAb;AACAK,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GAHG,CAAJ;AAIAL,EAAAA,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACxC,UAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAgC;AACnDG,MAAAA,UAAU,EAAE;AADuC,KAAhC,EAElB,QAFkB,CAAR,CAAb;AAGAF,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GALG,CAAJ;AAMAL,EAAAA,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,UAAMO,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACA,UAAMR,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAgC;AACnDO,MAAAA,QAAQ,EAAEH;AADyC,KAAhC,EAElB,QAFkB,CAAR,CAAb;AAGAN,IAAAA,IAAI,CAACU,IAAL,CAAU,QAAV,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmC,OAAnC;AACAT,IAAAA,MAAM,CAACG,MAAM,CAACO,IAAP,CAAYC,KAAb,CAAN,CAA0BC,YAA1B,CAAuC,CAAvC;AACD,GAPG,CAAJ;AAQAhB,EAAAA,IAAI,CAAC,iCAAD,EAAoC,MAAM;AAC5C,UAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAgC;AACnDc,MAAAA,UAAU,EAAE;AADuC,KAAhC,EAElB,QAFkB,CAAR,CAAb;AAGAb,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GALG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\nimport { Expandable } from './Expandable';\nconst props = {};\ntest('Expandable', () => {\n  const view = shallow(React.createElement(Expandable, props, \"test \"));\n  expect(view).toMatchSnapshot();\n});\ntest('Renders Expandable expanded', () => {\n  const view = shallow(React.createElement(Expandable, {\n    isExpanded: true\n  }, \" test \"));\n  expect(view).toMatchSnapshot();\n});\ntest('Expandable onToggle called', () => {\n  const mockfn = jest.fn();\n  const view = shallow(React.createElement(Expandable, {\n    onToggle: mockfn\n  }, \" test \"));\n  view.find('button').at(0).simulate('click');\n  expect(mockfn.mock.calls).toHaveLength(1);\n});\ntest('Renders Uncontrolled Expandable', () => {\n  const view = shallow(React.createElement(Expandable, {\n    toggleText: \"Show More\"\n  }, \" test \"));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=Expandable.test.js.map"],"file":"Expandable.test.js"}