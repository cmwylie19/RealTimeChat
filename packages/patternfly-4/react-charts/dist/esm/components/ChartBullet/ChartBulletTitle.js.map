{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBulletTitle.tsx"],"names":["React","ChartContainer","ChartLabel","ChartBulletStyles","ChartCommonStyles","getBulletTheme","getBulletLabelX","getBulletLabelY","getPaddingForSide","ChartBulletTitle","ariaDesc","ariaTitle","capHeight","horizontal","legendPosition","padding","standalone","subTitleComponent","subTitle","themeColor","themeVariant","title","titleComponent","titlePosition","theme","height","chart","width","rest","chartSize","defaultPadding","bottom","left","right","top","getTitle","showBoth","labelPosition","includes","cloneElement","style","label","text","textAnchor","verticalAnchor","x","chartWidth","dx","margin","svgWidth","qualitativeRangeWidth","y","chartHeight","dy","legend","props"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  PaddingProps,\n  StringOrNumberOrCallback,\n} from 'victory';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegendPosition } from '../ChartLegend';\nimport { ChartBulletStyles, ChartCommonStyles, ChartThemeDefinition } from '../ChartTheme';\nimport { getBulletTheme, getBulletLabelX, getBulletLabelY, getPaddingForSide } from '../ChartUtils';\n\n/**\n * See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/victory/index.d.ts\n */\nexport interface ChartBulletTitleProps {\n  /**\n   * The ariaDesc prop specifies the description of the chart/SVG to assist with\n   * accessibility for screen readers.\n   *\n   * Note: Overridden by the desc prop of containerComponent\n   */\n  ariaDesc?: string;\n  /**\n   * The ariaTitle prop specifies the title to be applied to the SVG to assist\n   * accessibility for screen readers.\n   *\n   * Note: Overridden by the title prop of containerComponent\n   */\n  ariaTitle?: string;\n  /**\n   * The capHeight prop defines a text metric for the font being used: the expected height of capital letters.\n   * This is necessary because of SVG, which (a) positions the *bottom* of the text at `y`, and (b) has no notion of\n   * line height. The value should ideally use the same units as `lineHeight` and `dy`, preferably ems. If given a\n   * unitless number, it is assumed to be ems.\n   */\n  capHeight?: StringOrNumberOrCallback;\n  /**\n   * The height props specifies the height the svg viewBox of the chart container.\n   * This value should be given as a number of pixels\n   */\n  height?: number;\n  /**\n   * The horizontal prop determines whether data will be plotted horizontally.\n   * When this prop is set to true, the independent variable will be plotted on the y axis\n   * and the dependent variable will be plotted on the x axis.\n   */\n  horizontal?: boolean;\n  /**\n   * The legend position relation to the chart. Valid values are 'bottom', 'bottom-left', and 'right'\n   */\n  legendPosition?: 'bottom' | 'bottom-left' | 'right';\n  /**\n   * The padding props specifies the amount of padding in number of pixels between\n   * the edge of the chart and any rendered child components. This prop can be given\n   * as a number or as an object with padding specified for top, bottom, left\n   * and right.\n   *\n   * Note: The underlying bullet chart is a different size than height and width. For a horizontal chart, left and right\n   * padding may need to be applied at (approx) 2 to 1 scale.\n   */\n  padding?: PaddingProps;\n  /**\n   * The standalone prop determines whether the component will render a standalone svg\n   * or a <g> tag that will be included in an external svg. Set standalone to false to\n   * compose ChartLine with other components within an enclosing <svg> tag.\n   */\n  standalone?: boolean;\n  /**\n   * The subtitle to render for grouped bullets\n   */\n  subTitle?: string;\n  /**\n   * The label component to render the chart subTitle.\n   *\n   * Note: Default label properties may be applied\n   */\n  subTitleComponent?: React.ReactElement<any>;\n  /**\n   * The theme prop takes a style object with nested data, labels, and parent objects.\n   * You can create this object yourself, or you can use a theme provided by\n   * When using ChartLine as a solo component, implement the theme directly on\n   * ChartLine. If you are wrapping ChartLine in ChartChart or ChartGroup,\n   * please call the theme on the outermost wrapper component instead.\n   */\n  theme?: ChartThemeDefinition;\n  /**\n   * Specifies the theme color. Valid values are 'blue', 'green', 'multi', etc.\n   *\n   * Note: Not compatible with theme prop\n   *\n   * @example themeColor={ChartThemeColor.blue}\n   */\n  themeColor?: string;\n  /**\n   * Specifies the theme variant. Valid values are 'dark' or 'light'\n   *\n   * Note: Not compatible with theme prop\n   *\n   * @example themeVariant={ChartThemeVariant.light}\n   */\n  themeVariant?: string;\n  /**\n   * The title to render for grouped bullets\n   */\n  title?: string;\n  /**\n   * The label component to render the chart title.\n   *\n   * Note: Default label properties may be applied\n   */\n  titleComponent?: React.ReactElement<any>;\n  /**\n   * The title position relation to the chart. Valid values are 'left', and 'top-left'\n   *\n   * Note: These properties are only valid for horizontal layouts\n   */\n  titlePosition?: 'left' | 'top-left';\n  /**\n   * The width props specifies the width of the svg viewBox of the chart container\n   * This value should be given as a number of pixels\n   */\n  width?: number;\n}\n\nexport const ChartBulletTitle: React.FunctionComponent<ChartBulletTitleProps> = ({\n  ariaDesc,\n  ariaTitle,\n  capHeight = 1.1,\n  horizontal = true,\n  legendPosition = 'bottom' as ChartLegendPosition,\n  padding,\n  standalone = true,\n  subTitleComponent = <ChartLabel />,\n  subTitle,\n  themeColor,\n  themeVariant,\n  title,\n  titleComponent = <ChartLabel />,\n  titlePosition,\n\n  // destructure last\n  theme = getBulletTheme(themeColor, themeVariant),\n  height = horizontal ? theme.chart.height : theme.chart.width,\n  width = horizontal ? theme.chart.width : theme.chart.height,\n  ...rest\n}: ChartBulletTitleProps) => {\n  const chartSize = {\n    height: horizontal ? theme.chart.height : height,\n    width: horizontal ? width : theme.chart.height\n  };\n\n  const defaultPadding = {\n    bottom: getPaddingForSide('bottom',  padding, theme.chart.padding),\n    left: getPaddingForSide('left', padding, theme.chart.padding),\n    right: getPaddingForSide('right', padding, theme.chart.padding),\n    top: getPaddingForSide('top', padding, theme.chart.padding),\n  };\n\n  // Returns title\n  const getTitle = () => {\n    const showBoth = title && subTitle;\n\n    let labelPosition: 'bottom' | 'left' | 'top-left' = horizontal ? 'left' : 'bottom';\n    if (titlePosition && titlePosition.includes('left') && horizontal) {\n      labelPosition = titlePosition;\n    }\n\n    // The x and y calculations below are used to adjust the position of the title, based on padding and scale.\n    // This ensures that when padding is adjusted, the title moves along with the chart's position.\n    return React.cloneElement(titleComponent, {\n      ...showBoth && { capHeight },\n      style: [ChartBulletStyles.label.title, ChartBulletStyles.label.subTitle],\n      text: showBoth ? [title, subTitle] : title,\n      textAnchor: labelPosition === 'top-left' ? 'start' : horizontal ? 'end' : 'middle',\n      verticalAnchor: labelPosition === 'top-left' ? 'end' : 'middle',\n      // Adjust for padding\n      x: horizontal\n        ? getBulletLabelX({\n          chartWidth: chartSize.width,\n          dx: labelPosition === 'top-left'\n            ? defaultPadding.left\n            : defaultPadding.left - ChartCommonStyles.label.margin * 1.75,\n          labelPosition: 'left', // skip 'bottom'\n          legendPosition,\n          svgWidth: width\n        })\n        : defaultPadding.left * .5 + (defaultPadding.right * .5 - (defaultPadding.right - 50)) +\n          ChartBulletStyles.qualitativeRangeWidth / 2,\n      y: getBulletLabelY({\n        chartHeight: chartSize.height,\n        // Adjust for padding\n        dy: labelPosition === 'top-left'\n          ? defaultPadding.top * .5 + (defaultPadding.bottom * .5 - (defaultPadding.bottom)) + 58 -\n            ChartCommonStyles.legend.margin + (showBoth ? 0 : 1)\n          : horizontal\n            ? defaultPadding.top * .5 + (defaultPadding.bottom * .5 - (defaultPadding.bottom))\n            : ChartCommonStyles.legend.margin * 2 - defaultPadding.bottom,\n        labelPosition\n      }),\n      ...titleComponent.props\n    });\n  };\n\n  return standalone ? (\n    <ChartContainer desc={ariaDesc} height={height} title={ariaTitle} width={width}>\n      {getTitle()}\n    </ChartContainer>\n  ) : (\n    <React.Fragment>\n      {getTitle()}\n    </React.Fragment>\n  );\n};\n"],"file":"ChartBulletTitle.js"}