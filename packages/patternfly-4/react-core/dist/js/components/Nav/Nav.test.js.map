{"version":3,"sources":["../../../../src/components/Nav/Nav.test.tsx"],"names":["props","items","to","label","beforeEach","window","location","hash","context","onSelect","undefined","onToggle","test","view","map","item","expect","toMatchSnapshot","find","href","first","simulate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { Nav } from './Nav';\nimport { NavList } from './NavList';\nimport { NavGroup } from './NavGroup';\nimport { NavItem } from './NavItem';\nimport { NavExpandable } from './NavExpandable';\n\nconst props = {\n  items: [\n    { to: '#link1', label: 'Link 1' },\n    { to: '#link2', label: 'Link 2' },\n    { to: '#link3', label: 'Link 3' },\n    { to: '#link4', label: 'Link 4' }\n  ]\n};\n\nbeforeEach(() => {\n  window.location.hash = '#link1';\n});\n\nconst context = {\n  onSelect: () => undefined as any,\n  onToggle: () => undefined as any\n};\n\ntest('Default Nav List', () => {\n  const view = mount(\n    <Nav className=\"test=nav-class\">\n      <NavList className=\"test-nav-list-class\">\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to} className=\"test-nav-item-class\">\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Dark Nav List', () => {\n  const view = mount(\n    <Nav className=\"test=nav-class\" theme=\"dark\">\n      <NavList className=\"test-nav-list-class\">\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to} className=\"test-nav-item-class\">\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Default Nav List - Trigger item active update', () => {\n  window.location.hash = '#link2';\n  const view = mount(\n    <Nav>\n      <NavList>\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to}>\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  view\n    .find({ href: '#link2' })\n    .first()\n    .simulate('click');\n  expect(view).toMatchSnapshot();\n});\n\ntest('Simple Nav List', () => {\n  const view = mount(\n    <Nav>\n      <NavList variant=\"simple\">\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to}>\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Expandable Nav List', () => {\n  const view = mount(\n    <Nav>\n      <NavList>\n        <NavExpandable id=\"grp-1\" title=\"Section 1\">\n          {props.items.map((item) => (\n            <NavItem to={item.to} key={item.to}>\n              {item.label}\n            </NavItem>\n          ))}\n        </NavExpandable>\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Expandable Nav List - Trigger toggle', () => {\n  window.location.hash = '#link2';\n  const view = mount(\n    <Nav>\n      <NavList>\n        <NavExpandable id=\"grp-1\" title=\"Section 1\" className=\"expandable-group\" isExpanded>\n          {props.items.map((item) => (\n            <NavItem to={item.to} key={item.to}>\n              {item.label}\n            </NavItem>\n          ))}\n        </NavExpandable>\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  view\n    .find('li.expandable-group')\n    .first()\n    .simulate('click');\n  expect(view).toMatchSnapshot();\n});\n\ntest('Expandable Nav List with aria label', () => {\n  const view = mount(\n    <Nav aria-label=\"Test\">\n      <NavList>\n        <NavExpandable id=\"grp-1\" title=\"Section 1\" srText=\"Section 1 - Example sub-navigation\">\n          {props.items.map((item) => (\n            <NavItem to={item.to} key={item.to}>\n              {item.label}\n            </NavItem>\n          ))}\n        </NavExpandable>\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Nav Grouped List', () => {\n  const view = mount(\n    <Nav>\n      <NavGroup id=\"grp-1\" title=\"Section 1\">\n        <NavList>\n          {props.items.map((item) => (\n            <NavItem to={item.to} key={`section1_${item.to}`}>\n              {item.label}\n            </NavItem>\n          ))}\n        </NavList>\n      </NavGroup>\n      <NavGroup id=\"grp-2\" title=\"Section 2\">\n        <NavList>\n          {props.items.map((item) => (\n            <NavItem to={item.to} key={`section2_${item.to}`}>\n              {item.label}\n            </NavItem>\n          ))}\n        </NavList>\n      </NavGroup>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Horizontal Nav List', () => {\n  const view = mount(\n    <Nav>\n      <NavList variant=\"horizontal\">\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to}>\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Tertiary Nav List', () => {\n  const view = mount(\n    <Nav>\n      <NavList variant=\"tertiary\">\n        {props.items.map((item) => (\n          <NavItem to={item.to} key={item.to}>\n            {item.label}\n          </NavItem>\n        ))}\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Nav List with custom item nodes', () => {\n  const view = mount(\n    <Nav>\n      <NavList variant=\"tertiary\">\n        <NavItem to=\"/components/nav#link1\" className=\"test-nav-item-class\">\n          <div className=\"my-custom-node\">My custom node</div>\n        </NavItem>\n      </NavList>\n    </Nav>,\n    { context }\n  );\n  expect(view).toMatchSnapshot();\n});\n"],"file":"Nav.test.js"}