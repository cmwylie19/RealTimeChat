{"version":3,"sources":["../../../../src/components/Accordion/AccordionToggle.tsx"],"names":["AccordionToggle","className","id","isExpanded","children","component","props","ToggleContainer","Container","styles","accordionToggle","modifiers","expanded","accordionToggleText","accordionToggleIcon"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAeO,IAAMA,eAA8D,GAAG,SAAjEA,eAAiE;AAAA,4BAC5EC,SAD4E;AAAA,MAC5EA,SAD4E,+BAChE,EADgE;AAAA,MAE5EC,EAF4E,QAE5EA,EAF4E;AAAA,6BAG5EC,UAH4E;AAAA,MAG5EA,UAH4E,gCAG/D,KAH+D;AAAA,2BAI5EC,QAJ4E;AAAA,MAI5EA,QAJ4E,8BAIjE,IAJiE;AAAA,MAK5EC,SAL4E,QAK5EA,SAL4E;AAAA,MAMzEC,KANyE;;AAAA,SAQ5E,oBAAC,kCAAD,CAAkB,QAAlB,QACG,iBAAyB;AAAA,QAAtBC,eAAsB,SAAtBA,eAAsB;AACxB,QAAMC,SAAS,GAAGH,SAAS,IAAIE,eAA/B;AACA,WACE,oBAAC,SAAD,QACE;AACE,MAAA,EAAE,EAAEL,EADN;AAEE,MAAA,SAAS,EAAE,sBAAIO,sBAAOC,eAAX,EAA4BP,UAAU,IAAIM,sBAAOE,SAAP,CAAiBC,QAA3D,EAAqEX,SAArE;AAFb,OAGMK,KAHN;AAIE,uBAAeH;AAJjB,QAME;AAAM,MAAA,SAAS,EAAE,sBAAIM,sBAAOI,mBAAX;AAAjB,OAAmDT,QAAnD,CANF,EAOE,oBAAC,0BAAD;AAAgB,MAAA,SAAS,EAAE,sBAAIK,sBAAOK,mBAAX;AAA3B,MAPF,CADF,CADF;AAaD,GAhBH,CAR4E;AAAA,CAAvE;;;;AAXLV,EAAAA,Q;AAEAH,EAAAA,S;AAEAE,EAAAA,U;AAEAD,EAAAA,E;AAEAG,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AngleRightIcon } from '@patternfly/react-icons';\nimport { Omit } from '../../helpers/typeUtils';\nimport { AccordionContext } from './AccordionContext';\n\nexport interface AccordionToggleProps extends Omit<React.HTMLProps<HTMLButtonElement>, 'type'> {\n  /** Content rendered inside the Accordion toggle  */\n  children?: React.ReactNode;\n  /** Additional classes added to the Accordion Toggle  */\n  className?: string;\n  /** Flag to show if the expanded content of the Accordion item is visible  */\n  isExpanded?: boolean;\n  /** Identify the Accordion toggle number  */\n  id: string;\n  /** Container to override the default for toggle */\n  component?: React.ElementType;\n}\n\nexport const AccordionToggle: React.FunctionComponent<AccordionToggleProps> = ({\n  className = '',\n  id,\n  isExpanded = false,\n  children = null,\n  component,\n  ...props\n}: AccordionToggleProps) => (\n  <AccordionContext.Consumer>\n    {({ ToggleContainer }) => {\n      const Container = component || ToggleContainer;\n      return (\n        <Container>\n          <button\n            id={id}\n            className={css(styles.accordionToggle, isExpanded && styles.modifiers.expanded, className)}\n            {...props}\n            aria-expanded={isExpanded}\n          >\n            <span className={css(styles.accordionToggleText)}>{children}</span>\n            <AngleRightIcon className={css(styles.accordionToggleIcon)} />\n          </button>\n        </Container>\n      );\n    }}\n  </AccordionContext.Consumer>\n);\n"],"file":"AccordionToggle.js"}