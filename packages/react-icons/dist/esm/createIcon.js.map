{"version":3,"sources":["../../src/createIcon.js"],"names":["React","getSize","propTypes","defaultProps","currentId","createIcon","iconDefinition","viewBox","xOffset","yOffset","width","height","join","transform","Icon","Component","render","props","size","color","title","noStyle","noVerticalAlign","hasTitle","Boolean","heightWidth","baseAlign","Number","parseFloat","style","verticalAlign","id","svgPath","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,QAAiD,UAAjD;AAEA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,MAAMC,UAAU,GAAGC,cAAc,IAAI;AACnC,QAAMC,OAAO,GAAG,CAACD,cAAc,CAACE,OAAf,IAA0B,CAA3B,EAA8BF,cAAc,CAACG,OAAf,IAA0B,CAAxD,EAA2DH,cAAc,CAACI,KAA1E,EAAiFJ,cAAc,CAACK,MAAhG,EAAwGC,IAAxG,CAA6G,GAA7G,CAAhB;AACA,QAAMC,SAAS,GAAGP,cAAc,CAACO,SAAjC;;AACA,QAAMC,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AAAA;AAAA;;AAAA,kCAK3B,cAAaX,SAAS,EAAG,EALE;AAAA;;AAOjCY,IAAAA,MAAM,GAAG;AACP,0BAAmE,KAAKC,KAAxE;AAAA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,OAAtB;AAA+BC,QAAAA;AAA/B,OAAN;AAAA,YAAyDL,KAAzD;;AAEA,YAAMM,QAAQ,GAAGC,OAAO,CAACJ,KAAD,CAAxB;AACA,YAAMK,WAAW,GAAGxB,OAAO,CAACiB,IAAD,CAA3B;AACA,YAAMQ,SAAS,GAAG,CAAC,IAAD,GAAQC,MAAM,CAACC,UAAP,CAAkBH,WAAlB,CAA1B;AACA,YAAMI,KAAK,GAAGP,eAAe,GAAG,IAAH,GAAU;AAAEQ,QAAAA,aAAa,EAAG,GAAEJ,SAAU;AAA9B,OAAvC;AAEA,aACE;AACE,QAAA,KAAK,EAAEG,KADT;AAEE,QAAA,IAAI,EAAEV,KAFR;AAGE,QAAA,MAAM,EAAEM,WAHV;AAIE,QAAA,KAAK,EAAEA,WAJT;AAKE,QAAA,OAAO,EAAElB,OALX;AAME,2BAAiBgB,QAAQ,GAAG,KAAKQ,EAAR,GAAa,IANxC;AAOE,uBAAaR,QAAQ,GAAG,IAAH,GAAU,IAPjC;AAQE,QAAA,IAAI,EAAC;AARP,SASMN,KATN,GAWGM,QAAQ,IAAI;AAAO,QAAA,EAAE,EAAE,KAAKQ;AAAhB,SAAqBX,KAArB,CAXf,EAYE;AAAM,QAAA,CAAC,EAAEd,cAAc,CAAC0B,OAAxB;AAAiC,QAAA,SAAS,EAAEnB;AAA5C,QAZF,CADF;AAgBD;;AA/BgC;;AAHA,kBAG7BC,IAH6B,iBAIZR,cAAc,CAAC2B,IAJH;;AAAA,kBAG7BnB,IAH6B,eAKdZ,SALc;;AAAA,kBAG7BY,IAH6B,kBAMXX,YANW;;AAqCnC,SAAOW,IAAP;AACD,CAtCD;;AAwCA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { getSize, propTypes, defaultProps } from './common';\n\nlet currentId = 0;\n\nconst createIcon = iconDefinition => {\n  const viewBox = [iconDefinition.xOffset || 0, iconDefinition.yOffset || 0, iconDefinition.width, iconDefinition.height].join(' ');\n  const transform = iconDefinition.transform;\n  class Icon extends React.Component {\n    static displayName = iconDefinition.name;\n    static propTypes = propTypes;\n    static defaultProps = defaultProps;\n\n    id = `icon-title-${currentId++}`;\n\n    render() {\n      const { size, color, title, noStyle, noVerticalAlign, ...props } = this.props;\n\n      const hasTitle = Boolean(title);\n      const heightWidth = getSize(size);\n      const baseAlign = -.125 * Number.parseFloat(heightWidth);\n      const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n\n      return (\n        <svg\n          style={style}\n          fill={color}\n          height={heightWidth}\n          width={heightWidth}\n          viewBox={viewBox}\n          aria-labelledby={hasTitle ? this.id : null}\n          aria-hidden={hasTitle ? null : true}\n          role=\"img\"\n          {...props}\n        >\n          {hasTitle && <title id={this.id}>{title}</title>}\n          <path d={iconDefinition.svgPath} transform={transform} />\n        </svg>\n      );\n    }\n  }\n\n  return Icon;\n};\n\nexport default createIcon;\n"],"file":"createIcon.js"}