{"version":3,"sources":["../../../../src/components/Table/BodyWrapper.tsx"],"names":["React","css","styles","mapOpenedRows","BodyWrapper","mappedRows","rows","onCollapse","tbodyRef","headerRows","props","some","row","hasOwnProperty","children","map","oneRow","key","isOpen","modifiers","expanded"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AAWA,OAAO,MAAMC,WAAsD,GAAG,UAO7C;AAAA,MAP8C;AACrEC,IAAAA,UADqE;AAErEC,IAAAA,IAAI,GAAG,EAF8D;AAGrEC,IAAAA,UAHqE;AAIrEC,IAAAA,QAJqE;AAKrEC,IAAAA;AALqE,GAO9C;AAAA,MADpBC,KACoB;;AACvB,MAAIL,UAAU,IAAIA,UAAU,CAACM,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,cAAJ,CAAmB,QAAnB,CAAzB,CAAlB,EAA0E;AACxE,WACE,oBAAC,KAAD,CAAO,QAAP,QACGV,aAAa,CAACE,UAAD,EAAaK,KAAK,CAACI,QAAnB,CAAb,CAA0CC,GAA1C,CAA8C,CAACC,MAAD,EAASC,GAAT,KAC7C,0CACMP,KADN;AAEE,MAAA,SAAS,EAAET,GAAG,CAACe,MAAM,CAACE,MAAP,IAAiBhB,MAAM,CAACiB,SAAP,CAAiBC,QAAnC,CAFhB;AAGE,MAAA,GAAG,EAAG,SAAQH,GAAI,EAHpB;AAIE,MAAA,GAAG,EAAET;AAJP,QAMGQ,MAAM,CAACV,IANV,CADD,CADH,CADF;AAcD;;AACD,SAAO,0CAAWI,KAAX;AAAkB,IAAA,GAAG,EAAEF;AAAvB,KAAP;AACD,CAzBM;;AARLM,EAAAA,Q;AACAT,EAAAA,U;AACAC,EAAAA,I;AACAC,EAAAA,U;AACAC,EAAAA,Q;AACAC,EAAAA,U","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IRow, IRowData, IExtraData, IHeaderRow } from './Table';\nimport { mapOpenedRows } from './utils/headerUtils';\n\nexport interface BodyWrapperProps {\n  children?: React.ReactNode;\n  mappedRows?: IRow[];\n  rows?: IRow[];\n  onCollapse?: (event: React.MouseEvent, rowIndex: number, isOpen: boolean, rowData: IRowData, extraData: IExtraData) => undefined;\n  tbodyRef?: React.Ref<any> | Function;\n  headerRows?: IHeaderRow[];\n}\n\nexport const BodyWrapper: React.FunctionComponent<BodyWrapperProps> = ({\n  mappedRows,\n  rows = [] as IRow[],\n  onCollapse,\n  tbodyRef,\n  headerRows,\n  ...props\n}: BodyWrapperProps ) => {\n  if (mappedRows && mappedRows.some((row) => row.hasOwnProperty('parent'))) {\n    return (\n      <React.Fragment>\n        {mapOpenedRows(mappedRows, props.children).map((oneRow, key) => (\n          <tbody\n            {...props}\n            className={css(oneRow.isOpen && styles.modifiers.expanded)}\n            key={`tbody-${key}`}\n            ref={tbodyRef as React.Ref<any>}\n          >\n            {oneRow.rows}\n          </tbody>\n        ))}\n      </React.Fragment>\n    );\n  }\n  return <tbody {...props} ref={tbodyRef as React.Ref<any>} />;\n};\n"],"file":"BodyWrapper.js"}