{"version":3,"sources":["../../../../src/components/LoginPage/LoginForm.test.tsx"],"names":["React","shallow","LoginForm","test","view","expect","toMatchSnapshot","mockFn","jest","fn","find","simulate","toHaveBeenCalled"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEAC,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD,OAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClD,QAAMI,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACA,QAAML,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAEM,MAA7B;AAAqC,IAAA,eAAe,EAAC;AAArD,IAAD,CAApB;AACAH,EAAAA,IAAI,CAACM,IAAL,CAAU,uBAAV,EAAmCC,QAAnC,CAA4C,QAA5C;AACAN,EAAAA,MAAM,CAACE,MAAD,CAAN,CAAeK,gBAAf;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClD,QAAMI,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACA,QAAML,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAEM,MAA7B;AAAqC,IAAA,eAAe,EAAC;AAArD,IAAD,CAApB;AACAH,EAAAA,IAAI,CAACM,IAAL,CAAU,uBAAV,EAAmCC,QAAnC,CAA4C,QAA5C;AACAN,EAAAA,MAAM,CAACE,MAAD,CAAN,CAAeK,gBAAf;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,yCAAD,EAA4C,MAAM;AACpD,QAAMI,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACA,QAAML,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD;AAAW,IAAA,kBAAkB,EAAEM,MAA/B;AAAuC,IAAA,eAAe,EAAC;AAAvD,IAAD,CAApB;AACAH,EAAAA,IAAI,CAACM,IAAL,CAAU,0BAAV,EAAsCC,QAAtC,CAA+C,QAA/C;AACAN,EAAAA,MAAM,CAACE,MAAD,CAAN,CAAeK,gBAAf;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAC3C,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC;AAA3B,IAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,qFAAD,EAAwF,MAAM;AAChG,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,SAAD;AAAW,IAAA,mBAAmB,EAAC,kBAA/B;AAAkD,IAAA,eAAe,EAAC;AAAlE,IAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\n\nimport { LoginForm } from './LoginForm';\n\ntest('should render Login form', () => {\n  const view = shallow(<LoginForm />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('should call onChangeUsername callback', () => {\n  const mockFn = jest.fn();\n  const view = shallow(<LoginForm onChangeUsername={mockFn} rememberMeLabel=\"Login Form\" />);\n  view.find('#pf-login-username-id').simulate('change');\n  expect(mockFn).toHaveBeenCalled();\n});\n\ntest('should call onChangePassword callback', () => {\n  const mockFn = jest.fn();\n  const view = shallow(<LoginForm onChangePassword={mockFn} rememberMeLabel=\"Login Form\" />);\n  view.find('#pf-login-password-id').simulate('change');\n  expect(mockFn).toHaveBeenCalled();\n});\n\ntest('should call onChangeRememberMe callback', () => {\n  const mockFn = jest.fn();\n  const view = shallow(<LoginForm onChangeRememberMe={mockFn} rememberMeLabel=\"Login Form\" />);\n  view.find('#pf-login-remember-me-id').simulate('change');\n  expect(mockFn).toHaveBeenCalled();\n});\n\ntest('LoginForm with rememberMeLabel', () => {\n  const view = shallow(<LoginForm rememberMeLabel=\"remember me\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('LoginForm with rememberMeLabel and rememberMeAriaLabel uses the rememberMeAriaLabel', () => {\n  const view = shallow(<LoginForm rememberMeAriaLabel=\"ARIA remember me\" rememberMeLabel=\"remember me\" />);\n  expect(view).toMatchSnapshot();\n});\n"],"file":"LoginForm.test.js"}