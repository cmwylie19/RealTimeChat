{"version":3,"sources":["../../../../src/components/Page/Page.test.tsx"],"names":["React","mount","Page","PageHeader","PageSidebar","PageSection","Breadcrumb","BreadcrumbItem","SkipToContent","props","test","Header","undefined","Sidebar","view","expect","toMatchSnapshot","PageBreadcrumb","find","getDOMNode","id","toBe","mainId","PageSkipToContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { Page } from './Page';\nimport { PageHeader } from './PageHeader';\nimport { PageSidebar } from './PageSidebar';\nimport { PageSection } from './PageSection';\nimport { Breadcrumb, BreadcrumbItem } from '../Breadcrumb';\nimport { SkipToContent } from '../SkipToContent';\n\nconst props = {\n  'aria-label': 'Page layout',\n  'id': 'PageId',\n  'className': 'my-page-class'\n};\n\ntest('Check page vertical layout example against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" onNavToggle={() => undefined} />;\n  const Sidebar = <PageSidebar nav=\"Navigation\" isNavOpen />;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check dark page against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" onNavToggle={() => undefined} />;\n  const Sidebar = <PageSidebar nav=\"Navigation\" isNavOpen theme=\"dark\"/>;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check page horizontal layout example against snapshot', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('Check page to verify breadcrumb is created', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const PageBreadcrumb = () => (\n    <Breadcrumb>\n      <BreadcrumbItem>Section Home</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\" isActive>\n        Section Landing\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n  const view = mount(\n    <Page {...props} header={Header} sidebar={Sidebar} breadcrumb={<PageBreadcrumb />}>\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n  expect(view.find('.pf-c-page__main').getDOMNode().id).toBe('');\n});\n\ntest('Check page to verify skip to content points to main content region', () => {\n  const Header = <PageHeader logo=\"Logo\" toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />;\n  const Sidebar = <PageSidebar isNavOpen />;\n  const PageBreadcrumb = (\n    <Breadcrumb>\n      <BreadcrumbItem>Section Home</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n      <BreadcrumbItem to=\"#\" isActive>\n        Section Landing\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n  const mainId = 'main-content-page-layout-test-nav';\n  const PageSkipToContent = <SkipToContent href={`#${mainId}`}>Skip to Content</SkipToContent>;\n  const view = mount(\n    <Page\n      {...props}\n      header={Header}\n      sidebar={Sidebar}\n      breadcrumb={PageBreadcrumb}\n      skipToContent={PageSkipToContent}\n      mainContainerId={mainId}\n    >\n      <PageSection variant=\"default\">Section with default background</PageSection>\n      <PageSection variant=\"light\">Section with light background</PageSection>\n      <PageSection variant=\"dark\">Section with dark background</PageSection>\n      <PageSection variant=\"darker\">Section with darker background</PageSection>\n    </Page>\n  );\n  expect(view).toMatchSnapshot();\n  expect(view.find('.pf-c-page').getDOMNode().id).toBe(props.id);\n  expect(view.find('.pf-c-page__main').getDOMNode().id).toBe(mainId);\n});\n"],"file":"Page.test.js"}