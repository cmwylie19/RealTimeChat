{"version":3,"sources":["../../esm/test-helpers/MockedTableChanges.js"],"names":["withContext","context","contextType","WrappedComponent","WithContext","Component","getChildContext","render","React","createElement","props","children","propTypes","PropTypes","node","defaultProps","childContextTypes","TableProvider","columns","renderers","header","wrapper","row","cell","any","MockedTableChanges","updateFunc","TableContext","Provider","value","updateHeaderData","TableHeader","headerRows","func","array","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,QAAMA,WAAW,WAAXA,WAAW,GAAG,CAAC;AAC1BC,IAAAA,OAAO,GAAG,EADgB;AAE1BC,IAAAA,WAAW,GAAG;AAFY,GAAD,KAGrBC,gBAAgB,IAAI;AACxB,UAAMC,WAAN,SAA0BC,gBAA1B,CAAoC;AAClCC,MAAAA,eAAe,GAAG;AAChB,eAAOL,OAAP;AACD;;AAEDM,MAAAA,MAAM,GAAG;AACP,eAAOC,gBAAMC,aAAN,CAAoBN,gBAApB,EAAsC,IAAtC,EAA4C,KAAKO,KAAL,CAAWC,QAAvD,CAAP;AACD;;AAPiC;;AAWpCP,IAAAA,WAAW,CAACQ,SAAZ,GAAwB;AACtBD,MAAAA,QAAQ,EAAEE,oBAAUC;AADE,KAAxB;AAGAV,IAAAA,WAAW,CAACW,YAAZ,GAA2B;AACzBJ,MAAAA,QAAQ,EAAE;AADe,KAA3B;AAGAP,IAAAA,WAAW,CAACD,gBAAZ,GAA+BA,gBAA/B;AACAC,IAAAA,WAAW,CAACY,iBAAZ,GAAgCd,WAAhC;AACA,WAAOE,WAAP;AACD,GAxBM;;AAyBA,QAAMa,aAAa,WAAbA,aAAa,GAAGjB,WAAW,CAAC;AACvCC,IAAAA,OAAO,EAAE;AACPiB,MAAAA,OAAO,EAAE,EADF;AAEPC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE,OADH;AAENC,UAAAA,GAAG,EAAE,IAFC;AAGNC,UAAAA,IAAI,EAAE;AAHA;AADC;AAFJ,KAD8B;AAWvCrB,IAAAA,WAAW,EAAE;AACXgB,MAAAA,OAAO,EAAEL,oBAAUW,GADR;AAEXL,MAAAA,SAAS,EAAEN,oBAAUW;AAFV;AAX0B,GAAD,CAAX,CAe1B,OAf0B,CAAtB;;AAiBP,QAAMC,kBAAkB,GAAG,CAAC;AAC1BC,IAAAA,UAD0B;AAE1BR,IAAAA;AAF0B,GAAD,KAGrBV,gBAAMC,aAAN,CAAoBkB,oBAAaC,QAAjC,EAA2C;AAC/CC,IAAAA,KAAK,EAAE;AACLC,MAAAA,gBAAgB,EAAEJ;AADb;AADwC,GAA3C,EAIHlB,gBAAMC,aAAN,CAAoBQ,aAApB,EAAmC,IAAnC,EAAyCT,gBAAMC,aAAN,CAAoBsB,mBAApB,EAAiC;AAC3EC,IAAAA,UAAU,EAAEd;AAD+D,GAAjC,CAAzC,CAJG,CAHN;;AAWAO,EAAAA,kBAAkB,CAACb,SAAnB,GAA+B;AAC7Bc,IAAAA,UAAU,EAAEb,oBAAUoB,IADO;AAE7Bf,IAAAA,OAAO,EAAEL,oBAAUqB;AAFU,GAA/B;AAIAT,EAAAA,kBAAkB,CAACV,YAAnB,GAAkC;AAChCW,IAAAA,UAAU,EAAE,MAAMS,SADc;AAEhCjB,IAAAA,OAAO,EAAE;AAFuB,GAAlC;oBAIeO,kB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableContext } from '../components/Table/Table';\nimport { TableHeader } from '../components/Table';\nexport const withContext = ({\n  context = {},\n  contextType = {}\n}) => WrappedComponent => {\n  class WithContext extends Component {\n    getChildContext() {\n      return context;\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, null, this.props.children);\n    }\n\n  }\n\n  WithContext.propTypes = {\n    children: PropTypes.node\n  };\n  WithContext.defaultProps = {\n    children: null\n  };\n  WithContext.WrappedComponent = WrappedComponent;\n  WithContext.childContextTypes = contextType;\n  return WithContext;\n};\nexport const TableProvider = withContext({\n  context: {\n    columns: [],\n    renderers: {\n      header: {\n        wrapper: 'thead',\n        row: 'tr',\n        cell: 'th'\n      }\n    }\n  },\n  contextType: {\n    columns: PropTypes.any,\n    renderers: PropTypes.any\n  }\n})('table');\n\nconst MockedTableChanges = ({\n  updateFunc,\n  columns\n}) => React.createElement(TableContext.Provider, {\n  value: {\n    updateHeaderData: updateFunc\n  }\n}, React.createElement(TableProvider, null, React.createElement(TableHeader, {\n  headerRows: columns\n})));\n\nMockedTableChanges.propTypes = {\n  updateFunc: PropTypes.func,\n  columns: PropTypes.array\n};\nMockedTableChanges.defaultProps = {\n  updateFunc: () => undefined,\n  columns: []\n};\nexport default MockedTableChanges;\n//# sourceMappingURL=MockedTableChanges.js.map"],"file":"MockedTableChanges.js"}