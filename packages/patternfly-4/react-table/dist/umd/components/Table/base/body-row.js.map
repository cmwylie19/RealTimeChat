{"version":3,"sources":["../../../../esm/components/Table/base/body-row.js"],"names":["React","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","BodyRow","Component","shouldComponentUpdate","nextProps","columns","rowData","props","renderers","row","call","render","onRow","rowKey","rowIndex","createElement","map","column","columnIndex","property","cell","evaluatedProperty","transforms","formatters","extraParameters","transformed","console","warn","children","_pt","any","isRequired","number","string","args"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * body-row.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { isEqual, isFunction } from 'lodash';\nimport * as React from 'react';\nimport { columnsAreEqual } from './columns-are-equal';\nimport { evaluateFormatters } from './evaluate-formatters';\nimport { evaluateTransforms } from './evaluate-transforms';\nimport { mergeProps } from './merge-props';\nexport class BodyRow extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const {\n      columns,\n      rowData\n    } = this.props; // Check for row based override.\n\n    const {\n      renderers\n    } = nextProps;\n\n    if (renderers && renderers.row && renderers.row.shouldComponentUpdate) {\n      if (isFunction(renderers.row.shouldComponentUpdate)) {\n        return renderers.row.shouldComponentUpdate.call(this, nextProps, {}, {});\n      }\n\n      return true;\n    }\n\n    return !(columnsAreEqual(columns, nextProps.columns) && isEqual(rowData, nextProps.rowData));\n  }\n\n  render() {\n    const {\n      columns,\n      renderers,\n      onRow,\n      rowKey,\n      rowIndex,\n      rowData\n    } = this.props;\n    return React.createElement(renderers.row, onRow(rowData, {\n      rowIndex,\n      rowKey\n    }), columns.map((column, columnIndex) => {\n      const {\n        property,\n        cell,\n        props\n      } = column;\n      const evaluatedProperty = property || cell && cell.property;\n      const {\n        transforms = [],\n        formatters = []\n      } = cell || {};\n      const extraParameters = {\n        columnIndex,\n        property: evaluatedProperty,\n        column,\n        rowData,\n        rowIndex,\n        rowKey\n      };\n      const transformed = evaluateTransforms(transforms, rowData[evaluatedProperty], extraParameters);\n\n      if (!transformed) {\n        // tslint:disable-next-line:no-console\n        console.warn('Table.Body - Failed to receive a transformed result');\n      }\n\n      return React.createElement(renderers.cell, _objectSpread({\n        key: `${columnIndex}-cell`\n      }, mergeProps(props, cell && cell.props, transformed)), transformed.children || evaluateFormatters(formatters)(rowData[`_${evaluatedProperty}`] || rowData[evaluatedProperty], extraParameters));\n    }));\n  }\n\n}\n\n_defineProperty(BodyRow, \"propTypes\", {\n  columns: _pt.any.isRequired,\n  renderers: _pt.any.isRequired,\n  onRow: _pt.any,\n  rowIndex: _pt.number.isRequired,\n  rowData: _pt.any.isRequired,\n  rowKey: _pt.string.isRequired\n});\n\n_defineProperty(BodyRow, \"defaultProps\", {\n  onRow: (...args) => Object\n});\n//# sourceMappingURL=body-row.js.map"],"file":"body-row.js"}