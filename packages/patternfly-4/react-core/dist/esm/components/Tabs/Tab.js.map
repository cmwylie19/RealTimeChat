{"version":3,"sources":["../../../../src/components/Tabs/Tab.tsx"],"names":["React","Tab0","children","eventKey","className","tabContentId","tabContentRef","title","props","Component","href","withForwardedRef","TabContainer","render","forwardRef","rest","Tab"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAoBA,MAAMC,IAAuC,GAAG,UAQhC;AAAA,MARiC;AAC/CC,IAAAA,QAD+C;AAE/CC,IAAAA,QAF+C;AAG/CC,IAAAA,SAAS,GAAG,EAHmC;AAI/CC,IAAAA,YAJ+C;AAK/CC,IAAAA,aAL+C;AAM/CC,IAAAA;AAN+C,GAQjC;AAAA,MADXC,KACW;;AACd;AACA,QAAMC,SAAS,GAAID,KAAK,CAACE,IAAN,GAAa,GAAb,GAAmB,QAAtC;AACA,SACE,oBAAC,SAAD,eAAeF,KAAf;AAAsB,IAAA,SAAS,EAAEJ,SAAjC;AAA4C,IAAA,GAAG,EAAEE;AAAjD,MACGJ,QADH,CADF;AAKD,CAhBD;;;AAfEA,EAAAA,Q;AAEAE,EAAAA,S;AAEAM,EAAAA,I;AAEAH,EAAAA,K;AAEAJ,EAAAA,Q;AAEAE,EAAAA,Y;AAEAC,EAAAA,a;;;AAyBF,MAAMK,gBAAgB,GAAIF,SAAD,IAAoB;AAC3C,QAAMG,YAAN,SAA2BZ,KAAK,CAACS,SAAjC,CAA8D;AAC5DI,IAAAA,MAAM,GAAG;AACP,0BAAgC,KAAKL,KAArC;AAAA,YAAM;AAAEM,QAAAA;AAAF,OAAN;AAAA,YAAuBC,IAAvB;;AACA,aAAO,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAED;AAAhB,SAAgCC,IAAhC,EAAP;AACD;;AAJ2D;;AADnB,kBACrCH,YADqC;AArC3CV,IAAAA,QAqC2C;AAnC3CE,IAAAA,SAmC2C;AAjC3CM,IAAAA,IAiC2C;AA/B3CH,IAAAA,KA+B2C;AA7B3CJ,IAAAA,QA6B2C;AA3B3CE,IAAAA,YA2B2C;AAzB3CC,IAAAA,aAyB2C;AAH3CQ,IAAAA,UAG2C;AAAA;;AAO3C,SAAOd,KAAK,CAACc,UAAN,CAAiB,CAACN,KAAD,EAAaF,aAAb,KAA+B,oBAAC,YAAD,eAAkBE,KAAlB;AAAyB,IAAA,UAAU,EAAEF;AAArC,KAAhD,CAAP;AACD,CARD;;AAUA,OAAO,MAAMU,GAAG,GAAGL,gBAAgB,CAACV,IAAD,CAA5B","sourcesContent":["import * as React from 'react';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface TabProps extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'title'> {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode; \n  /** additional classes added to the Tab */\n  className?: string; \n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs variant=\"nav\"> should have an href. */\n  href?: string; \n  /** Tab title */\n  title: React.ReactNode;\n  /** uniquely identifies the tab */\n  eventKey: number | string; \n  /** child id for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentId?: string | number; \n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.RefObject<any>;\n}\n\nconst Tab0: React.FunctionComponent<TabProps> = ({\n  children,\n  eventKey,\n  className = '',\n  tabContentId,\n  tabContentRef,\n  title,\n  ...props\n}: TabProps) => {\n  // destructuring to prevent console warnings for applying eventKey, and tabContentId to a DOM element and remove title from the DOM element\n  const Component = (props.href ? 'a' : 'button') as any;\n  return (\n    <Component {...props} className={className} ref={tabContentRef}>\n      {children}\n    </Component>\n  );\n}\n\ninterface ForwardedRefProps extends TabProps {\n  forwardRef?: React.Ref<any>;\n}\n\nconst withForwardedRef = (Component: any) => {\n  class TabContainer extends React.Component<ForwardedRefProps> {\n    render() {\n      const { forwardRef, ...rest } = this.props;\n      return <Component ref={forwardRef} {...rest} />;\n    }\n  }\n  return React.forwardRef((props: any, tabContentRef) => <TabContainer {...props} forwardRef={tabContentRef} />);\n};\n\nexport const Tab = withForwardedRef(Tab0);\n"],"file":"Tab.js"}