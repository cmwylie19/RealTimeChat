{"version":3,"sources":["../../../../esm/components/Virtualized/utils/createCallbackMemoizer.js"],"names":["createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","Object","allInitialized","every","key","value","Array","isArray","length","indexChanged","some","cachedValue","join"],"mappings":";;;;;;;;;;;;;;;;;;oBAGwBA,sB;;AAHxB;;;AAGe,WAASA,sBAAT,CAAgCC,cAAc,GAAG,IAAjD,EAAuD;AACpE,QAAIC,aAAa,GAAG,EAApB;AACA,WAAO,CAAC;AACNC,MAAAA,QADM;AAENC,MAAAA;AAFM,KAAD,KAGD;AACJ,YAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,OAAZ,CAAb;AACA,YAAMG,cAAc,GAAG,CAACN,cAAD,IAAmBI,IAAI,CAACG,KAAL,CAAWC,GAAG,IAAI;AAC1D,cAAMC,KAAK,GAAGN,OAAO,CAACK,GAAD,CAArB;AACA,eAAOE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBA,KAAK,CAACG,MAAN,GAAe,CAAtC,GAA0CH,KAAK,IAAI,CAA1D;AACD,OAHyC,CAA1C;AAIA,YAAMI,YAAY,GAAGT,IAAI,CAACQ,MAAL,KAAgBP,MAAM,CAACD,IAAP,CAAYH,aAAZ,EAA2BW,MAA3C,IAAqDR,IAAI,CAACU,IAAL,CAAUN,GAAG,IAAI;AACzF,cAAMO,WAAW,GAAGd,aAAa,CAACO,GAAD,CAAjC;AACA,cAAMC,KAAK,GAAGN,OAAO,CAACK,GAAD,CAArB;AACA,eAAOE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBM,WAAW,CAACC,IAAZ,CAAiB,GAAjB,MAA0BP,KAAK,CAACO,IAAN,CAAW,GAAX,CAAjD,GAAmED,WAAW,KAAKN,KAA1F;AACD,OAJyE,CAA1E;AAKAR,MAAAA,aAAa,GAAGE,OAAhB;;AAEA,UAAIG,cAAc,IAAIO,YAAtB,EAAoC;AAClCX,QAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,KAnBD;AAoBD","sourcesContent":["/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer(requireAllKeys = true) {\n  let cachedIndices = {};\n  return ({\n    callback,\n    indices\n  }) => {\n    const keys = Object.keys(indices);\n    const allInitialized = !requireAllKeys || keys.every(key => {\n      const value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    const indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(key => {\n      const cachedValue = cachedIndices[key];\n      const value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}\n//# sourceMappingURL=createCallbackMemoizer.js.map"],"file":"createCallbackMemoizer.js"}