{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorItem.tsx"],"names":["React","styles","css","ContextSelectorContext","ContextSelectorItem","Component","createRef","componentDidMount","props","sendRef","index","ref","current","render","className","children","isHovered","onClick","isDisabled","onSelect","contextSelectorMenuListItem","modifiers","disabled","hover","event","undefined","Function","prototype"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AAoBA,OAAO,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAA4E;AAAA;AAAA;;AAAA,iCAWvCL,KAAK,CAACM,SAAN,EAXuC;AAAA;;AAajFC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAA9B,EAAqC,KAAKC,GAAL,CAASC,OAA9C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAA0F,KAAKL,KAA/F;AAAA,UAAM;AAAEM,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA,OAAlC;AAA2CC,MAAAA,UAA3C;AAAuDR,MAAAA,KAAvD;AAA8DD,MAAAA;AAA9D,KAAN;AAAA,UAAgFD,KAAhF;;AACA,WACE,oBAAC,sBAAD,CAAwB,QAAxB,QACG,CAAC;AAAEW,MAAAA;AAAF,KAAD,KACC;AAAI,MAAA,IAAI,EAAC;AAAT,OACE;AACE,MAAA,SAAS,EAAEjB,GAAG,CACZD,MAAM,CAACmB,2BADK,EAEZF,UAAU,IAAIjB,MAAM,CAACoB,SAAP,CAAiBC,QAFnB,EAGZN,SAAS,IAAIf,MAAM,CAACoB,SAAP,CAAiBE,KAHlB,EAIZT,SAJY,CADhB;AAOE,MAAA,GAAG,EAAE,KAAKH,GAPZ;AAQE,MAAA,OAAO,EAAGa,KAAD,IAAW;AAClB,YAAI,CAACN,UAAL,EAAiB;AACfD,UAAAA,OAAO,CAACO,KAAD,CAAP;AACAL,UAAAA,QAAQ,CAACK,KAAD,EAAQT,QAAR,CAAR;AACD;AACF;AAbH,OAcMP,KAdN,GAgBGO,QAhBH,CADF,CAFJ,CADF;AA0BD;;AA9CgF;;gBAAtEX,mB;AAhBXW,EAAAA,Q;AAEAD,EAAAA,S;AAEAI,EAAAA,U;AAGAF,EAAAA,S;AAEAC,EAAAA,O;AAEAP,EAAAA,K;AAEAD,EAAAA,O;;;gBAGWL,mB,kBACW;AACpBW,EAAAA,QAAQ,EAAE,IADU;AAEpBD,EAAAA,SAAS,EAAE,EAFS;AAGpBE,EAAAA,SAAS,EAAE,KAHS;AAIpBE,EAAAA,UAAU,EAAE,KAJQ;AAKpBD,EAAAA,OAAO,EAAE,MAAWQ,SALA;AAMpBf,EAAAA,KAAK,EAAEe,SANa;AAOpBhB,EAAAA,OAAO,EAAEiB,QAAQ,CAACC;AAPE,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\n\nexport interface ContextSelectorItemProps {\n  /** Anything which can be rendered as Context Selector item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of the Context Selector item */\n  className?: string;\n  /** Render Context  Selector item as disabled */\n  isDisabled?: boolean;\n  // isSelected?\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Callback for click event */\n  onClick: (event: React.MouseEvent) => void;\n  /** internal index of the item */\n  index: number;\n  /** Internal callback for ref tracking */\n  sendRef: (index: number, current: any) => void;\n}\n\nexport class ContextSelectorItem extends React.Component<ContextSelectorItemProps> {\n  static defaultProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isHovered: false,\n    isDisabled: false,\n    onClick: (): any => undefined,\n    index: undefined as number,\n    sendRef: Function.prototype\n  };\n\n  ref: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n\n  render() {\n    const { className, children, isHovered, onClick, isDisabled, index, sendRef, ...props } = this.props;\n    return (\n      <ContextSelectorContext.Consumer>\n        {({ onSelect }) => (\n          <li role=\"none\">\n            <button\n              className={css(\n                styles.contextSelectorMenuListItem,\n                isDisabled && styles.modifiers.disabled,\n                isHovered && styles.modifiers.hover,\n                className\n              )}\n              ref={this.ref}\n              onClick={(event) => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, children);\n                }\n              }}\n              {...props}\n            >\n              {children}\n            </button>\n          </li>\n        )}\n      </ContextSelectorContext.Consumer>\n    );\n  }\n}\n"],"file":"ContextSelectorItem.js"}