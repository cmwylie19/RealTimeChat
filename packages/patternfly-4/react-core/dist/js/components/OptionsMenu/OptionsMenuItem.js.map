{"version":3,"sources":["../../../../src/components/OptionsMenu/OptionsMenuItem.tsx"],"names":["OptionsMenuItem","children","isSelected","onSelect","id","isDisabled","props","event","styles","optionsMenuMenuItemIcon","className"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAkBO,IAAMA,eAA8D,GAAG,SAAjEA,eAAiE,OAOlD;AAAA,2BAN1BC,QAM0B;AAAA,MAN1BA,QAM0B,8BANf,IAMe;AAAA,6BAL1BC,UAK0B;AAAA,MAL1BA,UAK0B,gCALb,KAKa;AAAA,2BAJ1BC,QAI0B;AAAA,MAJ1BA,QAI0B,8BAJf;AAAA,WAAM,IAAN;AAAA,GAIe;AAAA,qBAH1BC,EAG0B;AAAA,MAH1BA,EAG0B,wBAHrB,EAGqB;AAAA,MAF1BC,UAE0B,QAF1BA,UAE0B;AAAA,MADvBC,KACuB;;AAC1B,SACE,oBAAC,sBAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,OAAO,EAAE,iBAACE,KAAD;AAAA,aAAgBJ,QAAQ,CAACI,KAAD,CAAxB;AAAA;AAJX,KAKMF,UAAU,IAAI;AAAE,qBAAiB;AAAnB,GALpB,EAMMC,KANN,GAQGL,QARH,EASE;AAAG,IAAA,SAAS,EAAE,sBAAIO,wBAAOC,uBAAX,CAAd;AAAmD,uBAAnD;AAA+D,IAAA,MAAM,EAAE,CAACP;AAAxE,KAAoF,oBAAC,qBAAD,OAApF,CATF,CADF;AAYC,CApBI;;;;AAbLD,EAAAA,Q;AAEAS,EAAAA,S;AAEAR,EAAAA,U;AAEAG,EAAAA,U;AAEAF,EAAAA,Q;AAEAC,EAAAA,E","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface OptionsMenuItemProps extends Omit<React.HTMLProps<HTMLAnchorElement>, 'onSelect' | 'onClick' | 'onKeyDown' | 'type'> {\n  /** Anything which can be rendered as an Options menu item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of an Options menu item */\n  className?: string;\n  /** Render Options menu item as selected */\n  isSelected?: boolean;\n  /** Render Options menu item as disabled option */\n  isDisabled?: boolean;\n  /** Callback for when this Options menu item is selected */\n  onSelect?: (event?: React.MouseEvent<HTMLAnchorElement>|React.KeyboardEvent) => void;\n  /** Unique id of this Options menu item */\n  id?: string;\n}\n\nexport const OptionsMenuItem: React.FunctionComponent<OptionsMenuItemProps> = ({\n  children = null as React.ReactNode,\n  isSelected = false,\n  onSelect = () => null as any,\n  id = '',\n  isDisabled,\n  ...props\n}: OptionsMenuItemProps) => {\n  return (\n    <DropdownItem\n      id={id}\n      component=\"button\"\n      isDisabled={isDisabled}\n      onClick={(event: any) => onSelect(event)}\n      {...isDisabled && { 'aria-disabled': true }}\n      {...props}\n    >\n      {children}\n      <i className={css(styles.optionsMenuMenuItemIcon)} aria-hidden hidden={!isSelected}><CheckIcon /></i>\n    </DropdownItem>\n);};\n"],"file":"OptionsMenuItem.js"}