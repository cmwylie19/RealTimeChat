{"version":3,"sources":["../../../esm/components/TextInput/TextInput.test.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","onChange","jest","fn","value","test","newValue","event","currentTarget","view","React","createElement","TextInput","find","simulate","expect","toBeCalledWith","toMatchSnapshot","isDisabled","isReadOnly","required","isValid","myMock","global","console","error","toBeCalled","id","not"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport { TextInput } from './TextInput';\nconst props = {\n  onChange: jest.fn(),\n  value: 'test input'\n};\ntest('input passes value and event to onChange handler', () => {\n  const newValue = 'new test input';\n  const event = {\n    currentTarget: {\n      value: newValue\n    }\n  };\n  const view = shallow(React.createElement(TextInput, _extends({}, props, {\n    \"aria-label\": \"test input\"\n  })));\n  view.find('input').simulate('change', event);\n  expect(props.onChange).toBeCalledWith(newValue, event);\n});\ntest('simple text input', () => {\n  const view = shallow(React.createElement(TextInput, _extends({}, props, {\n    \"aria-label\": \"simple text input\"\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('disabled text input', () => {\n  const view = shallow(React.createElement(TextInput, {\n    isDisabled: true,\n    \"aria-label\": \"disabled text input\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('readonly text input', () => {\n  const view = shallow(React.createElement(TextInput, {\n    isReadOnly: true,\n    value: \"read only\",\n    \"aria-label\": \"readonly text input\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('invalid text input', () => {\n  const view = shallow(React.createElement(TextInput, _extends({}, props, {\n    required: true,\n    isValid: false,\n    \"aria-label\": \"invalid text input\"\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('should throw console error when no aria-label, id or aria-labelledby is given', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  shallow(React.createElement(TextInput, props));\n  expect(myMock).toBeCalled();\n});\ntest('should not throw console error when id is given but no aria-label or aria-labelledby', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  shallow(React.createElement(TextInput, _extends({}, props, {\n    id: \"5\"\n  })));\n  expect(myMock).not.toBeCalled();\n});\ntest('should not throw console error when aria-label is given but no id or aria-labelledby', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  shallow(React.createElement(TextInput, _extends({}, props, {\n    \"aria-label\": \"test input\"\n  })));\n  expect(myMock).not.toBeCalled();\n});\ntest('should not throw console error when aria-labelledby is given but no id or aria-label', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  shallow(React.createElement(TextInput, _extends({}, props, {\n    \"aria-labelledby\": \"test input\"\n  })));\n  expect(myMock).not.toBeCalled();\n});\n//# sourceMappingURL=TextInput.test.js.map"],"file":"TextInput.test.js"}