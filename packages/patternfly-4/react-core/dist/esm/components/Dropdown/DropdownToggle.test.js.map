{"version":3,"sources":["../../../../src/components/Dropdown/DropdownToggle.test.tsx"],"names":["React","mount","DropdownToggle","DropdownContext","describe","test","mockToggle","jest","fn","view","document","createElement","find","first","simulate","expect","mock","calls","toBe","mousedown","addEventListener","event","cb","removeEventListener","unmount","target","toHaveLength","toHaveBeenCalledWith","any","Function","touchstart","toMatchSnapshot","toggleTextClass","toggleIconClass"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { DropdownToggle } from './DropdownToggle';\nimport { DropdownContext } from './dropdownConstants';\n\ndescribe('API', () => {\n  test('click on closed', () => {\n    const mockToggle = jest.fn();\n    const view = mount(\n      <DropdownToggle onToggle={mockToggle} parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n\n    view\n      .find('button')\n      .first()\n      .simulate('click');\n    expect(mockToggle.mock.calls[0][0]).toBe(true);\n  });\n\n  test('click on opened', () => {\n    const mockToggle = jest.fn();\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" onToggle={mockToggle} isOpen parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n\n    view\n      .find('button')\n      .first()\n      .simulate('click');\n    expect(mockToggle.mock.calls[0][0]).toBe(false);\n  });\n\n  test('on click outside has been removed', () => {\n    let mousedown: EventListenerOrEventListenerObject = () => {};\n    document.addEventListener = jest.fn((event, cb) => {\n      mousedown = cb;\n    });\n    document.removeEventListener = jest.fn((event, cb) => {\n      if (mousedown === cb) {\n        mousedown = () => {};\n      }\n    });\n    const mockToggle = jest.fn();\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" onToggle={mockToggle} isOpen parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n    view.unmount();\n    mousedown({ target: document } as any);\n    expect(mockToggle.mock.calls).toHaveLength(0);\n    expect(document.removeEventListener).toHaveBeenCalledWith('mousedown', expect.any(Function));\n  });\n\n  test('on touch outside has been removed', () => {\n    let touchstart: EventListenerOrEventListenerObject = () => {};\n    document.addEventListener = jest.fn((event, cb) => {\n      touchstart = cb;\n    });\n    document.removeEventListener = jest.fn((event, cb) => {\n      if (touchstart === cb) {\n        touchstart = () => {};\n      }\n    });\n    const mockToggle = jest.fn();\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" onToggle={mockToggle} isOpen parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n    view.unmount();\n    touchstart({ target: document } as any);\n    expect(mockToggle.mock.calls).toHaveLength(0);\n    expect(document.removeEventListener).toHaveBeenCalledWith('touchstart', expect.any(Function));\n  });\n});\n\ndescribe('state', () => {\n  test('hover', () => {\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" isHovered parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('active', () => {\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" isActive parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('focus', () => {\n    const view = mount(\n      <DropdownToggle id=\"Dropdown Toggle\" isFocused parentRef={document.createElement('div')}>\n        Dropdown\n      </DropdownToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('class changes', () => {\n    const view = mount(\n      <DropdownContext.Provider\n        value={{\n          toggleTextClass: 'some-test-class',\n          toggleIconClass: 'another-test-class'\n        }}\n      >\n        <DropdownToggle id=\"Dropdown Toggle\" isFocused parentRef={document.createElement('div')}>\n          Dropdown\n        </DropdownToggle>\n      </DropdownContext.Provider>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('class changes', () => {\n    const view = mount(\n      <DropdownContext.Provider\n        value={{\n          toggleTextClass: 'some-test-class',\n          toggleIconClass: 'another-test-class'\n        }}\n      >\n        <DropdownToggle id=\"Dropdown Toggle\" isFocused parentRef={document.createElement('div')}>\n          Dropdown\n        </DropdownToggle>\n      </DropdownContext.Provider>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"DropdownToggle.test.js"}