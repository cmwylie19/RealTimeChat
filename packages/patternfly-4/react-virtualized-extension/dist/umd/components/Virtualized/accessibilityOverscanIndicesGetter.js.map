{"version":3,"sources":["../../../esm/components/Virtualized/accessibilityOverscanIndicesGetter.js"],"names":["defaultOverscanIndicesGetter","SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_VERTICAL","cellCount","overscanCellsCount","scrollDirection","startIndex","stopIndex","Math","max","overscanStartIndex","overscanStopIndex","min"],"mappings":";;;;;;;;;;;;;;;;;;oBASwBA,4B;AATjB,QAAMC,yBAAyB,WAAzBA,yBAAyB,GAAG,CAAC,CAAnC;AACA,QAAMC,wBAAwB,WAAxBA,wBAAwB,GAAG,CAAjC;AACA,QAAMC,2BAA2B,WAA3BA,2BAA2B,GAAG,YAApC;AACA,QAAMC,yBAAyB,WAAzBA,yBAAyB,GAAG,UAAlC;AACP;;;;;AAKe,WAASJ,4BAAT,CAAsC;AACnDK,IAAAA,SADmD;AAEnDC,IAAAA,kBAFmD;AAGnDC,IAAAA,eAHmD;AAInDC,IAAAA,UAJmD;AAKnDC,IAAAA;AALmD,GAAtC,EAMZ;AACD;AACA;AACA;AACAH,IAAAA,kBAAkB,GAAGI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,kBAAZ,CAArB;;AAEA,QAAIC,eAAe,KAAKL,wBAAxB,EAAkD;AAChD,aAAO;AACLU,QAAAA,kBAAkB,EAAEF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,UAAU,GAAG,CAAzB,CADf;AAELK,QAAAA,iBAAiB,EAAEH,IAAI,CAACI,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAS,GAAGH,kBAApC;AAFd,OAAP;AAID;;AAED,WAAO;AACLM,MAAAA,kBAAkB,EAAEF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,UAAU,GAAGF,kBAAzB,CADf;AAELO,MAAAA,iBAAiB,EAAEH,IAAI,CAACI,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAS,GAAG,CAApC;AAFd,KAAP;AAID","sourcesContent":["export const SCROLL_DIRECTION_BACKWARD = -1;\nexport const SCROLL_DIRECTION_FORWARD = 1;\nexport const SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport const SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter({\n  cellCount,\n  overscanCellsCount,\n  scrollDirection,\n  startIndex,\n  stopIndex\n}) {\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  }\n\n  return {\n    overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n    overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n  };\n}\n//# sourceMappingURL=accessibilityOverscanIndicesGetter.js.map"],"file":"accessibilityOverscanIndicesGetter.js"}