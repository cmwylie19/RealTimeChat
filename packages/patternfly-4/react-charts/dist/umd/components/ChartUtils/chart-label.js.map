{"version":3,"sources":["../../../esm/components/ChartUtils/chart-label.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getBulletLabelX","chartWidth","dx","labelPosition","Math","round","getBulletLabelY","chartHeight","dy","ChartCommonStyles","label","margin","getPieLabelX","height","legendPosition","padding","width","origin","radius","Helpers","getRadius","x","getPieLabelY","y","overpassFontCharacterConstant","getLabelTextSize","text","theme","style","legend","labels","TextSize","approximateTextSize","characterConstant"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Helpers, TextSize } from 'victory-core';\nimport { getPieOrigin } from './chart-origin';\nimport { ChartCommonStyles } from '../ChartTheme';\n// Returns x coordinate for bullet labels\nexport const getBulletLabelX = ({\n  chartWidth,\n  dx = 0,\n  labelPosition\n}) => {\n  return labelPosition === 'top' && chartWidth ? Math.round(chartWidth / 2) : dx;\n}; // Returns y coordinate for bullet labels\n\nexport const getBulletLabelY = ({\n  chartHeight,\n  dy = 0,\n  labelPosition\n}) => {\n  switch (labelPosition) {\n    case 'bottom':\n      return chartHeight + ChartCommonStyles.label.margin + dy;\n\n    case 'left':\n      return chartHeight ? Math.round(chartHeight / 2) + dy : dy;\n\n    default:\n      return dy;\n  }\n}; // Returns x coordinate for pie labels\n\nexport const getPieLabelX = ({\n  dx = 0,\n  height,\n  labelPosition,\n  legendPosition,\n  padding,\n  width\n}) => {\n  const origin = getPieOrigin({\n    height,\n    padding,\n    width\n  });\n  const radius = Helpers.getRadius({\n    height,\n    width,\n    padding\n  });\n\n  switch (labelPosition) {\n    case 'bottom':\n    case 'center':\n      return origin.x + dx;\n\n    case 'right':\n      switch (legendPosition) {\n        case 'bottom':\n          return origin.x + ChartCommonStyles.label.margin + dx + radius;\n\n        case 'right':\n          return origin.x + ChartCommonStyles.label.margin + dx;\n\n        default:\n          return dx;\n      }\n\n    default:\n      return dx;\n  }\n}; // Returns x coordinate for pie labels\n\nexport const getPieLabelY = ({\n  dy = 0,\n  height,\n  labelPosition,\n  padding,\n  width\n}) => {\n  const origin = getPieOrigin({\n    height,\n    padding,\n    width\n  });\n  const radius = Helpers.getRadius({\n    height,\n    width,\n    padding\n  });\n\n  switch (labelPosition) {\n    case 'center':\n    case 'right':\n      return origin.y + dy;\n\n    case 'bottom':\n      return origin.y + radius + ChartCommonStyles.label.margin * 2 + dy;\n\n    default:\n      return dy;\n  }\n}; // Average pixels per glyph for overpass / Red Hat fonts\n\nexport const overpassFontCharacterConstant = 2.5875; // Returns an approximate size for the give text\n\nexport const getLabelTextSize = ({\n  text,\n  theme\n}) => {\n  const style = theme.legend.style.labels;\n  return TextSize.approximateTextSize(text, _objectSpread({}, style, {\n    characterConstant: overpassFontCharacterConstant\n  }));\n};\n//# sourceMappingURL=chart-label.js.map"],"file":"chart-label.js"}