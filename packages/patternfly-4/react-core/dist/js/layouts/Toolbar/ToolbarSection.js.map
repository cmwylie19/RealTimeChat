{"version":3,"sources":["../../../../src/layouts/Toolbar/ToolbarSection.tsx"],"names":["ToolbarSection","children","className","ariaLabel","props","Error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AAWO,IAAMA,cAA4D,GAAG,SAA/DA,cAA+D,OAKjD;AAAA,2BAJzBC,QAIyB;AAAA,MAJzBA,QAIyB,8BAJd,IAIc;AAAA,4BAHzBC,SAGyB;AAAA,MAHzBA,SAGyB,+BAHb,IAGa;AAAA,MAFXC,SAEW,QAFzB,YAEyB;AAAA,MADtBC,KACsB;;AACzB,MAAI,CAACD,SAAL,EAAgB;AACd,UAAM,IAAIE,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SACE,4CAAaD,KAAb;AAAoB,IAAA,SAAS,EAAE,sBAAI,uBAAJ,EAA6BF,SAA7B;AAA/B,MACGD,QADH,CADF;AAKD,CAfM;;;;AAPLA,EAAAA,Q;AAEAC,EAAAA,S;AAEA,c","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/layouts/Toolbar/toolbar.css';\n\nexport interface ToolbarSectionProps extends React.HTMLProps<HTMLDivElement> {\n  /** Anything that can be rendered as toolbar section */\n  children?: React.ReactNode;\n  /** Classes applied to toolbar section */\n  className?: string;\n  /** Aria label applied to toolbar section */\n  'aria-label'?: string;\n}\n\nexport const ToolbarSection: React.FunctionComponent<ToolbarSectionProps> = ({\n  children = null,\n  className = null,\n  'aria-label': ariaLabel,\n  ...props\n}: ToolbarSectionProps) => {\n  if (!ariaLabel) {\n    throw new Error('ToolbarSection requires aria-label to be specified');\n  }\n\n  return (\n    <section {...props} className={css('pf-l-toolbar__section', className)}>\n      {children}\n    </section>\n  );\n};\n"],"file":"ToolbarSection.js"}