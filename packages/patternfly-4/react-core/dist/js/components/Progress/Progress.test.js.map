{"version":3,"sources":["../../../../src/components/Progress/Progress.test.js"],"names":["test","view","expect","toMatchSnapshot","describe","Object","keys","ProgressSize","forEach","oneSize","ProgressVariant","oneVariant","ProgressMeasureLocation","oneLocation","inside","sm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { Progress, ProgressSize } from './Progress';\nimport { ProgressVariant, ProgressMeasureLocation } from './ProgressContainer';\n\ntest('Simple progress', () => {\n  const view = mount(<Progress value={33} id=\"progress-simple-example\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('no value specified', () => {\n  const view = mount(<Progress id=\"no-value\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('additional label', () => {\n  const view = mount(<Progress id=\"additional-label\" value={33} label=\"Additional label\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('Progress with aria-valuetext', () => {\n  const view = mount(<Progress value={33} id=\"progress-aria-valuetext\" valueText=\"Descriptive text here\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('value lower than minValue', () => {\n  const view = mount(<Progress value={33} id=\"lower-min-value\" min={40} />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('value higher than maxValue', () => {\n  const view = mount(<Progress value={77} id=\"higher-max-value\" max={60} />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('value scaled with minValue', () => {\n  const view = mount(<Progress min={10} value={50} id=\"scaled-min-value\" />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('value scaled with maxValue', () => {\n  const view = mount(<Progress value={50} id=\"scaled-max-value\" max={80} />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('value scaled between minValue and maxValue', () => {\n  const view = mount(<Progress min={10} value={50} id=\"scaled-range-value\" max={80} />);\n  expect(view).toMatchSnapshot();\n});\n\ndescribe('Progress size', () => {\n  Object.keys(ProgressSize).forEach(oneSize => {\n    test(oneSize, () => {\n      const view = mount(<Progress id={`${oneSize}-progress`} value={33} size={oneSize} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\n\ndescribe('Progress variant', () => {\n  Object.keys(ProgressVariant).forEach(oneVariant => {\n    test(oneVariant, () => {\n      const view = mount(<Progress id={`${oneVariant}-progress`} value={33} variant={oneVariant} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\n\ndescribe('Progress measure location', () => {\n  Object.keys(ProgressMeasureLocation).forEach(oneLocation => {\n    test(oneLocation, () => {\n      const view = mount(<Progress id={`${oneLocation}-progress`} value={33} measureLocation={oneLocation} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n\n  test('inside and small should render large', () => {\n    const view = mount(\n      <Progress\n        id=\"large-progress\"\n        value={33}\n        measureLocation={ProgressMeasureLocation.inside}\n        size={ProgressSize.sm}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"Progress.test.js"}