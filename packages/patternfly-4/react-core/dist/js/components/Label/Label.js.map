{"version":3,"sources":["../../../../src/components/Label/Label.tsx"],"names":["Label","children","className","isCompact","props","styles","label","modifiers","compact"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AAWO,IAAMA,KAA0C,GAAG,SAA7CA,KAA6C;AAAA,MACxDC,QADwD,QACxDA,QADwD;AAAA,4BAExDC,SAFwD;AAAA,MAExDA,SAFwD,+BAE5C,EAF4C;AAAA,4BAGxDC,SAHwD;AAAA,MAGxDA,SAHwD,+BAG5C,KAH4C;AAAA,MAIrDC,KAJqD;;AAAA,SAMxD,yCAAUA,KAAV;AAAiB,IAAA,SAAS,EAAE,sBAAIC,kBAAOC,KAAX,EAAkBJ,SAAlB,EAA6BC,SAAS,IAAIE,kBAAOE,SAAP,CAAiBC,OAA3D;AAA5B,MACGP,QADH,CANwD;AAAA,CAAnD;;;;AAPLA,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport { css } from '@patternfly/react-styles';\n\nexport interface LabelProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Content rendered inside the label. */\n  children: React.ReactNode;\n  /** Additional classes added to the label. */\n  className?: string;\n  /** Flag to show if the label is compact. */\n  isCompact?: boolean;\n}\n\nexport const Label: React.FunctionComponent<LabelProps> = ({\n  children,\n  className = '',\n  isCompact = false,\n  ...props\n}) => (\n  <span {...props} className={css(styles.label, className, isCompact && styles.modifiers.compact)}>\n    {children}\n  </span>\n);\n"],"file":"Label.js"}