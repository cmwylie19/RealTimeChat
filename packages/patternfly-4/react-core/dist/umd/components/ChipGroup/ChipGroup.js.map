{"version":3,"sources":["../../../esm/components/ChipGroup/ChipGroup.js"],"names":["React","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ChipGroupContext","createContext","ChipGroup","Component","constructor","props","setState","prevState","isOpen","state","defaultIsOpen","renderToolbarGroup","headingLevel","createElement","Provider","InnerChipGroup","onToggleCollapse","toggleCollapse","renderChipGroup","className","styles","chipGroup","render","withToolbar","children","Children","count","_pt","node","string","bool","expandedText","collapsedText","oneOf","numChips","number","collapsedTextResult","remaining","mappedChildren","map","c","child","cloneElement","toArray","chip","component","Fragment","Chip","isOverflowChip","onClick","propTypes","isRequired","func"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ChipGroup/chip-group';\nimport { css } from '@patternfly/react-styles';\nimport { Chip } from './Chip';\nimport { fillTemplate } from '../../helpers';\nexport const ChipGroupContext = React.createContext('');\nexport class ChipGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleCollapse\", () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    });\n\n    this.state = {\n      isOpen: this.props.defaultIsOpen\n    };\n  }\n\n  renderToolbarGroup() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      headingLevel = 'h4'\n    } = this.props;\n    return React.createElement(ChipGroupContext.Provider, {\n      value: headingLevel\n    }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n      isOpen: isOpen,\n      onToggleCollapse: this.toggleCollapse\n    })));\n  }\n\n  renderChipGroup() {\n    const {\n      className\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return React.createElement(\"ul\", {\n      className: css(styles.chipGroup, className)\n    }, React.createElement(InnerChipGroup, _extends({}, this.props, {\n      isOpen: isOpen,\n      onToggleCollapse: this.toggleCollapse\n    })));\n  }\n\n  render() {\n    const {\n      withToolbar,\n      children\n    } = this.props;\n\n    if (React.Children.count(children)) {\n      return withToolbar ? this.renderToolbarGroup() : this.renderChipGroup();\n    }\n\n    return null;\n  }\n\n}\n\n_defineProperty(ChipGroup, \"propTypes\", {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number\n});\n\n_defineProperty(ChipGroup, \"defaultProps\", {\n  className: '',\n  expandedText: 'Show Less',\n  collapsedText: '${remaining} more',\n  withToolbar: false,\n  defaultIsOpen: false,\n  numChips: 3\n});\n\nconst InnerChipGroup = props => {\n  const {\n    children,\n    expandedText,\n    isOpen,\n    onToggleCollapse,\n    collapsedText,\n    withToolbar,\n    numChips\n  } = props;\n  const collapsedTextResult = fillTemplate(collapsedText, {\n    remaining: React.Children.count(children) - numChips\n  });\n  const mappedChildren = React.Children.map(children, c => {\n    const child = c;\n\n    if (withToolbar) {\n      return React.cloneElement(child, {\n        children: React.Children.toArray(child.props.children).map(chip => {\n          return React.cloneElement(chip, {\n            component: 'li'\n          });\n        })\n      });\n    }\n\n    return React.cloneElement(child, {\n      component: 'li'\n    });\n  });\n  return React.createElement(React.Fragment, null, isOpen ? React.createElement(React.Fragment, null, mappedChildren) : React.createElement(React.Fragment, null, mappedChildren.map((child, i) => {\n    if (i < numChips) {\n      return child;\n    }\n  })), React.Children.count(children) > numChips && React.createElement(Chip, {\n    isOverflowChip: true,\n    onClick: onToggleCollapse,\n    component: withToolbar ? 'div' : 'li'\n  }, isOpen ? expandedText : collapsedTextResult));\n};\n\nInnerChipGroup.propTypes = {\n  children: _pt.node,\n  className: _pt.string,\n  defaultIsOpen: _pt.bool,\n  expandedText: _pt.string,\n  collapsedText: _pt.string,\n  withToolbar: _pt.bool,\n  headingLevel: _pt.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  numChips: _pt.number,\n  isOpen: _pt.bool.isRequired,\n  onToggleCollapse: _pt.func.isRequired\n};\n//# sourceMappingURL=ChipGroup.js.map"],"file":"ChipGroup.js"}