{"version":3,"sources":["../../../../src/layouts/Toolbar/ToolbarSection.tsx"],"names":["React","css","ToolbarSection","children","className","ariaLabel","props","Error"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAO,0DAAP;AAWA,OAAO,MAAMC,cAA4D,GAAG,UAKjD;AAAA,MALkD;AAC3EC,IAAAA,QAAQ,GAAG,IADgE;AAE3EC,IAAAA,SAAS,GAAG,IAF+D;AAG3E,kBAAcC;AAH6D,GAKlD;AAAA,MADtBC,KACsB;;AACzB,MAAI,CAACD,SAAL,EAAgB;AACd,UAAM,IAAIE,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SACE,4CAAaD,KAAb;AAAoB,IAAA,SAAS,EAAEL,GAAG,CAAC,uBAAD,EAA0BG,SAA1B;AAAlC,MACGD,QADH,CADF;AAKD,CAfM;;AAPLA,EAAAA,Q;AAEAC,EAAAA,S;AAEA,c","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/layouts/Toolbar/toolbar.css';\n\nexport interface ToolbarSectionProps extends React.HTMLProps<HTMLDivElement> {\n  /** Anything that can be rendered as toolbar section */\n  children?: React.ReactNode;\n  /** Classes applied to toolbar section */\n  className?: string;\n  /** Aria label applied to toolbar section */\n  'aria-label'?: string;\n}\n\nexport const ToolbarSection: React.FunctionComponent<ToolbarSectionProps> = ({\n  children = null,\n  className = null,\n  'aria-label': ariaLabel,\n  ...props\n}: ToolbarSectionProps) => {\n  if (!ariaLabel) {\n    throw new Error('ToolbarSection requires aria-label to be specified');\n  }\n\n  return (\n    <section {...props} className={css('pf-l-toolbar__section', className)}>\n      {children}\n    </section>\n  );\n};\n"],"file":"ToolbarSection.js"}