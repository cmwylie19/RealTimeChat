{"version":3,"sources":["../../../../src/components/Wizard/Wizard.tsx"],"names":["React","ReactDOM","canUseDOM","KEY_CODES","css","styles","Backdrop","Bullseye","WizardHeader","WizardFooterInternal","WizardToggle","WizardNav","WizardNavItem","WizardContextProvider","FocusTrap","require","Wizard","Component","constructor","props","event","keyCode","ESCAPE_KEY","state","isNavOpen","setState","isOpen","onClose","hide","bodyChildren","document","body","children","child","Array","from","container","setAttribute","removeAttribute","onNext","onSave","currentStep","flattenedSteps","getFlattenedSteps","maxSteps","length","newStep","id","prevId","name","prevName","onBack","adjustedStep","step","onGoToStep","stepId","i","stepName","steps","childStep","push","j","Object","assign","canJumpTo","newId","currentId","isModal","isInPage","title","console","warn","titleId","descriptionId","startAtStep","Number","isInteger","componentDidMount","appendChild","toggleSiblingsFromScreenReaders","addEventListener","handleKeyClicks","componentWillUnmount","removeChild","removeEventListener","render","createElement","isFullHeight","isFullWidth","width","height","description","className","nextButtonText","backButtonText","cancelButtonText","ariaLabelCloseButton","ariaLabelNav","hasBodyPadding","footer","isCompactNav","rest","activeStep","computedSteps","initSteps","firstStep","isValid","enableNext","undefined","setFullWidth","setFullHeight","nav","isWizardNavOpen","map","index","isFinishedStep","enabled","navItemStep","hasActiveChild","canJumpToParent","subStep","getFlattenedStepsIndex","goToStep","indexChild","context","goToStepById","goToStepByName","wizard","modifiers","inPage","fullWidth","fullHeight","role","createPortal","clickOutsideDeactivates","component","hideCancelButton","hideBackButton"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from 'exenv';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { Backdrop } from '../Backdrop';\nimport { Bullseye } from '../../layouts/Bullseye';\nimport { WizardHeader } from './WizardHeader';\nimport { WizardFooterInternal } from './WizardFooterInternal';\nimport { WizardToggle } from './WizardToggle';\nimport { WizardNav } from './WizardNav';\nimport { WizardNavItem } from './WizardNavItem';\nimport { WizardContextProvider } from './WizardContext';\n// Can't use ES6 imports :(\n// The types for it are also wrong, we should probably ditch this dependency.\n// tslint:disable-next-line\nconst FocusTrap: any = require('focus-trap-react');\n\nexport interface WizardStep {\n  /** Optional identifier */\n  id?: string | number;\n  /** The name of the step */\n  name: string;\n  /** The component to render in the main body */\n  component?: any;\n  /** Setting to true hides the side nav and footer */\n  isFinishedStep?: boolean;\n  /** Enables or disables the step in the navigation. Enabled by default. */\n  canJumpTo?: boolean;\n  /** Sub steps */\n  steps?: WizardStep[];\n  /** (Unused if footer is controlled) Can change the Next button text. If nextButtonText is also set for the Wizard, this step specific one overrides it. */\n  nextButtonText?: string;\n  /** (Unused if footer is controlled) The condition needed to enable the Next button */\n  enableNext?: boolean;\n  /** (Unused if footer is controlled) True to hide the Cancel button */\n  hideCancelButton?: boolean;\n  /** (Unused if footer is controlled) True to hide the Back button */\n  hideBackButton?: boolean;\n}\n\nexport type WizardStepFunctionType = (newStep: { id?: string | number; name: string; }, prevStep: { prevId?: string | number; prevName: string; }) => void;\n\nexport interface WizardProps extends React.HTMLProps<HTMLDivElement> {\n  /** True to show the wizard (not applicable for isInPage)*/\n  isOpen?: boolean;\n  /** True to show the wizard without the modal */\n  isInPage?: boolean;\n  /** If true makes the navigation more compact */\n  isCompactNav?: boolean;\n  /** True to set full height wizard */\n  isFullHeight?: boolean;\n  /** True to set full width wizard */\n  isFullWidth?: boolean;\n  /** Custom width of the wizard */\n  width?: number | string;\n  /** Custom height of the wizard */\n  height?: number | string;\n  /** The wizard title (required unless isInPage is used) */\n  title?: string;\n  /** The wizard description */\n  description?: string;\n  /** Callback function to close the wizard */\n  onClose?: () => void;\n  /** Callback function when a step in the nav is clicked */\n  onGoToStep?: WizardStepFunctionType;\n  /** Additional classes spread to the Wizard */\n  className?: string;\n  /** The wizard steps configuration object */\n  steps: WizardStep[];\n  /** The current step the wizard is on (1 or higher) */\n  startAtStep?: number;\n  /** aria-label for the Nav */\n  ariaLabelNav?: string;\n  /** Can remove the default padding around the main body content by setting this to false */\n  hasBodyPadding?: boolean;\n  /** (Use to control the footer) Passing in a footer component lets you control the buttons yourself */\n  footer?: React.ReactNode;\n  /** (Unused if footer is controlled) Callback function to save at the end of the wizard, if not specified uses onClose */\n  onSave?: () => void;\n  /** (Unused if footer is controlled) Callback function after Next button is clicked */\n  onNext?: WizardStepFunctionType;\n  /** (Unused if footer is controlled) Callback function after Back button is clicked */\n  onBack?: WizardStepFunctionType;\n  /** (Unused if footer is controlled) The Next button text */\n  nextButtonText?: string;\n  /** (Unused if footer is controlled) The Back button text */\n  backButtonText?: string;\n  /** (Unused if footer is controlled) The Cancel button text */\n  cancelButtonText?: string;\n  /** (Unused if footer is controlled) aria-label for the close button */\n  ariaLabelCloseButton?: string;\n}\n\ninterface WizardState {\n  currentStep: number;\n  isNavOpen: boolean;\n}\n\nexport class Wizard extends React.Component<WizardProps, WizardState> {\n  private static currentId = 0;\n  static defaultProps = {\n    isOpen: false,\n    isInPage: false,\n    isCompactNav: false,\n    isFullHeight: false,\n    isFullWidth: false,\n    title: '',\n    description: '',\n    className: '',\n    startAtStep: 1,\n    nextButtonText: 'Next',\n    backButtonText: 'Back',\n    cancelButtonText: 'Cancel',\n    ariaLabelCloseButton: 'Close',\n    ariaLabelNav: 'Steps',\n    hasBodyPadding: true,\n    onBack: null as WizardStepFunctionType,\n    onNext: null as WizardStepFunctionType,\n    onGoToStep: null as WizardStepFunctionType,\n    width: null as string,\n    height: null as string,\n    footer: null as React.ReactNode,\n    onClose: () => undefined as any\n  };\n  private container: HTMLDivElement;\n  private titleId: string;\n  private descriptionId: string;\n  private isModal: boolean;\n\n  constructor(props: WizardProps) {\n    super(props);\n    const newId = Wizard.currentId++;\n    this.isModal = !props.isInPage;\n    if (this.isModal) {\n      if (!props.title) {\n        console.warn('Title is required for modals!');\n      }\n      this.titleId = `pf-wizard-title-${newId}`;\n      this.descriptionId = `pf-wizard-description-${newId}`;\n    }\n\n    this.state = {\n      currentStep: this.props.startAtStep && Number.isInteger(this.props.startAtStep) ? this.props.startAtStep : 1,\n      isNavOpen: false\n    };\n  }\n\n  private handleKeyClicks = (event: KeyboardEvent): void => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY) {\n      if (this.state.isNavOpen) {\n        this.setState({ isNavOpen: !this.state.isNavOpen });\n      } else if (this.props.isOpen) {\n        this.props.onClose();\n      }\n    }\n  }\n\n  private toggleSiblingsFromScreenReaders = (hide: boolean): void => {\n    const bodyChildren = document.body.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  }\n\n  private onNext = (): void => {\n    const { onNext, onClose, onSave } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const maxSteps = flattenedSteps.length;\n    if (currentStep >= maxSteps) {\n      // Hit the save button at the end of the wizard\n      if (onSave) {\n        return onSave();\n      }\n      return onClose();\n    } else {\n      const newStep = currentStep + 1;\n      this.setState({\n        currentStep: newStep\n      });\n      const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];\n      const { id, name } = flattenedSteps[newStep - 1];\n      return onNext && onNext({ id, name }, { prevId, prevName });\n    }\n  }\n\n  private onBack = (): void => {\n    const { onBack } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    if (flattenedSteps.length < currentStep) {\n      // Previous step was removed, just update the currentStep state\n      const adjustedStep = flattenedSteps.length;\n      this.setState({\n        currentStep: adjustedStep\n      });\n    } else {\n      const newStep = currentStep - 1 <= 0 ? 0 : currentStep - 1;\n      this.setState({\n        currentStep: newStep\n      });\n      const { id: prevId, name: prevName } = flattenedSteps[newStep];\n      const { id, name } = flattenedSteps[newStep - 1];\n      return onBack && onBack({ id, name }, { prevId, prevName });\n    }\n  }\n\n  private goToStep = (step: number): void => {\n    const { onGoToStep } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const maxSteps = flattenedSteps.length;\n    if (step < 1) {\n      step = 1;\n    } else if (step > maxSteps) {\n      step = maxSteps;\n    }\n    this.setState({ currentStep: step, isNavOpen: false });\n    const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];\n    const { id, name } = flattenedSteps[step - 1];\n    return onGoToStep && onGoToStep({ id, name }, { prevId, prevName });\n  }\n\n  private goToStepById = (stepId: number | string): void => {\n    const flattenedSteps = this.getFlattenedSteps();\n    let step;\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].id === stepId) {\n        step = i + 1;\n        break;\n      }\n    }\n    if (step) {\n      this.setState({ currentStep: step });\n    }\n  }\n\n  private goToStepByName = (stepName: string): void => {\n    const flattenedSteps = this.getFlattenedSteps();\n    let step;\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].name === stepName) {\n        step = i + 1;\n        break;\n      }\n    }\n    if (step) {\n      this.setState({ currentStep: step });\n    }\n  }\n\n  private getFlattenedSteps = (): WizardStep[] => {\n    const { steps } = this.props;\n    const flattenedSteps: WizardStep[] = [];\n    for (const step of steps) {\n      if (step.steps) {\n        for (const childStep of step.steps) {\n          flattenedSteps.push(childStep);\n        }\n      } else {\n        flattenedSteps.push(step);\n      }\n    }\n    return flattenedSteps;\n  }\n\n  private getFlattenedStepsIndex = (flattenedSteps: WizardStep[], stepName: string): number => {\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].name === stepName) {\n        return i + 1;\n      }\n    }\n\n    return 0;\n  }\n\n  private initSteps = (steps: WizardStep[]): WizardStep[] => {\n    // Set default Step values\n    for (let i = 0; i < steps.length; i++) {\n      if (steps[i].steps) {\n        for (let j = 0; j < steps[i].steps.length; j++) {\n          steps[i].steps[j] = Object.assign({ canJumpTo: true }, steps[i].steps[j]);\n        }\n      }\n      steps[i] = Object.assign({ canJumpTo: true }, steps[i]);\n    }\n    return steps;\n  }\n\n  componentDidMount() {\n    if (this.isModal) {\n      if (this.container) {\n        document.body.appendChild(this.container);\n      }\n      this.toggleSiblingsFromScreenReaders(true);\n      document.addEventListener('keydown', this.handleKeyClicks, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isModal) {\n      if (this.container) {\n        document.body.removeChild(this.container);\n      }\n      this.toggleSiblingsFromScreenReaders(false);\n      document.removeEventListener('keydown', this.handleKeyClicks, false);\n    }\n  }\n\n  render() {\n    if (this.isModal) {\n      if (!canUseDOM) {\n        return null;\n      }\n      if (!this.container) {\n        this.container = document.createElement('div');\n      }\n    }\n    const {\n      isOpen,\n      isInPage,\n      isFullHeight,\n      isFullWidth,\n      width,\n      height,\n      title,\n      description,\n      onClose,\n      onSave,\n      onBack,\n      onNext,\n      onGoToStep,\n      className,\n      steps,\n      startAtStep,\n      nextButtonText = 'Next',\n      backButtonText = 'Back',\n      cancelButtonText = 'Cancel',\n      ariaLabelCloseButton = 'Close',\n      ariaLabelNav,\n      hasBodyPadding,\n      footer,\n      isCompactNav,\n      ...rest\n    } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const adjustedStep = flattenedSteps.length < currentStep ? flattenedSteps.length : currentStep;\n    const activeStep = flattenedSteps[adjustedStep - 1];\n    const computedSteps: WizardStep[] = this.initSteps(steps);\n    const firstStep = activeStep === flattenedSteps[0];\n    const isValid = activeStep.enableNext !== undefined ? activeStep.enableNext : true;\n    const setFullWidth = isFullWidth || width;\n    const setFullHeight = isFullHeight || height;\n\n    const nav = (isWizardNavOpen: boolean) => (\n      <WizardNav isOpen={isWizardNavOpen} ariaLabel={ariaLabelNav}>\n        {computedSteps.map((step, index) => {\n          if (step.isFinishedStep) {\n            // Don't show finished step in the side nav\n            return;\n          }\n          let enabled;\n          let navItemStep;\n          if (step.steps) {\n            let hasActiveChild = false;\n            let canJumpToParent = false;\n            for (const subStep of step.steps) {\n              if (activeStep.name === subStep.name) {\n                // one of the children matches\n                hasActiveChild = true;\n              }\n              if (subStep.canJumpTo) {\n                canJumpToParent = true;\n              }\n            }\n            navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.steps[0].name);\n            return (\n              <WizardNavItem\n                key={index}\n                text={step.name}\n                isCurrent={hasActiveChild}\n                isDisabled={!canJumpToParent}\n                step={navItemStep}\n                onNavItemClick={this.goToStep}\n              >\n                <WizardNav returnList>\n                  {step.steps.map((childStep: WizardStep, indexChild: number) => {\n                    if (childStep.isFinishedStep) {\n                      // Don't show finished step in the side nav\n                      return;\n                    }\n                    navItemStep = this.getFlattenedStepsIndex(flattenedSteps, childStep.name);\n                    enabled = childStep.canJumpTo;\n                    return (\n                      <WizardNavItem\n                        key={`child_${indexChild}`}\n                        text={childStep.name}\n                        isCurrent={activeStep.name === childStep.name}\n                        isDisabled={!enabled}\n                        step={navItemStep}\n                        onNavItemClick={this.goToStep} />\n                    );\n                  })}\n                </WizardNav>\n              </WizardNavItem>\n            );\n          }\n          navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.name);\n          enabled = step.canJumpTo;\n          return (\n            <WizardNavItem\n              key={index}\n              text={step.name}\n              isCurrent={activeStep.name === step.name}\n              isDisabled={!enabled}\n              step={navItemStep}\n              onNavItemClick={this.goToStep} />\n          );\n        })}\n      </WizardNav>\n    );\n\n    const context = {\n      goToStepById: this.goToStepById,\n      goToStepByName: this.goToStepByName,\n      onNext: this.onNext,\n      onBack: this.onBack,\n      onClose,\n      activeStep\n    };\n\n    if (this.isModal && !isOpen) {\n      return null;\n    }\n\n    const wizard = (\n        <WizardContextProvider value={context}>\n          <div {...rest}\n               className={css(\n                 styles.wizard,\n                 !this.isModal && styles.modifiers.inPage,\n                 isCompactNav && 'pf-m-compact-nav',\n                 activeStep.isFinishedStep && 'pf-m-finished',\n                 setFullWidth && styles.modifiers.fullWidth,\n                 setFullHeight && styles.modifiers.fullHeight,\n                 className)}\n               {\n                 ...(this.isModal && {\n                   role: 'dialog',\n                   'aria-modal': 'true',\n                   'aria-labelledby': this.titleId,\n                   'aria-describedby': description ? this.descriptionId : undefined\n                 })\n               }\n          >\n            {\n              this.isModal && (\n                <WizardHeader\n                  titleId={this.titleId}\n                  descriptionId={this.descriptionId}\n                  onClose={onClose}\n                  title={title}\n                  description={description}\n                  ariaLabelCloseButton={ariaLabelCloseButton}\n                />\n              )\n            }\n            <WizardToggle\n              isNavOpen={this.state.isNavOpen}\n              onNavToggle={(isNavOpen) => this.setState({ isNavOpen })}\n              nav={nav}\n              steps={steps}\n              activeStep={activeStep}\n              hasBodyPadding={hasBodyPadding}\n            >\n              {footer || (\n                <WizardFooterInternal\n                  onNext={this.onNext}\n                  onBack={this.onBack}\n                  onClose={onClose}\n                  isValid={isValid}\n                  firstStep={firstStep}\n                  activeStep={activeStep}\n                  nextButtonText={activeStep.nextButtonText || nextButtonText}\n                  backButtonText={backButtonText}\n                  cancelButtonText={cancelButtonText}\n                />\n              )}\n            </WizardToggle>\n          </div>\n        </WizardContextProvider>\n    );\n\n    return this.isModal ? ReactDOM.createPortal(\n        <FocusTrap focusTrapOptions={{ clickOutsideDeactivates: true }}>\n          <Backdrop>\n            <Bullseye>\n              {wizard}\n            </Bullseye>\n          </Backdrop>\n        </FocusTrap>,\n        this.container\n      ) : wizard;\n  }\n}\n"],"file":"Wizard.js"}