{"version":3,"sources":["../../../../src/components/ClipboardCopy/ClipboardCopyExpanded.tsx"],"names":["ClipboardCopyExpanded","props","React","createRef","contentRef","current","innerText","children","className","onChange","isReadOnly","isCode","clipboardCopyExpandableComponent","styles","clipboardCopyExpandableContent","e","target","Component","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,qB;;;;;AAEX,iCAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,+FAAMA,KAAN;;AADsB,iEADXC,KAAK,CAACC,SAAN,EACW;;AAAA;AAEvB;;;;wCASmB;AAClB,UAAI,KAAKC,UAAL,CAAgBC,OAApB,EAA6B;AAC3B,aAAKD,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoC,KAAKL,KAAL,CAAWM,QAA/C;AACD;AACF;;;6BAEQ;AAAA,wBACiE,KAAKN,KADtE;AAAA,UACCO,SADD,eACCA,SADD;AAAA,UACYD,QADZ,eACYA,QADZ;AAAA,UACsBE,QADtB,eACsBA,QADtB;AAAA,UACgCC,UADhC,eACgCA,UADhC;AAAA,UAC4CC,MAD5C,eAC4CA,MAD5C;AAAA,UACuDV,KADvD;;AAEP,UAAMW,gCAAgC,GACtC;AACE,QAAA,8BAA8B,MADhC;AAEE,QAAA,GAAG,EAAE,KAAKR,UAFZ;AAGE,QAAA,SAAS,EAAE,sBAAIS,0BAAOC,8BAAX,EAA2CN,SAA3C,CAHb;AAIE,QAAA,OAAO,EAAE,iBAACO,CAAD;AAAA,iBAAYN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASV,SAAV,EAAqBS,CAArB,CAApB;AAAA,SAJX;AAKE,QAAA,eAAe,EAAE,CAACL;AALpB,SAMMT,KANN,EADA;AAUA,aAAQU,MAAM,GAAG,iCAAMC,gCAAN,CAAH,GAAmDA,gCAAjE;AACD;;;;EAhCwCV,KAAK,CAACe,S;;;;gBAApCjB,qB;AAPXQ,EAAAA,S;AACAD,EAAAA,Q;AACAE,EAAAA,Q;AACAC,EAAAA,U;AACAC,EAAAA,M;;;gBAGWX,qB,kBAMW;AACpBS,EAAAA,QAAQ,EAAE;AAAA,WAAWS,SAAX;AAAA,GADU;AAEpBV,EAAAA,SAAS,EAAE,EAFS;AAGpBE,EAAAA,UAAU,EAAE,KAHQ;AAIpBC,EAAAA,MAAM,EAAE;AAJY,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { ClipboardCopyProps } from './ClipboardCopy';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface ClipboardCopyExpandedProps extends Omit<ClipboardCopyProps, 'onChange'> {\n  className?: string;\n  children: React.ReactNode;\n  onChange?: (text: string, e: React.FormEvent<HTMLDivElement>) => void;\n  isReadOnly: boolean;\n  isCode?: boolean;\n}\n\nexport class ClipboardCopyExpanded extends React.Component<ClipboardCopyExpandedProps> {\n  contentRef = React.createRef<HTMLDivElement>();\n  constructor(props: any) {\n    super(props);\n  }\n\n  static defaultProps = {\n    onChange: (): any => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n  };\n\n  componentDidMount() {\n    if (this.contentRef.current) {\n      this.contentRef.current.innerText = this.props.children as string;\n    }\n  }\n\n  render() {\n    const { className, children, onChange, isReadOnly, isCode, ...props } = this.props;\n    const clipboardCopyExpandableComponent =\n    <div\n      suppressContentEditableWarning\n      ref={this.contentRef}\n      className={css(styles.clipboardCopyExpandableContent, className)}\n      onInput={(e: any) => onChange(e.target.innerText, e)}\n      contentEditable={!isReadOnly}\n      {...props}\n    />;\n\n    return (isCode ? <pre>{clipboardCopyExpandableComponent}</pre> : clipboardCopyExpandableComponent);\n  }\n}\n"],"file":"ClipboardCopyExpanded.js"}