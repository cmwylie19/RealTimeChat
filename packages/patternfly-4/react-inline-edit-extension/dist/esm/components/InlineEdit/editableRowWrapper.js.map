{"version":3,"sources":["../../../../src/components/InlineEdit/editableRowWrapper.js"],"names":["React","createPortal","PropTypes","classNames","css","combineFunctions","shallowLeftSideEquals","getBoundingClientRect","getClientWindowDimensions","ConfirmButtons","TableEditConfirmation","inlineEditStyles","styles","propTypes","trRef","func","className","string","onScroll","onResize","row","shape","isOpen","bool","isExpanded","isEditing","isTableEditing","isFirstVisible","isLastVisible","isChildEditing","isParentEditing","isLastVisibleParent","editConfig","object","rowProps","defaultProps","undefined","tableConfirmationMapper","TABLE_TOP","hasConfirmationButtons","isTableConfirmation","areButtonsOnTop","hasBoldBorder","getEditStyles","tableEditableRow","modifiers","tableEditingFirstRow","TABLE_BOTTOM","tableEditingLastRow","ROW","editing","NO_CONFIRM_ROW","NONE","getTableConfirmation","editConfirmationType","editableRowWrapper","RowWrapperComponent","RowWrapper","Component","constructor","props","newState","setState","oldState","Object","keys","find","key","element","tableElem","closest","updateRowDimensions","setStateWith2dEquals","rowDimensions","event","fetchClientDimensions","state","window","getDerivedStateFromProps","componentDidMount","getConfirmationButtons","onEditConfirmed","onEditCanceled","tableConfirmation","confirmButtons","options","actionObject","parentNode","document","body","render","trClassName","saveRowDimensions","handleScroll","handleResize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { css } from '@patternfly/react-styles';\nimport {\n  combineFunctions,\n  shallowLeftSideEquals,\n  getBoundingClientRect,\n  getClientWindowDimensions\n} from './utils/utils';\nimport ConfirmButtons from './ConfirmButtons';\nimport { TableEditConfirmation } from './constants';\nimport '@patternfly/react-styles/css/components/Table/inline-edit.css';\nimport { inlineEditStyles as styles } from './css/inline-edit-css';\n\nconst propTypes = {\n  trRef: PropTypes.func,\n  className: PropTypes.string,\n  onScroll: PropTypes.func,\n  onResize: PropTypes.func,\n  row: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isTableEditing: PropTypes.bool,\n    isFirstVisible: PropTypes.bool,\n    isLastVisible: PropTypes.bool,\n    isChildEditing: PropTypes.bool,\n    isParentEditing: PropTypes.bool,\n    isLastVisibleParent: PropTypes.bool,\n    editConfig: PropTypes.object\n  }),\n  rowProps: PropTypes.object\n};\n\nconst defaultProps = {\n  trRef: undefined,\n  className: '',\n  onScroll: undefined,\n  onResize: undefined,\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isEditing: undefined,\n    isTableEditing: undefined,\n    isFirstVisible: undefined,\n    isLastVisible: undefined,\n    isChildEditing: undefined,\n    isParentEditing: undefined,\n    isLastVisibleParent: undefined,\n    editConfig: undefined\n  },\n  rowProps: null\n};\n\n// TableEditConfirmation constants like TABLE_TOP cannot be referenced but must be hardcoded due to this issue:\n// https://github.com/reactjs/react-docgen/issues/317#issue-393678795\nconst tableConfirmationMapper = {\n  TABLE_TOP: {\n    hasConfirmationButtons: ({ isTableEditing, isFirstVisible }) => isTableEditing && isFirstVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => true,\n    hasBoldBorder: () => true,\n    getEditStyles: ({ isTableEditing, isFirstVisible }) =>\n      css(styles.tableEditableRow, isTableEditing && isFirstVisible && styles.modifiers.tableEditingFirstRow)\n  },\n  TABLE_BOTTOM: {\n    hasConfirmationButtons: ({ isTableEditing, isLastVisible }) => isTableEditing && isLastVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => true,\n    getEditStyles: ({ isTableEditing, isLastVisible }) =>\n      css(styles.tableEditableRow, isTableEditing && isLastVisible && styles.modifiers.tableEditingLastRow)\n  },\n  ROW: {\n    hasConfirmationButtons: ({ isEditing, isParentEditing, isLastVisibleParent, isChildEditing, isLastVisible }) =>\n      isEditing &&\n      !(isChildEditing && isParentEditing) && // buttons can't appear in the middle\n      !(isParentEditing && isLastVisible) && // parent will show the buttons on top\n      !(isChildEditing && !isLastVisibleParent), // child will show the buttons on bottom\n    isTableConfirmation: () => false,\n    areButtonsOnTop: ({ isLastVisible, isLastVisibleParent }) => isLastVisible || isLastVisibleParent,\n    hasBoldBorder: () => false,\n    getEditStyles: ({ isEditing }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NO_CONFIRM_ROW: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: ({ isEditing }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NONE: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: () => css(styles.tableEditableRow)\n  }\n};\n\nconst getTableConfirmation = ({ editConfig }) =>\n  tableConfirmationMapper[editConfig && editConfig.editConfirmationType] ||\n  tableConfirmationMapper[TableEditConfirmation.NONE];\n\nconst editableRowWrapper = RowWrapperComponent => {\n  class RowWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        rowDimensions: {},\n        window: {},\n        ...RowWrapper.getDerivedStateFromProps(props)\n      };\n    }\n\n    static getDerivedStateFromProps = (props, state) => ({\n      hasConfirmationButtons: getTableConfirmation(props.row).hasConfirmationButtons(props.row)\n    })\n\n    setStateWith2dEquals = newState => {\n      this.setState(oldState =>\n        Object.keys(newState).find(key => !shallowLeftSideEquals(newState[key], oldState[key])) ? newState : null\n      );\n    }\n\n    componentDidMount() {\n      if (this.state.hasConfirmationButtons) {\n        this.fetchClientDimensions();\n      }\n    }\n\n    saveRowDimensions = element => {\n      if (element) {\n        this.element = element;\n        this.tableElem = element.closest('table');\n      }\n      this.updateRowDimensions();\n    }\n\n    updateRowDimensions = () => {\n      if (this.element) {\n        this.setStateWith2dEquals({\n          rowDimensions: getBoundingClientRect(this.element)\n        });\n      }\n    }\n\n    handleScroll = event => {\n      this.updateRowDimensions();\n    }\n\n    handleResize = event => {\n      this.fetchClientDimensions();\n      this.updateRowDimensions();\n    }\n\n    fetchClientDimensions() {\n      this.setStateWith2dEquals({\n        window: getClientWindowDimensions()\n      });\n    }\n\n    getConfirmationButtons() {\n      const { row, rowProps, ...props } = this.props;\n      const { isLastVisible, isParentEditing, isLastVisibleParent, editConfig } = row;\n\n      if (!editConfig) {\n        return null;\n      }\n      const { onEditConfirmed, onEditCanceled } = editConfig;\n      const tableConfirmation = getTableConfirmation(row);\n\n      let confirmButtons;\n      if (this.element && this.state.rowDimensions) {\n        const options = tableConfirmation.isTableConfirmation() ? {} : rowProps;\n        const actionObject = tableConfirmation.isTableConfirmation() ? null : row;\n        confirmButtons = createPortal(\n          <ConfirmButtons\n            {...props}\n            onConfirm={event => onEditConfirmed(event, actionObject, options)}\n            onCancel={event => onEditCanceled(event, actionObject, options)}\n            buttonsOnTop={tableConfirmation.areButtonsOnTop({ isLastVisible, isParentEditing, isLastVisibleParent })}\n            boldBorder={tableConfirmation.hasBoldBorder()}\n            environment={{\n              window: this.state.window,\n              row: getBoundingClientRect(this.element)\n            }}\n          />,\n          this.tableElem ? this.tableElem.parentNode : document.body\n        );\n      }\n      return confirmButtons;\n    }\n\n    render() {\n      const {\n        trRef,\n        className,\n        onScroll,\n        onResize,\n        row: { isFirstVisible, isLastVisible, isEditing, isTableEditing, editConfig }\n      } = this.props;\n      const { hasConfirmationButtons } = this.state;\n      const trClassName = getTableConfirmation({ editConfig }).getEditStyles({\n        isEditing,\n        isTableEditing,\n        isFirstVisible,\n        isLastVisible\n      });\n\n      return (\n        <React.Fragment>\n          <RowWrapperComponent\n            {...this.props}\n            trRef={combineFunctions(this.saveRowDimensions, trRef)}\n            className={classNames(trClassName, className)}\n            onScroll={combineFunctions(hasConfirmationButtons && this.handleScroll, onScroll)}\n            onResize={combineFunctions(hasConfirmationButtons && this.handleResize, onResize)}\n          />\n          {hasConfirmationButtons && this.getConfirmationButtons()}\n        </React.Fragment>\n      );\n    }\n  }\n\n  RowWrapper.propTypes = propTypes;\n  RowWrapper.defaultProps = defaultProps;\n\n  return RowWrapper;\n};\n\nexport default editableRowWrapper;\n"],"file":"editableRowWrapper.js"}