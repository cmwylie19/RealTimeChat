{"version":3,"sources":["../../../../src/components/TopologyControlBar/TopologyControlBar.tsx"],"names":["ZOOM_IN","ZOOM_OUT","FIT_TO_SCREEN","RESET_VIEW","LEGEND","defaultControlButtonsOptions","zoomIn","zoomInIcon","zoomInTip","zoomInAriaLabel","zoomInCallback","zoomInDisabled","zoomInHidden","zoomOut","zoomOutIcon","zoomOutTip","zoomOutAriaLabel","zoomOutCallback","zoomOutDisabled","zoomOutHidden","fitToScreen","fitToScreenIcon","fitToScreenTip","fitToScreenAriaLabel","fitToScreenCallback","fitToScreenDisabled","fitToScreenHidden","resetView","resetViewIcon","resetViewTip","resetViewAriaLabel","resetViewCallback","resetViewDisabled","resetViewHidden","legend","legendIcon","legendTip","legendAriaLabel","legendCallback","legendDisabled","legendHidden","customButtons","createTopologyControlButtons","controlButtons","push","id","icon","tooltip","ariaLabel","callback","disabled","hidden","TopologyControlBar","className","children","onButtonClick","undefined","props","handleButtonClick","event","button","preventDefault","renderButton","renderedButton","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, Toolbar, ToolbarGroup, ToolbarItem, Tooltip } from '@patternfly/react-core';\nimport { ExpandIcon, ExpandArrowsAltIcon, SearchPlusIcon, SearchMinusIcon } from '@patternfly/react-icons';\nimport '@patternfly/react-styles/css/components/Topology/topology-controlbar.css';\n\n/* ID's for common control buttons */\nexport const ZOOM_IN = 'zoom-in';\nexport const ZOOM_OUT = 'zoom-out';\nexport const FIT_TO_SCREEN = 'fit-to-screen';\nexport const RESET_VIEW = 'reset-view';\nexport const LEGEND = 'legend';\n\n/* Data needed for each control button */\nexport interface TopologyControlButton {\n  id: any;\n  icon: React.ReactNode;\n  tooltip?: React.ReactNode;\n  ariaLabel?: string;\n  callback?: (id: any) => void;\n  disabled?: boolean;\n  hidden?: boolean;\n}\n\n/* Options for creating the control buttons */\nexport interface TopologyControlButtonsOptions {\n  zoomIn: boolean;\n  zoomInIcon: React.ReactNode;\n  zoomInTip: React.ReactNode;\n  zoomInAriaLabel: string;\n  zoomInCallback: (id: any) => void;\n  zoomInDisabled: boolean;\n  zoomInHidden: boolean;\n\n  zoomOut: boolean;\n  zoomOutIcon: React.ReactNode;\n  zoomOutTip: React.ReactNode;\n  zoomOutAriaLabel: string;\n  zoomOutCallback: (id: any) => void;\n  zoomOutDisabled: boolean;\n  zoomOutHidden: boolean;\n\n  fitToScreen: boolean;\n  fitToScreenIcon: React.ReactNode;\n  fitToScreenTip: React.ReactNode;\n  fitToScreenAriaLabel: string;\n  fitToScreenCallback: (id: any) => void;\n  fitToScreenDisabled: boolean;\n  fitToScreenHidden: boolean;\n\n  resetView: boolean;\n  resetViewIcon: React.ReactNode;\n  resetViewTip: React.ReactNode;\n  resetViewAriaLabel: string;\n  resetViewCallback: (id: any) => void;\n  resetViewDisabled: boolean;\n  resetViewHidden: boolean;\n\n  legend: boolean;\n  legendIcon: React.ReactNode;\n  legendTip: string;\n  legendAriaLabel: string;\n  legendCallback: (id: any) => void;\n  legendDisabled: boolean;\n  legendHidden: boolean;\n\n  customButtons: TopologyControlButton[];\n}\n\n/* Default options for creating control buttons */\nexport const defaultControlButtonsOptions: TopologyControlButtonsOptions = {\n  zoomIn: true,\n  zoomInIcon: <SearchPlusIcon />,\n  zoomInTip: 'Zoom In',\n  zoomInAriaLabel: 'Zoom In',\n  zoomInCallback: null,\n  zoomInDisabled: false,\n  zoomInHidden: false,\n\n  zoomOut: true,\n  zoomOutIcon: <SearchMinusIcon />,\n  zoomOutTip: 'Zoom Out',\n  zoomOutAriaLabel: 'Zoom Out',\n  zoomOutCallback: null,\n  zoomOutDisabled: false,\n  zoomOutHidden: false,\n\n  fitToScreen: true,\n  fitToScreenIcon: <ExpandArrowsAltIcon />,\n  fitToScreenTip: 'Fit to Screen',\n  fitToScreenAriaLabel: 'Fit to Screen',\n  fitToScreenCallback: null,\n  fitToScreenDisabled: false,\n  fitToScreenHidden: false,\n\n  resetView: true,\n  resetViewIcon: <ExpandIcon />,\n  resetViewTip: 'Reset View',\n  resetViewAriaLabel: 'Reset View',\n  resetViewCallback: null,\n  resetViewDisabled: false,\n  resetViewHidden: false,\n\n  legend: true,\n  legendIcon: 'Legend',\n  legendTip: '',\n  legendAriaLabel: null,\n  legendCallback: null,\n  legendDisabled: false,\n  legendHidden: false,\n\n  customButtons: []\n};\n\n/* Utility function to create the common control buttons, can pass null for all defaults, or specify overrides */\nexport const createTopologyControlButtons = ({\n  zoomIn = defaultControlButtonsOptions.zoomIn,\n  zoomInIcon= defaultControlButtonsOptions.zoomInIcon,\n  zoomInTip= defaultControlButtonsOptions.zoomInTip,\n  zoomInAriaLabel= defaultControlButtonsOptions.zoomInAriaLabel,\n  zoomInCallback= defaultControlButtonsOptions.zoomInCallback,\n  zoomInDisabled= defaultControlButtonsOptions.zoomInDisabled,\n  zoomInHidden= defaultControlButtonsOptions.zoomInHidden,\n\n  zoomOut = defaultControlButtonsOptions.zoomOut,\n  zoomOutIcon = defaultControlButtonsOptions.zoomOutIcon,\n  zoomOutTip = defaultControlButtonsOptions.zoomOutTip,\n  zoomOutAriaLabel = defaultControlButtonsOptions.zoomOutAriaLabel,\n  zoomOutCallback = defaultControlButtonsOptions.zoomOutCallback,\n  zoomOutDisabled = defaultControlButtonsOptions.zoomOutDisabled,\n  zoomOutHidden = defaultControlButtonsOptions.zoomOutHidden,\n\n  fitToScreen = defaultControlButtonsOptions.fitToScreen,\n  fitToScreenIcon = defaultControlButtonsOptions.fitToScreenIcon,\n  fitToScreenTip = defaultControlButtonsOptions.fitToScreenTip,\n  fitToScreenAriaLabel = defaultControlButtonsOptions.fitToScreenAriaLabel,\n  fitToScreenCallback = defaultControlButtonsOptions.fitToScreenCallback,\n  fitToScreenDisabled = defaultControlButtonsOptions.fitToScreenDisabled,\n  fitToScreenHidden = defaultControlButtonsOptions.fitToScreenHidden,\n\n  resetView = defaultControlButtonsOptions.resetView,\n  resetViewIcon = defaultControlButtonsOptions.resetViewIcon,\n  resetViewTip = defaultControlButtonsOptions.resetViewTip,\n  resetViewAriaLabel = defaultControlButtonsOptions.resetViewAriaLabel,\n  resetViewCallback = defaultControlButtonsOptions.resetViewCallback,\n  resetViewDisabled = defaultControlButtonsOptions.resetViewDisabled,\n  resetViewHidden = defaultControlButtonsOptions.resetViewHidden,\n\n  legend = defaultControlButtonsOptions.legend,\n  legendIcon = defaultControlButtonsOptions.legendIcon,\n  legendTip = defaultControlButtonsOptions.legendTip,\n  legendAriaLabel = defaultControlButtonsOptions.legendAriaLabel,\n  legendCallback = defaultControlButtonsOptions.legendCallback,\n  legendDisabled = defaultControlButtonsOptions.legendDisabled,\n  legendHidden = defaultControlButtonsOptions.legendHidden,\n\n  customButtons = defaultControlButtonsOptions.customButtons,\n}: TopologyControlButtonsOptions  = defaultControlButtonsOptions): TopologyControlButton[] => {\n  const controlButtons: TopologyControlButton[] = [];\n\n  if (zoomIn) {\n    controlButtons.push({\n      id: ZOOM_IN,\n      icon: zoomInIcon,\n      tooltip: zoomInTip,\n      ariaLabel: zoomInAriaLabel,\n      callback: zoomInCallback,\n      disabled: zoomInDisabled,\n      hidden: zoomInHidden\n    });\n  }\n\n  if (zoomOut) {\n    controlButtons.push({\n      id: ZOOM_OUT,\n      icon: zoomOutIcon,\n      tooltip: zoomOutTip,\n      ariaLabel: zoomOutAriaLabel,\n      callback: zoomOutCallback,\n      disabled: zoomOutDisabled,\n      hidden: zoomOutHidden\n    });\n  }\n\n  if (fitToScreen) {\n    controlButtons.push({\n      id: FIT_TO_SCREEN,\n      icon: fitToScreenIcon,\n      tooltip: fitToScreenTip,\n      ariaLabel: fitToScreenAriaLabel,\n      callback: fitToScreenCallback,\n      disabled: fitToScreenDisabled,\n      hidden: fitToScreenHidden\n    });\n  }\n\n  if (resetView) {\n    controlButtons.push({\n      id: RESET_VIEW,\n      icon: resetViewIcon,\n      tooltip: resetViewTip,\n      ariaLabel: resetViewAriaLabel,\n      callback: resetViewCallback,\n      disabled: resetViewDisabled,\n      hidden: resetViewHidden\n    });\n  }\n\n  if (customButtons) {\n    controlButtons.push(...customButtons);\n  }\n\n  if (legend) {\n    controlButtons.push({\n      id: LEGEND,\n      icon: legendIcon,\n      tooltip: legendTip,\n      ariaLabel: legendAriaLabel,\n      callback: legendCallback,\n      disabled: legendDisabled,\n      hidden: legendHidden\n    });\n  }\n\n  return controlButtons;\n};\n\nexport interface TopologyControlBarProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the control bar */\n  className?: string;\n  /** Any extra child nodes (placed after the buttons) */\n  children?: React.ReactNode;\n  /** Buttons to be added to the bar */\n  controlButtons?: TopologyControlButton[];\n  /** Callback when any button is clicked, id of the clicked button is passed */\n  onButtonClick?: (id: any) => void;\n}\n\nexport const TopologyControlBar: React.FunctionComponent<TopologyControlBarProps> = ({\n  className = null,\n  children = null,\n  controlButtons = [],\n  onButtonClick = () => undefined,\n  ...props\n}: TopologyControlBarProps) => {\n\n  const handleButtonClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, button: TopologyControlButton) => {\n    event.preventDefault();\n    onButtonClick(button.id);\n    if (button.callback) {\n      button.callback(button.id);\n    }\n  };\n\n  const renderButton = (button: TopologyControlButton): React.ReactNode => {\n    const renderedButton = (\n      <Button\n        id={button.id}\n        className={`pf-topology-control-bar__button${button.disabled ? ' pf-m-disabled' : ''}`}\n        onClick={(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => handleButtonClick(event, button)}\n        disabled={button.disabled}\n        aria-disabled={button.disabled}\n        variant=\"tertiary\"\n      >\n        {button.icon}\n        {(button.ariaLabel || button.tooltip) && (\n          <span className=\"sr-only\">{button.ariaLabel || button.tooltip}</span>\n        )}\n      </Button>\n    );\n\n    if (button.tooltip) {\n      return (\n        <Tooltip content={button.tooltip}>{renderedButton}</Tooltip>\n      );\n    }\n\n    return renderedButton;\n  };\n\n  return (\n    <Toolbar className={className} {...props}>\n      <ToolbarGroup>\n        {controlButtons.map((button: TopologyControlButton) => {\n          return button.hidden ? null : <ToolbarItem key={button.id}>{renderButton(button)}</ToolbarItem>;\n        })}\n        {children}\n      </ToolbarGroup>\n    </Toolbar>\n  );\n};\n"],"file":"TopologyControlBar.js"}