{"version":3,"sources":["../../../../src/components/Dropdown/InternalDropdownItem.tsx"],"names":["InternalDropdownItem","React","createRef","event","keyCode","KEY_CODES","TAB","preventDefault","ARROW_UP","props","context","keyHandler","index","KEYHANDLER_DIRECTION","UP","ARROW_DOWN","DOWN","ENTER","childNode","ref","current","childNodes","length","click","isDisabled","role","sendRef","className","children","isHovered","onClick","component","href","tooltip","tooltipProps","additionalProps","Component","isComponentReactElement","classes","tabIndex","disabled","type","isValidElement","renderWithTooltip","onSelect","itemClass","disabledClass","hoverClass","onKeyDown","cloneElement","undefined","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEY_CODES, KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { Tooltip } from '../Tooltip';\n\nexport interface InternalDropdownItemProps extends React.HTMLProps<HTMLAnchorElement> {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Indicates which component will be used as dropdown item */\n  component?: React.ReactNode | string;\n  /** Role for the item */\n  role?: string;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  index?: number;\n  context?: {\n    keyHandler?: (index: number, direction: string) => void,\n    sendRef?: (index: number, ref: any, isDisabled: boolean, isSeparator: boolean) => void\n  };\n  /** Callback for click event */\n  onClick?: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => void;\n}\n\nexport class InternalDropdownItem extends React.Component<InternalDropdownItemProps> {\n  ref = React.createRef<HTMLLIElement>();\n\n  static defaultProps = {\n    className: '',\n    isHovered: false,\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    href: '',\n    tooltipProps: {},\n    onClick: (event: React.MouseEvent<HTMLAnchorElement>) => undefined as any,\n    onSelect: () => undefined as any,\n    index: -1,\n    context: {\n      keyHandler: Function.prototype,\n      sendRef: Function.prototype\n    },\n  };\n\n  componentDidMount() {\n    const { context, index, isDisabled, role } = this.props;\n    context.sendRef(index, this.ref.current, isDisabled, role === 'separator');\n  }\n\n  onKeyDown = (event: any) => {\n    // Detected key press on this item, notify the menu parent so that the appropriate\n    // item can be focused\n    if (event.keyCode === KEY_CODES.TAB) { return; }\n    event.preventDefault();\n    if (event.keyCode === KEY_CODES.ARROW_UP) {\n      this.props.context.keyHandler(this.props.index, KEYHANDLER_DIRECTION.UP);\n    } else if (event.keyCode === KEY_CODES.ARROW_DOWN) {\n      this.props.context.keyHandler(this.props.index, KEYHANDLER_DIRECTION.DOWN);\n    } else if (event.keyCode === KEY_CODES.ENTER) {\n      const childNode = ((this.ref.current && this.ref.current.childNodes && this.ref.current.childNodes.length) ? this.ref.current.childNodes[0] : this.ref.current) as HTMLElement;\n      if (childNode.click) {\n        childNode.click();\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      isHovered,\n      context,\n      onClick,\n      component,\n      role,\n      isDisabled,\n      index,\n      href,\n      tooltip,\n      tooltipProps,\n      ...additionalProps\n    } = this.props;\n    const Component = component as any;\n    let isComponentReactElement = false;\n    let classes: string;\n    if (Component === 'a') {\n      additionalProps['aria-disabled'] = isDisabled;\n      additionalProps.tabIndex = isDisabled ? -1 : additionalProps.tabIndex;\n    } else if (Component === 'button') {\n      additionalProps.disabled = isDisabled;\n      additionalProps.type = additionalProps.type || 'button';\n    } else if (React.isValidElement(Component)) {\n      // Render a custom wrapper component, for example router Link component\n      // instead of our wrapper\n      isComponentReactElement = true;\n    }\n\n    const renderWithTooltip = (childNode: React.ReactNode) =>\n      tooltip ? (\n        <Tooltip content={tooltip} {...tooltipProps}>\n          {childNode}\n        </Tooltip>\n      ) : (\n        childNode\n      );\n\n    return (\n      <DropdownContext.Consumer>\n        {({ onSelect, itemClass, disabledClass, hoverClass }) => {\n          if (this.props.role === 'separator') {\n            classes = className;\n          } else {\n            classes = css(isDisabled && disabledClass, isHovered && hoverClass, className);\n          }\n          return (\n            <li \n              role={role} \n              ref={this.ref} \n              onKeyDown={this.onKeyDown}\n              onClick={(event: any) => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event);\n                }\n              }}\n            >\n              {renderWithTooltip(\n                isComponentReactElement ? React.cloneElement(Component as React.ReactHTMLElement<any>, {\n                  ...additionalProps,\n                  className: css(classes, itemClass)\n                }) :\n                <Component\n                  {...additionalProps}\n                  href={href || null}\n                  className={css(classes, this.props.role !== 'separator' && itemClass)}\n                >\n                  {children}\n                </Component>\n              )}\n            </li>\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"],"file":"InternalDropdownItem.js"}