{"version":3,"sources":["../../../esm/components/LoginPage/LoginFooterItem.test.js"],"names":["React","test","view","createElement","LoginFooterItem","target","href","expect","toMatchSnapshot","className","prop","testId","toBe","CustomNode"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGZC,EAAAA,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,gCAApB,EAAqC;AACxDC,MAAAA,MAAM,EAAE,OADgD;AAExDC,MAAAA,IAAI,EAAE;AAFkD,KAArC,CAAR,CAAb;AAIAC,IAAAA,MAAM,CAACL,IAAD,CAAN,CAAaM,eAAb;AACD,GANG,CAAJ;AAOAP,EAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,gCAApB,EAAqC;AACxDK,MAAAA,SAAS,EAAE;AAD6C,KAArC,CAAR,CAAb;AAGAF,IAAAA,MAAM,CAACL,IAAI,CAACQ,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BF,eAA/B;AACD,GALG,CAAJ;AAMAP,EAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,UAAMU,MAAM,GAAG,YAAf;AACA,UAAMT,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,gCAApB,EAAqC;AACxD,qBAAeO;AADyC,KAArC,CAAR,CAAb;AAGAJ,IAAAA,MAAM,CAACL,IAAI,CAACQ,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,GANG,CAAJ;AAOAV,EAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,UAAMY,UAAU,GAAG,MAAMb,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,gBAAjC,CAAzB;;AAEA,UAAMD,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,gCAApB,EAAqC,IAArC,EAA2CJ,KAAK,CAACG,aAAN,CAAoBU,UAApB,EAAgC,IAAhC,CAA3C,CAAR,CAAb;AACAN,IAAAA,MAAM,CAACL,IAAD,CAAN,CAAaM,eAAb;AACD,GALG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\nimport { LoginFooterItem } from './LoginFooterItem';\ntest('renders with PatternFly Core styles', () => {\n  const view = shallow(React.createElement(LoginFooterItem, {\n    target: \"_self\",\n    href: \"#\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('className is added to the root element', () => {\n  const view = shallow(React.createElement(LoginFooterItem, {\n    className: \"extra-class\"\n  }));\n  expect(view.prop('className')).toMatchSnapshot();\n});\ntest('extra props are spread to the root element', () => {\n  const testId = 'login-body';\n  const view = shallow(React.createElement(LoginFooterItem, {\n    \"data-testid\": testId\n  }));\n  expect(view.prop('data-testid')).toBe(testId);\n});\ntest('LoginFooterItem  with custom node', () => {\n  const CustomNode = () => React.createElement(\"div\", null, \"My custom node\");\n\n  const view = shallow(React.createElement(LoginFooterItem, null, React.createElement(CustomNode, null)));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=LoginFooterItem.test.js.map"],"file":"LoginFooterItem.test.js"}