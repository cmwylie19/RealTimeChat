{"version":3,"sources":["../../../../../src/components/Wizard/examples/FinishedStep.js"],"names":["propTypes","onClose","PropTypes","func","isRequired","FinishedStep","props","state","percent","setState","prevState","interval","setInterval","tick","clearInterval","width","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEC,sBAAUC,IAAV,CAAeC;AADR,CAAlB;;IAIMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFiB;AAGlB;;;;2BAEM;AACL,UAAI,KAAKD,KAAL,CAAWC,OAAX,GAAqB,GAAzB,EAA8B;AAC5B,aAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,iBAAK;AAC1BF,YAAAA,OAAO,EAAEE,SAAS,CAACF,OAAV,GAAoB;AADH,WAAL;AAAA,SAAvB;AAGD;AACF;;;wCAEmB;AAAA;;AAClB,WAAKG,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA3B;AACD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;;6BAEQ;AAAA,UACCH,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAsD,uBAAY;AAAlE,QADF,EAEE;AAAI,QAAA,SAAS,EAAC;AAAd,SACGA,OAAO,KAAK,GAAZ,GAAkB,wBAAlB,GAA6C,2BADhD,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAA+C,QAAA,EAAE,EAAC;AAAlD,SACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,EAAE,EAAC;AAA/C,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,uBAAY;AAAnD,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA0CA,OAA1C,MADF,CAFF,EAKE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,yBAAc,GAHhB;AAIE,yBAAc,KAJhB;AAKE,yBAAeA,OALjB;AAME,4BAAiB;AANnB,SAQE;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,KAAK,EAAE;AACLO,UAAAA,KAAK,YAAKP,OAAL;AADA;AAFT,QARF,CALF,CADF,CALF,EA4BE;AAAK,QAAA,SAAS,EAAC;AAAf,yJA5BF,EAgCE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AACE,QAAA,SAAS,EAAEA,OAAO,KAAK,GAAZ,GAAkB,0BAAlB,GAA+C,uBAD5D;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWL;AAFtB,SAIGO,OAAO,KAAK,GAAZ,GAAkB,OAAlB,GAA4B,QAJ/B,CADF,CAhCF,CADF,CADF;AA6CD;;;;EArEwBQ,kBAAMC,S;;AAwEjCZ,YAAY,CAACL,SAAb,GAAyBA,SAAzB;eAEeK,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  onClose: PropTypes.func.isRequired\n};\n\nclass FinishedStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { percent: 0 };\n  }\n\n  tick() {\n    if (this.state.percent < 100) {\n      this.setState(prevState => ({\n        percent: prevState.percent + 20\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { percent } = this.state;\n    return (\n      <div className=\"pf-l-bullseye\">\n        <div className=\"pf-c-empty-state pf-m-lg\">\n          <i className=\"fas fa- fa-cogs pf-c-empty-state__icon\" aria-hidden=\"true\" />\n          <h1 className=\"pf-c-title pf-m-lg\">\n            {percent === 100 ? 'Configuration Complete' : 'Configuration in progress'}\n          </h1>\n          <div className=\"pf-c-empty-state__body\">\n            <div className=\"pf-c-progress pf-m-singleline\" id=\"progress-singleline-example\">\n              <div className=\"pf-c-progress__description\" id=\"progress-singleline-example-description\" />\n              <div className=\"pf-c-progress__status\" aria-hidden=\"true\">\n                <span className=\"pf-c-progress__measure\">{percent}%</span>\n              </div>\n              <div\n                className=\"pf-c-progress__bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percent}\n                aria-describedby=\"progress-singleline-example-description\"\n              >\n                <div\n                  className=\"pf-c-progress__indicator\"\n                  style={{\n                    width: `${percent}%`\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"pf-c-empty-state__body\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec non pulvinar tortor. Maecenas sit amet\n            pellentesque velit, eu eleifend mauris.\n          </div>\n          <div className=\"pf-c-empty-state__secondary\">\n            <button\n              className={percent === 100 ? 'pf-c-button pf-m-primary' : 'pf-c-button pf-m-link'}\n              onClick={this.props.onClose}\n            >\n              {percent === 100 ? 'Close' : 'Cancel'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFinishedStep.propTypes = propTypes;\n\nexport default FinishedStep;\n"],"file":"FinishedStep.js"}