{"version":3,"sources":["../../../esm/components/Button/Button.test.js"],"names":["Object","values","ButtonVariant","forEach","variant","test","view","React","createElement","Button","expect","toMatchSnapshot","label","find","props","toBe","link","icon","CartArrowDownIcon","isBlock","isDisabled","isFocus","isHover","isInline","component","type","Component"],"mappings":"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","sourcesContent":["import { Button, ButtonVariant } from './Button';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { CartArrowDownIcon } from '@patternfly/react-icons';\nObject.values(ButtonVariant).forEach(variant => {\n  test(`${variant} button`, () => {\n    const view = mount(React.createElement(Button, {\n      variant: variant,\n      \"aria-label\": variant\n    }, variant, \" Button\"));\n    expect(view).toMatchSnapshot();\n  });\n});\ntest('it adds an aria-label to plain buttons', () => {\n  const label = 'aria-label test';\n  const view = mount(React.createElement(Button, {\n    \"aria-label\": label\n  }));\n  expect(view.find('button').props()['aria-label']).toBe(label);\n});\ntest('link with icon', () => {\n  const view = mount(React.createElement(Button, {\n    variant: ButtonVariant.link,\n    icon: React.createElement(CartArrowDownIcon, null)\n  }, \"Block Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isBlock', () => {\n  const view = mount(React.createElement(Button, {\n    isBlock: true\n  }, \"Block Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isDisabled', () => {\n  const view = mount(React.createElement(Button, {\n    isDisabled: true\n  }, \"Disabled Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isFocus', () => {\n  const view = mount(React.createElement(Button, {\n    isFocus: true\n  }, \"Focused Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isHover', () => {\n  const view = mount(React.createElement(Button, {\n    isHover: true\n  }, \"Hovered Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isInline', () => {\n  const view = mount(React.createElement(Button, {\n    variant: ButtonVariant.link,\n    isInline: true\n  }, \"Hovered Button\"));\n  expect(view).toMatchSnapshot();\n});\ntest('allows passing in a string as the component', () => {\n  const component = 'a';\n  const view = mount(React.createElement(Button, {\n    component: component\n  }));\n  expect(view.find(component).type()).toBe(component);\n});\ntest('allows passing in a React Component as the component', () => {\n  const Component = () => React.createElement(\"div\", null, \"im a div\");\n\n  const view = mount(React.createElement(Button, {\n    component: Component\n  }));\n  expect(view.find(Component).type()).toBe(Component);\n});\ntest('aria-disabled is set to true and tabIndex to -1 if component is not a button and is disabled', () => {\n  const view = mount(React.createElement(Button, {\n    component: \"a\",\n    isDisabled: true\n  }, \"Disabled Anchor Button\"));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=Button.test.js.map"],"file":"Button.test.js"}