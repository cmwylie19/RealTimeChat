{"version":3,"sources":["../../../../../src/components/Table/base/header.tsx"],"names":["BaseHeader","props","children","headerRows","onRow","renderers","columns","React","createElement","header","wrapper","map","rowData","rowIndex","HeaderRow","key","concat","Component","className","Header"],"mappings":";;;;;;;;;AAMA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWMA,U;;;;;;;;;;;;;6BACK;AAAA,wBAC+D,KAAKC,KADpE;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAAA,UAC8BC,SAD9B,eAC8BA,SAD9B;AAAA,UACyCC,OADzC,eACyCA,OADzC;AAAA,UACqDL,KADrD,uGAGP;;;AACA,aAAOM,KAAK,CAACC,aAAN,CACLH,SAAS,CAACI,MAAV,CAAiBC,OADZ,EAELT,KAFK,EAGL,CACE,CAACE,UAAU,IAAI,CAACG,OAAD,CAAf,EAAyCK,GAAzC,CAA6C,UAACC,OAAD,EAAoBC,QAApB;AAAA,eAC3CN,KAAK,CAACC,aAAN,CAAoBM,oBAApB,EAA+B;AAC7BC,UAAAA,GAAG,YAAKF,QAAL,gBAD0B;AAE7BR,UAAAA,SAAS,EAAEA,SAAS,CAACI,MAFQ;AAG7BL,UAAAA,KAAK,EAALA,KAH6B;AAI7BQ,UAAAA,OAAO,EAAPA,OAJ6B;AAK7BC,UAAAA,QAAQ,EAARA;AAL6B,SAA/B,CAD2C;AAAA,OAA7C,CADF,EAUEG,MAVF,CAUSd,QAVT,CAHK,CAAP;AAeD;;;;EApBsBK,KAAK,CAACU,S;;gBAAzBjB,U;AARJG,EAAAA,U;AACAD,EAAAA,Q;AACAI,EAAAA,O;AAEAF,EAAAA,K;AACAc,EAAAA,S;;;AA0BK,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAClB,KAAD;AAAA,SACpB,oBAAC,yBAAD,CAAiB,QAAjB,QACG;AAAA,QAAGK,OAAH,QAAGA,OAAH;AAAA,QAAYD,SAAZ,QAAYA,SAAZ;AAAA,WAA4B,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEC,OAArB;AAA8B,MAAA,SAAS,EAAED;AAAzC,OAAwDJ,KAAxD,EAA5B;AAAA,GADH,CADoB;AAAA,CAAf;;;;AA/BLE,EAAAA,U;AACAD,EAAAA,Q;AACAI,EAAAA,O;AAEAF,EAAAA,K;AACAc,EAAAA,S","sourcesContent":["/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { createElementType, RowsType, ColumnsType, RenderersTypes } from './types';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nexport interface HeaderProps {\n  headerRows?: RowsType[] | ColumnsType; // array of rows arrays\n  children?: React.ReactNode;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  onRow?: Function;\n  className?: string;\n}\n\nclass BaseHeader extends React.Component<HeaderProps, {}> {\n  render() {\n    const { children, headerRows, onRow, renderers, columns, ...props } = this.props;\n\n    // If headerRows aren't passed, default to bodyColumns as header rows\n    return React.createElement(\n      renderers.header.wrapper as createElementType,\n      props,\n      [\n        (headerRows || [columns] as ColumnsType).map((rowData: RowsType, rowIndex) =>\n          React.createElement(HeaderRow, {\n            key: `${rowIndex}-header-row`,\n            renderers: renderers.header,\n            onRow,\n            rowData,\n            rowIndex\n          })\n        )\n      ].concat(children as any)\n    );\n  }\n}\n\nexport const Header = (props: HeaderProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseHeader columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"],"file":"header.js"}