{"version":3,"sources":["../../../../src/components/Accordion/Accordion.tsx"],"names":["React","css","styles","AccordionContext","Accordion","children","className","ariaLabel","headingLevel","asDefinitionList","props","AccordionList","accordion","ContentContainer","ToggleContainer"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AAeA,OAAO,MAAMC,SAAkD,GAAG,UAO5C;AAAA,MAP6C;AACjEC,IAAAA,QAAQ,GAAG,IADsD;AAEjEC,IAAAA,SAAS,GAAG,EAFqD;AAGjE,kBAAcC,SAAS,GAAG,EAHuC;AAIjEC,IAAAA,YAAY,GAAG,IAJkD;AAKjEC,IAAAA,gBAAgB,GAAG;AAL8C,GAO7C;AAAA,MADjBC,KACiB;;AACpB,QAAMC,aAAkB,GAAGF,gBAAgB,GAAG,IAAH,GAAU,KAArD;AACA,SACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAER,GAAG,CAACC,MAAM,CAACU,SAAR,EAAmBN,SAAnB,CAA7B;AAA4D,kBAAYC;AAAxE,KAAuFG,KAAvF,GACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAChCG,MAAAA,gBAAgB,EAAEJ,gBAAgB,GAAG,IAAH,GAAU,KADZ;AAEhCK,MAAAA,eAAe,EAAEL,gBAAgB,GAAG,IAAH,GAAUD;AAFX;AAAlC,KAIGH,QAJH,CADF,CADF;AAUD,CAnBM;;AAXLA,EAAAA,Q;AAEAC,EAAAA,S;AAEA,c;AAEAE,EAAAA,Y,aAAe,I,EAAO,I,EAAO,I,EAAO,I,EAAO,I,EAAO,I;AAElDC,EAAAA,gB","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport {AccordionContext} from './AccordionContext';\n\nexport interface AccordionProps extends React.HTMLProps<HTMLDListElement> {\n  /** Content rendered inside the Accordion  */\n  children?: React.ReactNode;\n  /** Additional classes added to the Accordion  */\n  className?: string;\n  /** Adds accessible text to the Accordion */\n  'aria-label'?: string;\n  /** Heading level to use */\n  headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Flag to indicate whether use definition list or div */\n  asDefinitionList?: boolean;\n}\n\nexport const Accordion: React.FunctionComponent<AccordionProps> = ({\n  children = null,\n  className = '',\n  'aria-label': ariaLabel = '',\n  headingLevel = 'h3',\n  asDefinitionList = true,\n  ...props\n}: AccordionProps) => {\n  const AccordionList: any = asDefinitionList ? 'dl' : 'div';\n  return (\n    <AccordionList className={css(styles.accordion, className)} aria-label={ariaLabel} {...props}>\n      <AccordionContext.Provider value={{\n        ContentContainer: asDefinitionList ? 'dd' : 'div',\n        ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n      }}>\n        {children}\n      </AccordionContext.Provider>\n    </AccordionList>\n  );\n};\n"],"file":"Accordion.js"}