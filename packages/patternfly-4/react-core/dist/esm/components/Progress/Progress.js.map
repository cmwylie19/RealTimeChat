{"version":3,"sources":["../../../../src/components/Progress/Progress.tsx"],"names":["React","styles","css","getModifier","ProgressContainer","ProgressMeasureLocation","ProgressVariant","getUniqueId","ProgressSize","Progress","Component","props","id","render","className","size","value","title","label","variant","measureLocation","min","max","valueText","additionalProps","ariaProps","scaledValue","Math","floor","progress","inside","lg","top","info"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation, ProgressVariant } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport enum ProgressSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n}\n\nexport interface ProgressProps extends Omit<React.HTMLProps<HTMLDivElement>, 'size' | 'label'> {\n  /** Classname for progress component. */\n  className?: string;\n  /** Size variant of progress. */\n  size?: 'sm' | 'md' | 'lg';\n  /** Where the measure percent will be located. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Status variant of progress. */\n  variant?: 'danger' | 'success' | 'info';\n  /** Title above progress. */\n  title?: string;\n  /** Text description of current progress value to display instead of percentage. */\n  label?: React.ReactNode;\n  /** Actual value of progress. */\n  value?: number;\n  /** DOM id for progress component. */\n  id?: string;\n  /** Minimal value of progress. */\n  min?: number;\n  /** Maximum value of progress. */\n  max?: number;\n  /** Accessible text description of current progress value, for when value is not a percentage. Use with label. */\n  valueText?: string;\n}\n\nexport class Progress extends React.Component<ProgressProps> {\n  static defaultProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: ProgressVariant.info,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null as ProgressSize,\n    label: null as React.ReactNode,\n    value: 0,\n    valueText: null as string\n  };\n\n  id = this.props.id || getUniqueId();\n\n  render() {\n    const {\n      id,\n      className,\n      size,\n      value,\n      title,\n      label,\n      variant,\n      measureLocation,\n      min,\n      max,\n      valueText,\n      ...props\n    } = this.props;\n    const additionalProps = {\n      ...props,\n      ...(valueText ? { 'aria-valuetext': valueText } : { 'aria-describedby': `${this.id}-description` })\n    };\n\n    const ariaProps: {[k: string]: any} = {\n      'aria-describedby': `${this.id}-description`,\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n\n    if (valueText) {\n      ariaProps['aria-valuetext'] = valueText;\n    }\n\n    const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100)));\n    return (\n      <div\n        {...additionalProps}\n        className={css(\n          styles.progress,\n          getModifier(styles, variant, ''),\n          getModifier(styles, measureLocation, ''),\n          getModifier(styles, measureLocation === ProgressMeasureLocation.inside ? ProgressSize.lg : size, ''),\n          !title && getModifier(styles, 'singleline', ''),\n          className\n        )}\n        id={this.id}\n        role=\"progressbar\"\n      >\n        <ProgressContainer\n          parentId={this.id}\n          value={scaledValue}\n          title={title}\n          label={label}\n          variant={variant}\n          measureLocation={measureLocation}\n          ariaProps={ariaProps}\n        />\n      </div>\n    );\n  }\n}\n"],"file":"Progress.js"}