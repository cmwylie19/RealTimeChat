{"version":3,"sources":["../../../../src/components/Select/SelectOption.tsx"],"names":["SelectOption","React","createRef","event","key","KeyTypes","Tab","preventDefault","ArrowUp","props","keyHandler","index","ArrowDown","Enter","ref","current","click","context","variant","SelectVariant","checkbox","focus","sendRef","children","className","value","onClick","isDisabled","isPlaceholder","isSelected","isChecked","isFocused","onSelect","onClose","styles","selectMenuItem","modifiers","selected","disabled","onKeyDown","toString","selectMenuItemIcon","checkStyles","check","checkInput","checkLabel","Component","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { default as checkStyles } from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { SelectConsumer, SelectVariant, KeyTypes } from './selectConstants';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface SelectOptionObject {\n  toString(): string;\n}\nexport interface SelectOptionProps extends Omit<React.HTMLProps<HTMLElement>, 'type' | 'ref' | 'value'> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Internal index of the option */\n  index?: number;\n  /** The value for the option, if passing an object you most provide a toString function */\n  value: string | SelectOptionObject;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the option acts as a placeholder */\n  isPlaceholder?: boolean;\n  /** Internal flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Internal flag indicating if the option is focused */\n  isFocused?: boolean;\n  /** Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, index: number) => void;\n  /** Internal callback for keyboard navigation */\n  keyHandler?: (index: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\n\nexport class SelectOption extends React.Component<SelectOptionProps> {\n  private ref = React.createRef<any>();\n  static defaultProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isPlaceholder: false,\n    isSelected: false,\n    isChecked: false,\n    isFocused: false,\n    onClick: Function.prototype,\n    sendRef: Function.prototype,\n    keyHandler: Function.prototype\n  };\n\n  componentDidMount() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KeyTypes.Tab) {\n      return;\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      this.props.keyHandler(this.props.index, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      this.props.keyHandler(this.props.index, 'down');\n    } else if (event.key === KeyTypes.Enter) {\n      this.ref.current.click();\n      if (this.context.variant === SelectVariant.checkbox) {\n        this.ref.current.focus();\n      }\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      ...props\n    } = this.props;\n    return (\n      <SelectConsumer>\n        {({ onSelect, onClose, variant }) => (\n          <React.Fragment>\n            {variant !== SelectVariant.checkbox && (\n              <li role=\"presentation\">\n                <button\n                  {...props}\n                  className={css(\n                    styles.selectMenuItem,\n                    isSelected && styles.modifiers.selected,\n                    isDisabled && styles.modifiers.disabled,\n                    isFocused && styles.modifiers.focus,\n                    className\n                  )}\n                  onClick={(event) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value, isPlaceholder);\n                      onClose();\n                    }\n                  }}\n                  role=\"option\"\n                  aria-selected={isSelected || null}\n                  ref={this.ref}\n                  onKeyDown={this.onKeyDown}\n                  type=\"button\"\n                >\n                  {children || value.toString()}\n                  {isSelected && <CheckIcon className={css(styles.selectMenuItemIcon)} aria-hidden />}\n                </button>\n              </li>\n            )}\n            {variant === SelectVariant.checkbox && (\n              <label\n                {...props}\n                className={css(\n                  checkStyles.check,\n                  styles.selectMenuItem,\n                  isDisabled && styles.modifiers.disabled,\n                  className\n                )}\n                onKeyDown={this.onKeyDown}\n              >\n                <input\n                  id={value.toString()}\n                  className={css(checkStyles.checkInput)}\n                  type=\"checkbox\"\n                  onChange={(event) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value);\n                    }\n                  }}\n                  ref={this.ref}\n                  defaultChecked={isChecked || false}\n                  disabled={isDisabled}\n                />\n                <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{children || value.toString()}</span>\n              </label>\n            )}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"],"file":"SelectOption.js"}