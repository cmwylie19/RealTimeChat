{"version":3,"sources":["../../../../src/components/Nav/NavExpandable.tsx"],"names":["React","styles","a11yStyles","css","AngleRightIcon","getUniqueId","NavContext","NavExpandable","Component","props","id","expandedState","e","val","onExpand","setState","onToggle","target","getAttribute","groupId","state","componentDidMount","isExpanded","componentDidUpdate","prevProps","render","title","srText","children","className","isActive","context","navItem","modifiers","expanded","current","handleToggle","navLink","preventDefault","navToggle","navSubnav","screenReader","navSimpleList"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AACA,OAAOC,UAAP,MAAuB,oEAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AA2BA,OAAO,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAAoF;AAAA;AAAA;;AAAA,gCAWpF,KAAKC,KAAL,CAAWC,EAAX,IAAiBL,WAAW,EAXwD;;AAAA,mCAajF;AACNM,MAAAA,aAAa,EAAE;AADT,KAbiF;;AAAA,sCA2B9E,CAACC,CAAD,EAAiDC,GAAjD,KAAkE;AAC3E,UAAI,KAAKJ,KAAL,CAAWK,QAAf,EAAyB;AACvB,aAAKL,KAAL,CAAWK,QAAX,CAAoBF,CAApB,EAAuBC,GAAvB;AACD,OAFD,MAEO;AACL,aAAKE,QAAL,CAAc;AAAEJ,UAAAA,aAAa,EAAEE;AAAjB,SAAd;AACD;AACF,KAjCwF;;AAAA,0CAmC1E,CACbD,CADa,EAEbI,QAFa,KAGV;AACH;AACA,UAAKJ,CAAC,CAACK,MAAH,CAAkBC,YAAlB,CAA+B,gBAA/B,MAAqD,mBAAzD,EAA8E;AAC5E;AACD;;AAED,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKV,KAAzB;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAoB,KAAKS,KAA/B;AACAJ,MAAAA,QAAQ,CAACJ,CAAD,EAAIO,OAAJ,EAAa,CAACR,aAAd,CAAR;AACA,WAAKG,QAAL,CAAcF,CAAd,EAAiB,CAACD,aAAlB;AACD,KAhDwF;AAAA;;AAiBzFU,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,QAAL,CAAc;AAAEJ,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWa;AAA5B,KAAd;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAgC;AAChD,QAAI,KAAKf,KAAL,CAAWa,UAAX,KAA0BE,SAAS,CAACF,UAAxC,EAAoD;AAClD,WAAKP,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWa;AAA5B,OAAd;AACD;AACF;;AAyBDG,EAAAA,MAAM,GAAG;AACP,wBAAsG,KAAKhB,KAA3G;AAAA,UAAM;AAAEC,MAAAA,EAAF;AAAMgB,MAAAA,KAAN;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA,SAA/B;AAA0CC,MAAAA,QAA1C;AAAoDX,MAAAA,OAApD;AAA6DG,MAAAA,UAA7D;AAAyER,MAAAA;AAAzE,KAAN;AAAA,UAA4FL,KAA5F;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAoB,KAAKS,KAA/B;AAEA,WACE,oBAAC,UAAD,CAAY,QAAZ,QACIW,OAAD,IACC;AACE,MAAA,SAAS,EAAE5B,GAAG,CACZF,MAAM,CAAC+B,OADK,EAEZrB,aAAa,IAAIV,MAAM,CAACgC,SAAP,CAAiBC,QAFtB,EAGZJ,QAAQ,IAAI7B,MAAM,CAACgC,SAAP,CAAiBE,OAHjB,EAIZN,SAJY,CADhB;AAOE,MAAA,OAAO,EAAGjB,CAAD,IAAoD,KAAKwB,YAAL,CAAkBxB,CAAlB,EAAqBmB,OAAO,CAACf,QAA7B;AAP/D,OAQMP,KARN,GAUE;AACE,wBAAe,mBADjB;AAEE,MAAA,SAAS,EAAEN,GAAG,CAACF,MAAM,CAACoC,OAAR,CAFhB;AAGE,MAAA,EAAE,EAAEV,MAAM,GAAG,IAAH,GAAU,KAAKjB,EAH3B;AAIE,MAAA,IAAI,EAAC,GAJP;AAKE,MAAA,OAAO,EAAGE,CAAD,IAAOA,CAAC,CAAC0B,cAAF,EALlB;AAME,MAAA,WAAW,EAAG1B,CAAD,IAAOA,CAAC,CAAC0B,cAAF,EANtB;AAOE,uBAAe3B;AAPjB,OASGe,KATH,EAUE;AAAM,MAAA,SAAS,EAAEvB,GAAG,CAACF,MAAM,CAACsC,SAAR;AAApB,OACE,oBAAC,cAAD;AAAgB,qBAAY;AAA5B,MADF,CAVF,CAVF,EAwBE;AAAS,MAAA,SAAS,EAAEpC,GAAG,CAACF,MAAM,CAACuC,SAAR,CAAvB;AAA2C,yBAAiB,KAAK9B,EAAjE;AAAqE,MAAA,MAAM,EAAEC,aAAa,GAAG,IAAH,GAAU;AAApG,OACGgB,MAAM,IACL;AAAI,MAAA,SAAS,EAAExB,GAAG,CAACD,UAAU,CAACuC,YAAZ,CAAlB;AAA6C,MAAA,EAAE,EAAE,KAAK/B;AAAtD,OACGiB,MADH,CAFJ,EAME;AAAI,MAAA,SAAS,EAAExB,GAAG,CAACF,MAAM,CAACyC,aAAR;AAAlB,OAA2Cd,QAA3C,CANF,CAxBF,CAFJ,CADF;AAuCD;;AA7FwF;;gBAA9ErB,a;AAvBXmB,EAAAA,K;AAEAC,EAAAA,M;AAEAL,EAAAA,U;AAEAM,EAAAA,Q;AAEAC,EAAAA,S;AAEAV,EAAAA,O;AAEAW,EAAAA,Q;AAEApB,EAAAA,E;AAEAI,EAAAA,Q;;;gBAOWP,a,kBACW;AACpBoB,EAAAA,MAAM,EAAE,EADY;AAEpBL,EAAAA,UAAU,EAAE,KAFQ;AAGpBM,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,SAAS,EAAE,EAJS;AAKpBV,EAAAA,OAAO,EAAE,IALW;AAMpBW,EAAAA,QAAQ,EAAE,KANU;AAOpBpB,EAAAA,EAAE,EAAE;AAPgB,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport { AngleRightIcon } from '@patternfly/react-icons';\n\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\n\nexport interface NavExpandableProps extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement> {\n  /** Title shown for the expandable list */\n  title: string;\n  /** If defined, screen readers will read this text instead of the list title */\n  srText?: string;\n  /** Boolean to programatically expand or collapse section */\n  isExpanded?: boolean;\n  /** Anything that can be rendered inside of the expandable list */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  groupId?: string | number;\n  /** If true makes the expandable list title active */\n  isActive?: boolean;\n  /** Identifier to use for the section aria label */\n  id?: string;\n  /** allow consumer to optionally override this callback and manage expand state externally */\n  onExpand?: (e: React.MouseEvent<HTMLLIElement, MouseEvent>, val: boolean) => void;\n}\n\ninterface NavExpandableState {\n  expandedState: boolean;\n}\n\nexport class NavExpandable extends React.Component<NavExpandableProps, NavExpandableState> {\n  static defaultProps = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null as string,\n    isActive: false,\n    id: ''\n  };\n\n  id = this.props.id || getUniqueId();\n\n  state = {\n    expandedState: false\n  };\n\n  componentDidMount() {\n    this.setState({ expandedState: this.props.isExpanded });\n  }\n\n  componentDidUpdate(prevProps: NavExpandableProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({ expandedState: this.props.isExpanded });\n    }\n  }\n\n  onExpand = (e: React.MouseEvent<HTMLLIElement, MouseEvent>, val: boolean) => {\n    if (this.props.onExpand) {\n      this.props.onExpand(e, val);\n    } else {\n      this.setState({ expandedState: val });\n    }\n  }\n\n  handleToggle = (\n    e: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    onToggle: (event: React.MouseEvent<HTMLLIElement, MouseEvent>, groupId: string | number, expandedState: boolean) => void\n  ) => {\n    // Item events can bubble up, ignore those\n    if ((e.target as any).getAttribute('data-component') !== 'pf-nav-expandable') {\n      return;\n    }\n\n    const { groupId } = this.props;\n    const { expandedState } = this.state;\n    onToggle(e, groupId, !expandedState);\n    this.onExpand(e, !expandedState);\n  }\n\n  render() {\n    const { id, title, srText, children, className, isActive, groupId, isExpanded, onExpand, ...props } = this.props;\n    const { expandedState } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {(context: any) => (\n          <li\n            className={css(\n              styles.navItem,\n              expandedState && styles.modifiers.expanded,\n              isActive && styles.modifiers.current,\n              className\n            )}\n            onClick={(e: React.MouseEvent<HTMLLIElement, MouseEvent>) => this.handleToggle(e, context.onToggle)}\n            {...props}\n          >\n            <a\n              data-component=\"pf-nav-expandable\"\n              className={css(styles.navLink)}\n              id={srText ? null : this.id}\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              onMouseDown={(e) => e.preventDefault()}\n              aria-expanded={expandedState}\n            >\n              {title}\n              <span className={css(styles.navToggle)}>\n                <AngleRightIcon aria-hidden=\"true\" />\n              </span>\n            </a>\n            <section className={css(styles.navSubnav)} aria-labelledby={this.id} hidden={expandedState ? null : true}>\n              {srText && (\n                <h2 className={css(a11yStyles.screenReader)} id={this.id}>\n                  {srText}\n                </h2>\n              )}\n              <ul className={css(styles.navSimpleList)}>{children}</ul>\n            </section>\n          </li>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n"],"file":"NavExpandable.js"}