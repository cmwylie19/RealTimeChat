{"version":3,"sources":["../../../../src/components/AboutModal/AboutModal.test.tsx"],"names":["mockListener","jest","spyOn","ReactDOM","document","mockImplementation","node","props","onClose","fn","children","productName","trademark","brandImageSrc","brandImageAlt","logoImageSrc","logoImageAlt","test","view","update","expect","createElement","toBeCalledWith","toHaveBeenCalledTimes","addEventListener","mock","calls","event","handler","toBe","keyCode","KEY_CODES","ESCAPE_KEY","toBeCalled","not","first","AboutModal","second","ariaLabelledBy","ariaDescribedBy","noImgAltrops","myMock","global","console","error","JSAboutModal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { shallow } from 'enzyme';\nimport { AboutModal } from './AboutModal';\nimport { KEY_CODES } from '../../helpers/constants';\n\nconst mockListener = jest.spyOn(ReactDOM, 'createPortal');\njest.spyOn(document, 'createElement');\njest.spyOn(document, 'addEventListener');\n\nmockListener.mockImplementation((node) => node as React.ReactPortal);\n\nconst props = {\n onClose: jest.fn(),\n children: 'modal content',\n productName: 'Product Name',\n trademark: 'Trademark and copyright information here',\n brandImageSrc: 'brandImg...',\n brandImageAlt: 'Brand Image',\n logoImageSrc: 'logoImg...',\n logoImageAlt: 'AboutModal Logo'\n};\n\ntest('AboutModal creates a container element once for div', () => {\n const view = shallow(<AboutModal {...props}> Test About Modal </AboutModal>);\n view.update();\n expect(document.createElement).toBeCalledWith('div');\n expect(document.createElement).toHaveBeenCalledTimes(1);\n});\n\ntest('About Modal closes with escape', () => {\n shallow(\n   <AboutModal {...props} isOpen>\n     Test About Modal\n   </AboutModal>\n );\n const [event, handler] = (document.addEventListener as any).mock.calls[0];\n expect(event).toBe('keydown');\n handler({ keyCode: KEY_CODES.ESCAPE_KEY });\n expect(props.onClose).toBeCalled();\n});\n\ntest('modal does not call onClose for esc key if it is not open', () => {\n shallow(<AboutModal {...props} />);\n const [event, handler] = (document.addEventListener as any).mock.calls[0];\n expect(event).toBe('keydown');\n handler({ keyCode: KEY_CODES.ESCAPE_KEY });\n expect(props.onClose).not.toBeCalled();\n});\n\ntest('Each modal is given new ariaDescribedById and ariaLabelledbyId', () => {\n const first = new AboutModal(props);\n const second = new AboutModal(props);\n expect(first.ariaLabelledBy).not.toBe(second.ariaLabelledBy);\n expect(first.ariaDescribedBy).not.toBe(second.ariaDescribedBy);\n});\n\ntest('Console error is generated when the logoImageSrc is provided without logoImageAlt', () => {\n const noImgAltrops = {\n   onClose: jest.fn(),\n   children: 'modal content',\n   productName: 'Product Name',\n   trademark: 'Trademark and copyright information here',\n   brandImageSrc: 'brandImg...',\n   logoImageSrc: 'logoImg...'\n };\n const myMock = jest.fn() as any;\n global.console = { error: myMock } as any;\n const JSAboutModal = AboutModal as any;\n shallow(<JSAboutModal {...noImgAltrops}> Test About Modal </JSAboutModal>);\n expect(myMock).toBeCalled();\n});\n"],"file":"AboutModal.test.js"}