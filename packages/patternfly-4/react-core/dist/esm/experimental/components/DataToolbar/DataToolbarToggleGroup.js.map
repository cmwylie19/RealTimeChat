{"version":3,"sources":["../../../../../src/experimental/components/DataToolbar/DataToolbarToggleGroup.tsx"],"names":["React","ReactDOM","styles","css","getModifier","DataToolbarContext","Button","global_breakpoint_lg","globalBreakpointLg","formatSpacers","formatBreakpointMods","DataToolbarToggleGroup","Component","viewportSize","window","innerWidth","lgBreakpointValue","parseInt","value","render","props","toggleIcon","breakpoint","variant","breakpointMods","spacers","className","children","isExpanded","toggleIsExpanded","expandableContentRef","expandableContentId","dataToolbarGroup","dataToolbarToggle","isContentPopup","createPortal","current"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,0BAAjC;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,oBAAoB,IAAIC,kBAAjC,QAA2D,0BAA3D;AAEA,SAGEC,aAHF,QAIO,oBAJP;AAKA,SAASC,oBAAT,QAAqC,uBAArC;AASA,OAAO,MAAMC,sBAAN,SAAqCX,KAAK,CAACY,SAA3C,CAAkF;AAAA;AAAA;;AAAA,4CAOtE,MAAM;AACrB,YAAMC,YAAY,GAAGC,MAAM,CAACC,UAA5B;AACA,YAAMC,iBAAiB,GAAGC,QAAQ,CAACT,kBAAkB,CAACU,KAApB,CAAlC;AACA,aAAOL,YAAY,GAAGG,iBAAtB;AACD,KAXsF;AAAA;;AAavFG,EAAAA,MAAM,GAAG;AACP,wBAAoG,KAAKC,KAAzG;AAAA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA,OAA1B;AAAmCC,MAAAA,cAAnC;AAAmDC,MAAAA,OAAnD;AAA4DC,MAAAA,SAA5D;AAAuEC,MAAAA;AAAvE,KAAN;AAAA,UAA0FP,KAA1F;;AAEA,WACE,oBAAC,kBAAD,CAAoB,QAApB,QACG,CAAC;AAAEQ,MAAAA,UAAF;AAAcC,MAAAA,gBAAd;AAAgCC,MAAAA,oBAAhC;AAAsDC,MAAAA;AAAtD,KAAD,KAAgF;AAC/E,aACE;AACE,QAAA,SAAS,EAAE5B,GAAG,CACZD,MAAM,CAAC8B,gBADK,EAEZT,OAAO,IAAInB,WAAW,CAACF,MAAD,EAASqB,OAAT,CAFV,EAGZb,oBAAoB,CAACc,cAAD,EAAiBtB,MAAjB,CAHR,EAIZO,aAAa,CAACgB,OAAD,EAAU,kBAAV,CAJD,EAKZrB,WAAW,CAACF,MAAD,EAAS,cAAT,CALC,EAMZE,WAAW,CAACF,MAAD,EAAU,aAAYoB,UAAW,EAAjC,CANC,EAOZI,SAPY;AADhB,SASMN,KATN,GAWE;AAAK,QAAA,SAAS,EAAEjB,GAAG,CAACD,MAAM,CAAC+B,iBAAR;AAAnB,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,OAAO,EAAEJ;AAFX,SAGMD,UAAU,IAAI;AAAE,yBAAiB;AAAnB,OAHpB;AAIE,yBAAeA,UAAU,IAAI,KAAKM,cAAL,EAJ/B;AAKE,yBAAeH;AALjB,UAOGV,UAPH,CADF,CAXF,EAsBGO,UAAU,GAAG3B,QAAQ,CAACkC,YAAT,CAAsBR,QAAtB,EAAgCG,oBAAoB,CAACM,OAArD,CAAH,GAAmET,QAtBhF,CADF;AA0BD,KA5BH,CADF;AAgCD;;AAhDsF;;gBAA5EhB,sB;AALXU,EAAAA,U;AAEAC,EAAAA,U,aAAY,I,EAAO,I,EAAO,I,EAAO,K;;;gBAGtBX,sB,kBAEW;AACpBa,EAAAA,cAAc,EAAE,EADI;AAEpBC,EAAAA,OAAO,EAAE;AAFW,C","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport { DataToolbarGroupProps } from './DataToolbarGroup';\nimport { DataToolbarContext } from './DataToolbarUtils';\nimport { Button } from '../../../components/Button';\nimport { global_breakpoint_lg as globalBreakpointLg } from '@patternfly/react-tokens';\n\nimport {\n  DataToolbarBreakpointMod,\n  DataToolbarSpacer,\n  formatSpacers\n} from './DataToolbarUtils';\nimport { formatBreakpointMods } from '../../../helpers/util';\n\nexport interface DataToolbarToggleGroupProps extends DataToolbarGroupProps {\n  /** An Icon to be rendered when the toggle group has collapsed down */\n  toggleIcon: React.ReactNode;\n  /** The breakpoint at which the toggle group is collapsed down */\n  breakpoint: 'md' | 'lg' | 'xl' | '2xl';\n}\n\nexport class DataToolbarToggleGroup extends React.Component<DataToolbarToggleGroupProps> {\n\n  static defaultProps = {\n    breakpointMods: [] as DataToolbarBreakpointMod[],\n    spacers: [] as DataToolbarSpacer[],\n  };\n\n  isContentPopup = () => {\n    const viewportSize = window.innerWidth;\n    const lgBreakpointValue = parseInt(globalBreakpointLg.value);\n    return viewportSize < lgBreakpointValue;\n  }\n\n  render() {\n    const { toggleIcon, breakpoint, variant, breakpointMods, spacers, className, children, ...props } = this.props;\n\n    return (\n      <DataToolbarContext.Consumer>\n        {({ isExpanded, toggleIsExpanded, expandableContentRef, expandableContentId}) => {\n          return (\n            <div\n              className={css(\n                styles.dataToolbarGroup,\n                variant && getModifier(styles, variant),\n                formatBreakpointMods(breakpointMods, styles),\n                formatSpacers(spacers, 'pf-m-space-items'),\n                getModifier(styles, 'toggle-group'),\n                getModifier(styles, `reveal-on-${breakpoint}`),\n                className)}\n              {...props}\n            >\n              <div className={css(styles.dataToolbarToggle)}>\n                <Button\n                  variant=\"plain\"\n                  onClick={toggleIsExpanded}\n                  {...isExpanded && { 'aria-expanded': true }}\n                  aria-haspopup={isExpanded && this.isContentPopup()}\n                  aria-controls={expandableContentId}\n                >\n                  {toggleIcon}\n                </Button>\n              </div>\n              {isExpanded ? ReactDOM.createPortal(children, expandableContentRef.current) : children}\n            </div>\n          );\n        }}\n      </DataToolbarContext.Consumer>\n    );\n  }\n}\n"],"file":"DataToolbarToggleGroup.js"}