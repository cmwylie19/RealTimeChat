{"version":3,"sources":["../../src/StyleSheet.test.js"],"names":["StyleSheet","css","test","styles","parse","expect","toMatchSnapshot","describe","stringValue","parseValue","createValue","create","result","undefined","toBe"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,cAAhC;AAEAC,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjD,QAAMC,MAAM,GAAGH,UAAU,CAACI,KAAX,CAAkB;;;;;;;GAAlB,CAAf;AAQAC,EAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,CAVG,CAAJ;AAYAJ,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,QAAMC,MAAM,GAAGH,UAAU,CAACI,KAAX,CAAkB;;;GAAlB,CAAf;AAIAC,EAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,CANG,CAAJ;AAQAC,QAAQ,CAAC,KAAD,EAAQ,MAAM;AACpB,QAAMC,WAAW,GAAG,OAApB;AACA,QAAMC,UAAU,GAAGT,UAAU,CAACI,KAAX,CAAiB,gBAAjB,CAAnB;AACA,QAAMM,WAAW,GAAGV,UAAU,CAACW,MAAX,CAAkB;AAAED,IAAAA,WAAW,EAAE;AAAf,GAAlB,CAApB;AAEAR,EAAAA,IAAI,CAAC,sBAAD,EAAyB,MAAM;AACjC,UAAMU,MAAM,GAAGX,GAAG,CAACO,WAAD,EAAc,IAAd,EAAoBK,SAApB,EAA+B,KAA/B,EAAsC,CAAtC,CAAlB;AACAR,IAAAA,MAAM,CAACO,MAAD,CAAN,CAAeE,IAAf,CAAoBN,WAApB;AACD,GAHG,CAAJ;AAKAN,EAAAA,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjDG,IAAAA,MAAM,CAACJ,GAAG,CAACQ,UAAU,CAACA,UAAZ,CAAJ,CAAN,CAAmCH,eAAnC;AACD,GAFG,CAAJ;AAIAJ,EAAAA,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClDG,IAAAA,MAAM,CAACJ,GAAG,CAACS,WAAW,CAACA,WAAb,CAAJ,CAAN,CAAqCJ,eAArC;AACD,GAFG,CAAJ;AAIAJ,EAAAA,IAAI,CAAC,8BAAD,EAAiC,MAAM;AACzCG,IAAAA,MAAM,CAACJ,GAAG,CAACQ,UAAU,CAACA,UAAZ,EAAwBC,WAAW,CAACA,WAApC,EAAiDF,WAAjD,CAAJ,CAAN,CAAyEF,eAAzE;AACD,GAFG,CAAJ;AAGD,CArBO,CAAR","sourcesContent":["import { StyleSheet, css } from './StyleSheet';\n\ntest('converts a css string into an object', () => {\n  const styles = StyleSheet.parse(`\n  .pf-c-button {\n    color: red;\n  }\n  .pf-c-alert {\n    color: black;\n  }\n  `);\n  expect(styles).toMatchSnapshot();\n});\n\ntest('places modifers in the modifers object', () => {\n  const styles = StyleSheet.parse(`\n  .pf-m-active {}\n  .pf-m-secondary-alt {}\n  `);\n  expect(styles).toMatchSnapshot();\n});\n\ndescribe('css', () => {\n  const stringValue = 'value';\n  const parseValue = StyleSheet.parse('.parseValue {}');\n  const createValue = StyleSheet.create({ createValue: {} });\n\n  test('removes falsy values', () => {\n    const result = css(stringValue, null, undefined, false, 0);\n    expect(result).toBe(stringValue);\n  });\n\n  test('handles values from StyleSheet.parse', () => {\n    expect(css(parseValue.parseValue)).toMatchSnapshot();\n  });\n\n  test('handles values from StyleSheet.create', () => {\n    expect(css(createValue.createValue)).toMatchSnapshot();\n  });\n\n  test('concatenates values together', () => {\n    expect(css(parseValue.parseValue, createValue.createValue, stringValue)).toMatchSnapshot();\n  });\n});\n"],"file":"StyleSheet.test.js"}