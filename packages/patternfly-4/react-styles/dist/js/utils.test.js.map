{"version":3,"sources":["../../src/utils.test.js"],"names":["describe","test","result","utils","isValidStyleDeclaration","expect","toBe","__className","__inject","jest","fn","createStyleDeclaration","toMatchSnapshot","isModifier","styles","modifiers","fooBar","modifer","getModifier","defaultModifier","formatClassName","css","getCSSClasses","style","getClassName"],"mappings":"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","sourcesContent":["import * as utils from './utils';\n\ndescribe('isValidStyleDeclaration', () => {\n  test('returns false for a falsy value', () => {\n    const result = utils.isValidStyleDeclaration(null);\n    expect(result).toBe(false);\n  });\n\n  test('returns false for object without a string __className', () => {\n    const result = utils.isValidStyleDeclaration({ __className: {} });\n    expect(result).toBe(false);\n  });\n\n  test('returns false for object without a function __inject', () => {\n    const result = utils.isValidStyleDeclaration({ __inject: {} });\n    expect(result).toBe(false);\n  });\n  test('returns true for object with a string __className and function __inject', () => {\n    const result = utils.isValidStyleDeclaration({ __inject: jest.fn(), __className: 'class' });\n    expect(result).toBe(true);\n  });\n});\n\ntest('createStyleDeclaration', () => {\n  expect(utils.createStyleDeclaration('  .foo-bar  ', 'css')).toMatchSnapshot();\n});\n\ndescribe('isModifier', () => {\n  test('returns true for class starting with .pf-m-', () => {\n    const result = utils.isModifier('.pf-m-test');\n    expect(result).toBe(true);\n  });\n\n  test('returns false for class not starting with .pf-m-', () => {\n    const result = utils.isModifier('.pf-l-test');\n    expect(result).toBe(false);\n  });\n\n  test('returns false for non string values', () => {\n    const result = utils.isModifier({});\n    expect(result).toBe(false);\n  });\n});\n\ndescribe('getModifier', () => {\n  const styles = {\n    modifiers: {\n      fooBar: {}\n    }\n  };\n\n  test('gets modifer from style object', () => {\n    const modifer = utils.getModifier(styles, 'fooBar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('gets modifer from modifers object', () => {\n    const modifer = utils.getModifier(styles.modifiers, 'fooBar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('gets modifer using dash case lookup', () => {\n    const modifer = utils.getModifier(styles, 'foo-bar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('returns default modifier if specified modifier is not found', () => {\n    const defaultModifier = {};\n    const modifer = utils.getModifier(styles, 'other', defaultModifier);\n    expect(modifer).toBe(defaultModifier);\n  });\n\n  test('returns null for falsy styleObjects', () => {\n    const modifer = utils.getModifier(null, 'fooBar');\n    expect(modifer).toBe(null);\n  });\n});\n\ndescribe('formatClassName', () => {\n  test('formats component class names', () => {\n    expect(utils.formatClassName('pf-c-foo-bar__baz')).toMatchSnapshot();\n  });\n\n  test('formats layout class names', () => {\n    expect(utils.formatClassName('pf-l-foo-bar__baz')).toMatchSnapshot();\n  });\n\n  test('formats utility class names', () => {\n    expect(utils.formatClassName('pf-u-foo-bar__baz')).toMatchSnapshot();\n  });\n});\n\ntest('getCSSClasses returns classes from css', () => {\n  const css = `\n    .foo,\n    .bar {}\n\n    p.baz {}\n\n    @media(min-width: 0px) {\n      .baz {}\n    }\n  `;\n  expect(utils.getCSSClasses(css)).toMatchSnapshot();\n});\n\ndescribe('getClassName', () => {\n  test('returns self if string', () => {\n    const style = 'foo';\n    expect(utils.getClassName(style)).toBe(style);\n  });\n\n  test('returns empty string if it is not a styleObject', () => {\n    expect(utils.getClassName({})).toBe('');\n  });\n\n  test('returns className from styleObj', () => {\n    const style = utils.createStyleDeclaration('.foo-bar', '');\n    expect(utils.getClassName(style)).toMatchSnapshot();\n  });\n});\n"],"file":"utils.test.js"}