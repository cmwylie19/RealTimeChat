{"version":3,"sources":["../../../../src/components/TopologyView/TopologyView.test.tsx"],"names":["describe","test","view","expect","toMatchSnapshot","find","length","toBe"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,IAAI,CAAC,4CAAD,EAA+C,YAAM;AACvD,QAAMC,IAAI,GAAG,mBAAM,oBAAC,mBAAD;AAAc,MAAA,SAAS,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC;AAA3C,MAAN,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,QAAMC,IAAI,GAAG,mBACX,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,cAAc,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAHlB;AAIE,MAAA,WAAW,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAJf;AAKE,MAAA,UAAU,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR;AALd,OAOE;AAAK,MAAA,EAAE,EAAC;AAAR,MAPF,CADW,CAAb;AAWAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAbG,CAAJ;AAeAH,EAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAM;AACtD,QAAMC,IAAI,GAAG,mBACX,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,cAAc,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAHlB;AAIE,MAAA,WAAW,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAJf;AAKE,MAAA,UAAU,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QALd;AAME,MAAA,OAAO,EAAE,gDANX;AAOE,MAAA,WAAW,EAAE;AAPf,OASE;AAAK,MAAA,EAAE,EAAC;AAAR,MATF,CADW,CAAb;AAaAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,yCAAV,EAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACAJ,IAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,mFAAV,EAA+FC,MAAhG,CAAN,CAA8GC,IAA9G,CAAmH,CAAnH;AACD,GAjBG,CAAJ;AAkBAN,EAAAA,IAAI,CAAC,mDAAD,EAAsD,YAAM;AAC9D,QAAMC,IAAI,GAAG,mBACX,oBAAC,mBAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,cAAc,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAHlB;AAIE,MAAA,WAAW,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QAJf;AAKE,MAAA,UAAU,EAAE;AAAK,QAAA,EAAE,EAAC;AAAR,QALd;AAME,MAAA,OAAO,EAAE,gDANX;AAOE,MAAA,WAAW;AAPb,OASE;AAAK,MAAA,EAAE,EAAC;AAAR,MATF,CADW,CAAb;AAaAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,mFAAV,EAA+FC,MAAhG,CAAN,CAA8GC,IAA9G,CAAmH,CAAnH;AACD,GAhBG,CAAJ;AAiBD,CAxDO,CAAR","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { TopologyView } from './index';\n\ndescribe('TopologyView', () => {\n  test('should display an empty topology correctly', () => {\n    const view = mount(<TopologyView className=\"my-test-class\" id=\"simple-test-id\" />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should display topology correctly', () => {\n    const view = mount(\n      <TopologyView\n        className=\"my-test-class\"\n        id=\"simple-test-id\"\n        contextToolbar={<div id=\"test-context-bar\" />}\n        viewToolbar={<div id=\"test-view-bar\" />}\n        controlBar={<div id=\"test-control-bar\" />}\n      >\n        <div id=\"test-canvas\" />\n      </TopologyView>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should display topology sidebar correctly', () => {\n    const view = mount(\n      <TopologyView\n        className=\"my-test-class\"\n        id=\"simple-test-id\"\n        contextToolbar={<div id=\"test-context-bar\" />}\n        viewToolbar={<div id=\"test-view-bar\" />}\n        controlBar={<div id=\"test-control-bar\" />}\n        sideBar={<div>Test SideBar</div>}\n        sideBarOpen={false}\n      >\n        <div id=\"test-canvas\" />\n      </TopologyView>\n    );\n    expect(view).toMatchSnapshot();\n    expect(view.find('div.pf-topology-container__with-sidebar').length).toBe(1);\n    expect(view.find('div.pf-topology-container__with-sidebar.pf-topology-container__with-sidebar--open').length).toBe(0);\n  });\n  test('should display topology w/ open sidebar correctly', () => {\n    const view = mount(\n      <TopologyView\n        className=\"my-test-class\"\n        id=\"simple-test-id\"\n        contextToolbar={<div id=\"test-context-bar\" />}\n        viewToolbar={<div id=\"test-view-bar\" />}\n        controlBar={<div id=\"test-control-bar\" />}\n        sideBar={<div>Test SideBar</div>}\n        sideBarOpen\n      >\n        <div id=\"test-canvas\" />\n      </TopologyView>\n    );\n    expect(view).toMatchSnapshot();\n    expect(view.find('div.pf-topology-container__with-sidebar.pf-topology-container__with-sidebar--open').length).toBe(1);\n  });\n});\n"],"file":"TopologyView.test.js"}