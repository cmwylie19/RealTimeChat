{"version":3,"sources":["../../../esm/components/ContextSelector/ContextSelectorMenuList.test.js"],"names":["items","React","createElement","ContextSelectorItem","key","test","view","ContextSelectorMenuList","isOpen","expect","toMatchSnapshot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAIA,QAAMA,KAAK,GAAG,CAACC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC;AACtDC,IAAAA,GAAG,EAAE;AADiD,GAAzC,EAEZ,YAFY,CAAD,EAEIH,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC;AACzDC,IAAAA,GAAG,EAAE;AADoD,GAAzC,EAEf,mBAFe,CAFJ,EAIWH,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC;AAChEC,IAAAA,GAAG,EAAE;AAD2D,GAAzC,EAEtB,oBAFsB,CAJX,EAMYH,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC;AACjEC,IAAAA,GAAG,EAAE;AAD4D,GAAzC,EAEvB,KAFuB,CANZ,EAQHH,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyC;AAClDC,IAAAA,GAAG,EAAE;AAD6C,GAAzC,EAER,OAFQ,CARG,CAAd;AAWAC,EAAAA,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjD,UAAMC,IAAI,GAAG,qBAAQL,gBAAMC,aAAN,CAAoBK,gDAApB,EAA6C;AAChEC,MAAAA,MAAM,EAAE;AADwD,KAA7C,EAElBR,KAFkB,CAAR,CAAb;AAGAS,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GALG,CAAJ;AAMAL,EAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,UAAMC,IAAI,GAAG,qBAAQL,gBAAMC,aAAN,CAAoBK,gDAApB,EAA6C;AAChEC,MAAAA,MAAM,EAAE;AADwD,KAA7C,EAElBR,KAFkB,CAAR,CAAb;AAGAS,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GALG,CAAJ","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { ContextSelectorItem } from './ContextSelectorItem';\nimport { ContextSelectorMenuList } from './ContextSelectorMenuList';\nconst items = [React.createElement(ContextSelectorItem, {\n  key: \"0\"\n}, \"My Project\"), React.createElement(ContextSelectorItem, {\n  key: \"1\"\n}, \"OpenShift Cluster\"), React.createElement(ContextSelectorItem, {\n  key: \"2\"\n}, \"Production Ansible\"), React.createElement(ContextSelectorItem, {\n  key: \"3\"\n}, \"AWS\"), React.createElement(ContextSelectorItem, {\n  key: \"4\"\n}, \"Azure\")];\ntest('Renders ContextSelectorMenuList open', () => {\n  const view = shallow(React.createElement(ContextSelectorMenuList, {\n    isOpen: false\n  }, items));\n  expect(view).toMatchSnapshot();\n});\ntest('Renders ContextSelectorMenuList closed', () => {\n  const view = shallow(React.createElement(ContextSelectorMenuList, {\n    isOpen: false\n  }, items));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=ContextSelectorMenuList.test.js.map"],"file":"ContextSelectorMenuList.test.js"}