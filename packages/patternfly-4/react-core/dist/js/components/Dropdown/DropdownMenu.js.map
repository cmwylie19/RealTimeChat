{"version":3,"sources":["../../../../src/components/Dropdown/DropdownMenu.tsx"],"names":["DropdownMenu","index","position","custom","refsCollection","props","isGrouped","React","Children","toArray","children","node","isDisabled","isSeparator","innerNode","childNodes","length","getAttribute","ReactDOM","findDOMNode","autoFocus","component","focusTarget","find","ref","hasAttribute","focus","searchedFocusTarget","map","groupedChildren","group","cloneElement","constructor","Array","option","child","className","isOpen","openedOnEnter","keyHandler","childKeyHandler","sendRef","onSelect","menuClass","DropdownPosition","right","styles","modifiers","alignRight","event","menuComponent","MenuComponent","extendChildren","Component","left"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nimport { KEY_CODES, KEYHANDLER_DIRECTION } from '../../helpers/constants';\n\nexport interface DropdownMenuProps {\n  /** Anything which can be rendered as dropdown items */\n  children?: React.ReactNode;\n  /** Classess applied to root element of dropdown menu */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Flag to indicate if menu should be opened on enter */\n  openedOnEnter?: boolean;\n  /** Flag to indicate if the first dropdown item should gain initial focus, set false when adding\n   * a specific auto-focus item (like a current selection) otherwise leave as true\n   */\n  autoFocus?: boolean;\n  /** Indicates which component will be used as dropdown menu */\n  component?: React.ReactNode;\n  /** Indicates where menu will be alligned horizontally */\n  position?: DropdownPosition | 'right' | 'left';\n  /** Flag to indicate if menu is grouped */\n  isGrouped?: boolean;\n}\n\nexport interface DropdownMenuItem extends React.HTMLAttributes<any> {\n  isDisabled: boolean;\n  disabled: boolean;\n  isHovered: boolean;\n  ref: HTMLElement;\n}\n\nexport class DropdownMenu extends React.Component<DropdownMenuProps> {\n  refsCollection = [] as HTMLElement[];\n\n  static defaultProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false\n  };\n\n  componentDidMount() {\n    const { autoFocus } = this.props;\n    if (this.props.component === 'ul' && autoFocus) {\n      const focusTarget = this.refsCollection.find(\n        (ref) => {\n          return ref && !ref.hasAttribute('disabled')\n        }\n      );\n      if (focusTarget) {\n        if (focusTarget.focus) {\n          focusTarget.focus();\n        } else {\n          const searchedFocusTarget = ReactDOM.findDOMNode(focusTarget) as HTMLElement;\n          searchedFocusTarget.focus();\n        }\n      } else if (focusTarget) {\n         // eslint-disable-line react/no-find-dom-node\n      }\n    }\n  }\n\n  childKeyHandler = (index: number, position: string, custom = false) => {\n    keyHandler(\n      index,\n      position,\n      this.refsCollection,\n      this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children),\n      custom\n    );\n  }\n\n  sendRef = (index: number, node: any, isDisabled: boolean, isSeparator: boolean) => {\n    // since the ref is on the outer <li>, target the inner child for focusing and keyboard navigation\n    const innerNode = node.childNodes && node.childNodes.length ? node.childNodes[0] : node;\n    if (!innerNode.getAttribute) {\n      // eslint-disable-line react/no-find-dom-node\n      this.refsCollection[index] = ReactDOM.findDOMNode(innerNode) as HTMLElement;\n    } else if (isDisabled || isSeparator) {\n      this.refsCollection[index] = null;\n    } else {\n      this.refsCollection[index] = innerNode;\n    }\n  }\n\n  extendChildren() {\n    const { children, isGrouped } = this.props;\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, (groupedChildren) => {\n          const group = groupedChildren as React.ReactElement<{children: React.ReactNode}>;\n          return React.cloneElement(group, {\n            ...(group.props && group.props.children && {\n              children:\n                (group.props.children.constructor === Array &&\n                  React.Children.map(group.props.children as React.ReactElement<any>,\n                    (option: React.ReactElement<any>) =>\n                      React.cloneElement(option, {\n                        index: index++\n                      })\n                  )) ||\n                React.cloneElement(group.props.children as React.ReactElement<any>, {\n                  index: index++\n                })\n            })\n          });\n      });\n    }\n    return React.Children.map(children, (child, index) =>\n      React.cloneElement(child as React.ReactElement<any>, {\n        index\n      })\n    );\n  }\n\n  render() {\n    const {\n      className,\n      isOpen,\n      position,\n      children,\n      component,\n      isGrouped,\n      openedOnEnter,\n      ...props\n    } = this.props;\n    return (\n      <DropdownArrowContext.Provider\n        value={{\n          keyHandler: this.childKeyHandler,\n          sendRef: this.sendRef\n        }}\n      >\n        {component === 'div' ? (\n          <DropdownContext.Consumer>\n            {({ onSelect, menuClass }) => (\n              <div\n                className={css(\n                  menuClass,\n                  position === DropdownPosition.right && styles.modifiers.alignRight,\n                  className\n                )}\n                hidden={!isOpen}\n                onClick={(event) => onSelect && onSelect(event)}\n              >\n                {children}\n              </div>\n            )}\n          </DropdownContext.Consumer>\n        ) : (\n          (isGrouped && (\n            <DropdownContext.Consumer>\n              {({ menuClass, menuComponent }) => {\n                const MenuComponent = (menuComponent || 'div') as any;\n                return (\n                  <MenuComponent\n                    {...props}\n                    className={css(\n                      menuClass,\n                      position === DropdownPosition.right && styles.modifiers.alignRight,\n                      className\n                    )}\n                    hidden={!isOpen}\n                    role=\"menu\"\n                  >\n                    {this.extendChildren()}\n                  </MenuComponent>\n                );\n              }}\n            </DropdownContext.Consumer>\n          )) || (\n            <DropdownContext.Consumer>\n              {({ menuClass, menuComponent }) => {\n                const MenuComponent = (menuComponent || component) as any;\n                return (\n                  <MenuComponent\n                    {...props}\n                    className={css(\n                      menuClass,\n                      position === DropdownPosition.right && styles.modifiers.alignRight,\n                      className\n                    )}\n                    hidden={!isOpen}\n                    role=\"menu\"\n                  >\n                    {this.extendChildren()}\n                  </MenuComponent>\n                );\n              }}\n            </DropdownContext.Consumer>\n          )\n        )}\n      </DropdownArrowContext.Provider>\n    );\n  }\n}\n"],"file":"DropdownMenu.js"}