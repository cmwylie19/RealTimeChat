{"version":3,"sources":["../../../../src/components/ChipGroup/ChipGroup.test.tsx"],"names":["describe","test","view","expect","toMatchSnapshot","overflowButton","find","text","toBe","simulate","html","toBeNull"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1BC,EAAAA,IAAI,CAAC,oBAAD,EAAuB,YAAM;AAC/B,QAAMC,IAAI,GAAG,qBACX,gCAAC,gBAAD,QACE,gCAAC,WAAD,cADF,CADW,CAAb;AAMAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GARG,CAAJ;AAUAH,EAAAA,IAAI,CAAC,yBAAD,EAA4B,YAAM;AACpC,QAAMC,IAAI,GAAG,qBACX,gCAAC,gBAAD;AAAW,MAAA,WAAW;AAAtB,OACE,gCAAC,2BAAD,QACE,gCAAC,WAAD,cADF,CADF,CADW,CAAb;AAOAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GATG,CAAJ;AAWAH,EAAAA,IAAI,CAAC,qBAAD,EAAwB,YAAM;AAChC,QAAMC,IAAI,GAAG,mBACX,gCAAC,gBAAD,QACE,gCAAC,WAAD,YADF,EAEE,gCAAC,WAAD,YAFF,EAGE,gCAAC,WAAD,YAHF,EAIE,gCAAC,WAAD,YAJF,CADW,CAAb;AAQA,QAAMG,cAAc,GAAGH,IAAI,CAACI,IAAL,CAAU,iCAAV,CAAvB;AACAH,IAAAA,MAAM,CAACE,cAAc,CAACE,IAAf,EAAD,CAAN,CAA8BC,IAA9B,CAAmC,QAAnC;AACAH,IAAAA,cAAc,CAACI,QAAf,CAAwB,OAAxB;AACAN,IAAAA,MAAM,CAACE,cAAc,CAACE,IAAf,EAAD,CAAN,CAA8BC,IAA9B,CAAmC,WAAnC;AACD,GAbG,CAAJ;AAeAP,EAAAA,IAAI,CAAC,kDAAD,EAAqD,YAAM;AAC7D,QAAMC,IAAI,GAAG,qBAAQ,gCAAC,gBAAD,OAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAI,CAACQ,IAAL,EAAD,CAAN,CAAoBC,QAApB;AACD,GAHG,CAAJ;AAID,CAzCO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from './index';\n\ndescribe('ChipGroup', () => {\n  test('chip group default', () => {\n    const view = shallow(\n      <ChipGroup>\n        <Chip>1.1</Chip>\n      </ChipGroup>\n    );\n\n    expect(view).toMatchSnapshot();\n  });\n\n  test('chip group with toolbar', () => {\n    const view = shallow(\n      <ChipGroup withToolbar>\n        <ChipGroupToolbarItem>\n          <Chip>1.1</Chip>\n        </ChipGroupToolbarItem>\n      </ChipGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('chip group expanded', () => {\n    const view = mount(\n      <ChipGroup>\n        <Chip>1</Chip>\n        <Chip>2</Chip>\n        <Chip>3</Chip>\n        <Chip>4</Chip>\n      </ChipGroup>\n    );\n    const overflowButton = view.find('.pf-m-overflow .pf-c-chip__text');\n    expect(overflowButton.text()).toBe('1 more');\n    overflowButton.simulate('click');\n    expect(overflowButton.text()).toBe('Show Less');\n  });\n\n  test('chip group will not render if no children passed', () => {\n    const view = shallow(<ChipGroup />);\n    expect(view.html()).toBeNull();\n  });\n});\n"],"file":"ChipGroup.test.js"}