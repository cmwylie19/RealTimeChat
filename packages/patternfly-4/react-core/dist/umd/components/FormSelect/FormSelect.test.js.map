{"version":3,"sources":["../../../esm/components/FormSelect/FormSelect.test.js"],"names":["props","options","value","label","disabled","groupedProps","groups","groupLabel","test","view","React","createElement","FormSelect","map","option","index","FormSelectOption","isDisabled","key","expect","toMatchSnapshot","group","FormSelectOptionGroup","i","myMock","jest","fn","global","console","error","not","toBeCalled","id","isValid","required","newValue","event","currentTarget","onChange","find","simulate","toBeCalledWith"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAMA,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAE,CAAC;AACRC,MAAAA,KAAK,EAAE,eADC;AAERC,MAAAA,KAAK,EAAE,eAFC;AAGRC,MAAAA,QAAQ,EAAE;AAHF,KAAD,EAIN;AACDF,MAAAA,KAAK,EAAE,IADN;AAEDC,MAAAA,KAAK,EAAE,IAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KAJM,EAQN;AACDF,MAAAA,KAAK,EAAE,MADN;AAEDC,MAAAA,KAAK,EAAE,MAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KARM,EAYN;AACDF,MAAAA,KAAK,EAAE,KADN;AAEDC,MAAAA,KAAK,EAAE,KAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KAZM,EAgBN;AACDF,MAAAA,KAAK,EAAE,IADN;AAEDC,MAAAA,KAAK,EAAE,IAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KAhBM,EAoBN;AACDF,MAAAA,KAAK,EAAE,IADN;AAEDC,MAAAA,KAAK,EAAE,IAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KApBM,EAwBN;AACDF,MAAAA,KAAK,EAAE,OADN;AAEDC,MAAAA,KAAK,EAAE,OAFN;AAGDC,MAAAA,QAAQ,EAAE;AAHT,KAxBM,CADG;AA8BZF,IAAAA,KAAK,EAAE;AA9BK,GAAd;AAgCA,QAAMG,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CAAC;AACPC,MAAAA,UAAU,EAAE,QADL;AAEPH,MAAAA,QAAQ,EAAE,KAFH;AAGPH,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAE,GADC;AAERC,QAAAA,KAAK,EAAE,kBAFC;AAGRC,QAAAA,QAAQ,EAAE;AAHF,OAAD,EAIN;AACDF,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,KAAK,EAAE,sCAFN;AAGDC,QAAAA,QAAQ,EAAE;AAHT,OAJM;AAHF,KAAD,EAYL;AACDG,MAAAA,UAAU,EAAE,QADX;AAEDH,MAAAA,QAAQ,EAAE,KAFT;AAGDH,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAE,GADC;AAERC,QAAAA,KAAK,EAAE,kBAFC;AAGRC,QAAAA,QAAQ,EAAE;AAHF,OAAD,EAIN;AACDF,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,KAAK,EAAE,mBAFN;AAGDC,QAAAA,QAAQ,EAAE;AAHT,OAJM;AAHR,KAZK,EAwBL;AACDG,MAAAA,UAAU,EAAE,QADX;AAEDH,MAAAA,QAAQ,EAAE,IAFT;AAGDH,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAE,GADC;AAERC,QAAAA,KAAK,EAAE,kBAFC;AAGRC,QAAAA,QAAQ,EAAE;AAHF,OAAD,EAIN;AACDF,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,KAAK,EAAE,kBAFN;AAGDC,QAAAA,QAAQ,EAAE;AAHT,OAJM;AAHR,KAxBK,CADW;AAsCnBF,IAAAA,KAAK,EAAE;AAtCY,GAArB;AAwCAM,EAAAA,IAAI,CAAC,yBAAD,EAA4B,MAAM;AACpC,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDV,MAAAA,KAAK,EAAEF,KAAK,CAACE,KADsC;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBF,KAAK,CAACC,OAAN,CAAcY,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAAmBL,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AAC5EC,MAAAA,UAAU,EAAEH,MAAM,CAACV,QADyD;AAE5Ec,MAAAA,GAAG,EAAEH,KAFuE;AAG5Eb,MAAAA,KAAK,EAAEY,MAAM,CAACZ,KAH8D;AAI5EC,MAAAA,KAAK,EAAEW,MAAM,CAACX;AAJ8D,KAAtC,CAArC,CAHkB,CAAR,CAAb;AASAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACD,GAXG,CAAJ;AAYAZ,EAAAA,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDV,MAAAA,KAAK,EAAEG,YAAY,CAACH,KAD+B;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBG,YAAY,CAACC,MAAb,CAAoBO,GAApB,CAAwB,CAACQ,KAAD,EAAQN,KAAR,KAAkBL,gBAAMC,aAAN,CAAoBW,4CAApB,EAA2C;AACtFL,MAAAA,UAAU,EAAEI,KAAK,CAACjB,QADoE;AAEtFc,MAAAA,GAAG,EAAEH,KAFiF;AAGtFZ,MAAAA,KAAK,EAAEkB,KAAK,CAACd;AAHyE,KAA3C,EAI1Cc,KAAK,CAACpB,OAAN,CAAcY,GAAd,CAAkB,CAACC,MAAD,EAASS,CAAT,KAAeb,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACxEC,MAAAA,UAAU,EAAEH,MAAM,CAACV,QADqD;AAExEc,MAAAA,GAAG,EAAEK,CAFmE;AAGxErB,MAAAA,KAAK,EAAEY,MAAM,CAACZ,KAH0D;AAIxEC,MAAAA,KAAK,EAAEW,MAAM,CAACX;AAJ0D,KAAtC,CAAjC,CAJ0C,CAA1C,CAHkB,CAAR,CAAb;AAaAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACD,GAfG,CAAJ;AAgBAZ,EAAAA,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDK,MAAAA,UAAU,EAAE,IADuC;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBP,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAHkB,CAAR,CAAb;AAQAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACD,GAVG,CAAJ;AAWAZ,EAAAA,IAAI,CAAC,kEAAD,EAAqE,MAAM;AAC7E,UAAMgB,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,MAAAA,KAAK,EAAEL;AADQ,KAAjB;AAGA,UAAMf,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnD,oBAAc;AADqC,KAAhC,EAElBF,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAFkB,CAAR,CAAb;AAOAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACAD,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeM,GAAf,CAAmBC,UAAnB;AACD,GAdG,CAAJ;AAeAvB,EAAAA,IAAI,CAAC,0DAAD,EAA6D,MAAM;AACrE,UAAMgB,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,MAAAA,KAAK,EAAEL;AADQ,KAAjB;AAGA,UAAMf,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDoB,MAAAA,EAAE,EAAE;AAD+C,KAAhC,EAElBtB,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAFkB,CAAR,CAAb;AAOAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACAD,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeM,GAAf,CAAmBC,UAAnB;AACD,GAdG,CAAJ;AAeAvB,EAAAA,IAAI,CAAC,mEAAD,EAAsE,MAAM;AAC9E,UAAMgB,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,MAAAA,KAAK,EAAEL;AADQ,KAAjB;AAGA,UAAMf,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC,IAAhC,EAAsCF,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AAC/FE,MAAAA,GAAG,EAAE,CAD0F;AAE/FhB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFuE;AAG/FC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHuE,KAAtC,CAAtC,CAAR,CAAb;AAKAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACAD,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeO,UAAf;AACD,GAZG,CAAJ;AAaAvB,EAAAA,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDqB,MAAAA,OAAO,EAAE,KAD0C;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBvB,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAHkB,CAAR,CAAb;AAQAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACD,GAVG,CAAJ;AAWAZ,EAAAA,IAAI,CAAC,2BAAD,EAA8B,MAAM;AACtC,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDsB,MAAAA,QAAQ,EAAE,IADyC;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBxB,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAHkB,CAAR,CAAb;AAQAgB,IAAAA,MAAM,CAACV,IAAD,CAAN,CAAaW,eAAb;AACD,GAVG,CAAJ;AAWAZ,EAAAA,IAAI,CAAC,uDAAD,EAA0D,MAAM;AAClE,UAAMgB,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACA,UAAMS,QAAQ,GAAG,CAAjB;AACA,UAAMC,KAAK,GAAG;AACZC,MAAAA,aAAa,EAAE;AACbnC,QAAAA,KAAK,EAAEiC;AADM;AADH,KAAd;AAKA,UAAM1B,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnD0B,MAAAA,QAAQ,EAAEd,MADyC;AAEnD,oBAAc;AAFqC,KAAhC,EAGlBd,gBAAMC,aAAN,CAAoBK,kCAApB,EAAsC;AACvCE,MAAAA,GAAG,EAAE,CADkC;AAEvChB,MAAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,KAFe;AAGvCC,MAAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHe,KAAtC,CAHkB,CAAR,CAAb;AAQAM,IAAAA,IAAI,CAAC8B,IAAL,CAAU,QAAV,EAAoBC,QAApB,CAA6B,QAA7B,EAAuCJ,KAAvC;AACAjB,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeiB,cAAf,CAA8BN,QAA9B,EAAwCC,KAAxC;AACD,GAlBG,CAAJ","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { FormSelect } from './FormSelect';\nimport { FormSelectOption } from './FormSelectOption';\nimport { FormSelectOptionGroup } from './FormSelectOptionGroup';\nconst props = {\n  options: [{\n    value: 'please choose',\n    label: 'Please Choose',\n    disabled: true\n  }, {\n    value: 'mr',\n    label: 'Mr',\n    disabled: false\n  }, {\n    value: 'miss',\n    label: 'Miss',\n    disabled: false\n  }, {\n    value: 'mrs',\n    label: 'Mrs',\n    disabled: false\n  }, {\n    value: 'ms',\n    label: 'Ms',\n    disabled: false\n  }, {\n    value: 'dr',\n    label: 'Dr',\n    disabled: false\n  }, {\n    value: 'other',\n    label: 'Other',\n    disabled: true\n  }],\n  value: 'mrs'\n};\nconst groupedProps = {\n  groups: [{\n    groupLabel: 'Group1',\n    disabled: false,\n    options: [{\n      value: '1',\n      label: 'The First Option',\n      disabled: false\n    }, {\n      value: '2',\n      label: 'Second option is selected by default',\n      disabled: false\n    }]\n  }, {\n    groupLabel: 'Group2',\n    disabled: false,\n    options: [{\n      value: '3',\n      label: 'The Third Option',\n      disabled: false\n    }, {\n      value: '4',\n      label: 'The Fourth option',\n      disabled: false\n    }]\n  }, {\n    groupLabel: 'Group3',\n    disabled: true,\n    options: [{\n      value: '5',\n      label: 'The Fifth Option',\n      disabled: false\n    }, {\n      value: '6',\n      label: 'The Sixth option',\n      disabled: false\n    }]\n  }],\n  value: '2'\n};\ntest('Simple FormSelect input', () => {\n  const view = shallow(React.createElement(FormSelect, {\n    value: props.value,\n    \"aria-label\": \"simple FormSelect\"\n  }, props.options.map((option, index) => React.createElement(FormSelectOption, {\n    isDisabled: option.disabled,\n    key: index,\n    value: option.value,\n    label: option.label\n  }))));\n  expect(view).toMatchSnapshot();\n});\ntest('Grouped FormSelect input', () => {\n  const view = shallow(React.createElement(FormSelect, {\n    value: groupedProps.value,\n    \"aria-label\": \" grouped FormSelect\"\n  }, groupedProps.groups.map((group, index) => React.createElement(FormSelectOptionGroup, {\n    isDisabled: group.disabled,\n    key: index,\n    label: group.groupLabel\n  }, group.options.map((option, i) => React.createElement(FormSelectOption, {\n    isDisabled: option.disabled,\n    key: i,\n    value: option.value,\n    label: option.label\n  }))))));\n  expect(view).toMatchSnapshot();\n});\ntest('Disabled FormSelect input ', () => {\n  const view = shallow(React.createElement(FormSelect, {\n    isDisabled: true,\n    \"aria-label\": \"disabled  FormSelect\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('FormSelect input with aria-label does not generate console error', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  const view = shallow(React.createElement(FormSelect, {\n    \"aria-label\": \"FormSelect with aria-label\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n  expect(myMock).not.toBeCalled();\n});\ntest('FormSelect input with id does not generate console error', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  const view = shallow(React.createElement(FormSelect, {\n    id: \"id\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n  expect(myMock).not.toBeCalled();\n});\ntest('FormSelect input with no aria-label or id generates console error', () => {\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  const view = shallow(React.createElement(FormSelect, null, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n  expect(myMock).toBeCalled();\n});\ntest('invalid FormSelect input', () => {\n  const view = shallow(React.createElement(FormSelect, {\n    isValid: false,\n    \"aria-label\": \"invalid FormSelect\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('required FormSelect input', () => {\n  const view = shallow(React.createElement(FormSelect, {\n    required: true,\n    \"aria-label\": \"required FormSelect\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  expect(view).toMatchSnapshot();\n});\ntest('FormSelect passes value and event to onChange handler', () => {\n  const myMock = jest.fn();\n  const newValue = 1;\n  const event = {\n    currentTarget: {\n      value: newValue\n    }\n  };\n  const view = shallow(React.createElement(FormSelect, {\n    onChange: myMock,\n    \"aria-label\": \"onchange FormSelect\"\n  }, React.createElement(FormSelectOption, {\n    key: 1,\n    value: props.options[1].value,\n    label: props.options[1].label\n  })));\n  view.find('select').simulate('change', event);\n  expect(myMock).toBeCalledWith(newValue, event);\n});\n//# sourceMappingURL=FormSelect.test.js.map"],"file":"FormSelect.test.js"}