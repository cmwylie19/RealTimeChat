{"version":3,"sources":["../../../../src/components/DataList/DataListCell.tsx"],"names":["React","css","getModifier","styles","DataListCell","children","className","width","isFilled","alignRight","isIcon","props","dataListCell","modifiers","noFill","icon"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,0BAAjC;AACA,OAAOC,MAAP,MAAmB,4DAAnB;AAkBA,OAAO,MAAMC,YAAwD,GAAG;AAAA,MAAC;AACvEC,IAAAA,QAAQ,GAAG,IAD4D;AAEvEC,IAAAA,SAAS,GAAG,EAF2D;AAGvEC,IAAAA,KAAK,GAAG,CAH+D;AAIvEC,IAAAA,QAAQ,GAAG,IAJ4D;AAKvEC,IAAAA,UAAU,GAAG,KAL0D;AAMvEC,IAAAA,MAAM,GAAG;AAN8D,GAAD;AAAA,MAOnEC,KAPmE;;AAAA,SAStE;AACE,IAAA,SAAS,EAAEV,GAAG,CACZE,MAAM,CAACS,YADK,EAEZL,KAAK,GAAG,CAAR,IAAaL,WAAW,CAACC,MAAD,EAAU,QAAOI,KAAM,EAAvB,EAA0B,EAA1B,CAFZ,EAGZ,CAACC,QAAD,IAAaL,MAAM,CAACU,SAAP,CAAiBC,MAHlB,EAIZL,UAAU,IAAIN,MAAM,CAACU,SAAP,CAAiBJ,UAJnB,EAKZC,MAAM,IAAIP,MAAM,CAACU,SAAP,CAAiBE,IALf,EAMZT,SANY;AADhB,KASMK,KATN,GAWGN,QAXH,CATsE;AAAA,CAAjE;;AAbLA,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,K,aAAQ,C,EAAI,C,EAAI,C,EAAI,C,EAAI,C;AAExBC,EAAAA,Q;AAEAC,EAAAA,U;AAEAC,EAAAA,M","sourcesContent":["import * as React from 'react';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface DataListCellProps extends Omit<React.HTMLProps<HTMLDivElement>, 'width'> {\n  /** Content rendered inside the DataList cell */\n  children?: React.ReactNode;\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Width (from 1-5) to the DataList cell */\n  width?: 1 | 2 | 3 | 4 | 5;\n  /** Enables the body Content to fill the height of the card */\n  isFilled?: boolean;\n  /**  Aligns the cell content to the right of its parent. */\n  alignRight?: boolean;\n  /** Set to true if the cell content is an Icon */\n  isIcon?: boolean;\n}\n\nexport const DataListCell: React.FunctionComponent<DataListCellProps> = ({\n  children = null,\n  className = '',\n  width = 1,\n  isFilled = true,\n  alignRight = false,\n  isIcon = false,\n  ...props\n}: DataListCellProps) => (\n  <div\n    className={css(\n      styles.dataListCell,\n      width > 1 && getModifier(styles, `flex_${width}`, ''),\n      !isFilled && styles.modifiers.noFill,\n      alignRight && styles.modifiers.alignRight,\n      isIcon && styles.modifiers.icon,\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n"],"file":"DataListCell.js"}