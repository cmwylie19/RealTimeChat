{"version":3,"sources":["../../../../src/components/Progress/ProgressContainer.tsx"],"names":["ProgressMeasureLocation","ProgressVariant","variantToIcon","danger","TimesCircleIcon","success","CheckCircleIcon","ProgressContainer","ariaProps","value","title","parentId","label","variant","info","measureLocation","top","StatusIcon","hasOwnProperty","progressStyle","progressDescription","progressStatus","outside","progressMeasure","progressStatusIcon","inside"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAGYA,uB;;;WAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;GAAAA,uB,uCAAAA,uB;;IAOAC,e;;;WAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,+BAAAA,e;;AAuBZ,IAAMC,aAAqD,GAAG;AAC5DC,EAAAA,MAAM,EAAEC,2BADoD;AAE5DC,EAAAA,OAAO,EAAEC;AAFmD,CAA9D;;AAKO,IAAMC,iBAAkE,GAAG,SAArEA,iBAAqE,OAQpD;AAAA,MAP5BC,SAO4B,QAP5BA,SAO4B;AAAA,MAN5BC,KAM4B,QAN5BA,KAM4B;AAAA,wBAL5BC,KAK4B;AAAA,MAL5BA,KAK4B,2BALpB,EAKoB;AAAA,MAJ5BC,QAI4B,QAJ5BA,QAI4B;AAAA,wBAH5BC,KAG4B;AAAA,MAH5BA,KAG4B,2BAHpB,IAGoB;AAAA,0BAF5BC,OAE4B;AAAA,MAF5BA,OAE4B,6BAFlBZ,eAAe,CAACa,IAEE;AAAA,kCAD5BC,eAC4B;AAAA,MAD5BA,eAC4B,qCADVf,uBAAuB,CAACgB,GACd;AAC5B,MAAMC,UAAU,GAAGf,aAAa,CAACgB,cAAd,CAA6BL,OAA7B,KAAyCX,aAAa,CAACW,OAAD,CAAzE;AACA,SACE,oBAAC,KAAD,CAAO,QAAP,QACE;AAAK,IAAA,SAAS,EAAE,sBAAIM,qBAAcC,mBAAlB,CAAhB;AAAwD,IAAA,EAAE,YAAKT,QAAL;AAA1D,KACGD,KADH,CADF,EAIE;AAAK,IAAA,SAAS,EAAE,sBAAIS,qBAAcE,cAAlB;AAAhB,KACG,CAACN,eAAe,KAAKf,uBAAuB,CAACgB,GAA5C,IAAmDD,eAAe,KAAKf,uBAAuB,CAACsB,OAAhG,KACC;AAAM,IAAA,SAAS,EAAE,sBAAIH,qBAAcI,eAAlB;AAAjB,KAAsDX,KAAK,cAAOH,KAAP,MAA3D,CAFJ,EAIGP,aAAa,CAACgB,cAAd,CAA6BL,OAA7B,KACC;AAAM,IAAA,SAAS,EAAE,sBAAIM,qBAAcK,kBAAlB;AAAjB,KACE,oBAAC,UAAD,OADF,CALJ,CAJF,EAcE,oBAAC,wBAAD;AAAa,IAAA,SAAS,EAAEhB,SAAxB;AAAmC,IAAA,KAAK,EAAEC;AAA1C,KACGM,eAAe,KAAKf,uBAAuB,CAACyB,MAA5C,cAAyDhB,KAAzD,MADH,CAdF,CADF;AAoBD,CA9BM;;;;AApBLD,EAAAA,S;AAEAG,EAAAA,Q;AAEAD,EAAAA,K;AAEAE,EAAAA,K;AAEAC,EAAAA,O,+BAAU,Q,EAAW,S,EAAY,M;AAEjCE,EAAAA,e,+BAAkB,S,EAAY,Q,EAAW,K,EAAQ,M;AAEjDN,EAAAA,K","sourcesContent":["import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { CheckCircleIcon, TimesCircleIcon } from '@patternfly/react-icons';\nimport { AriaProps, ProgressBar } from './ProgressBar';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport enum ProgressMeasureLocation {\n  outside = 'outside',\n  inside = 'inside',\n  top = 'top',\n  none = 'none'\n}\n\nexport enum ProgressVariant {\n  danger = 'danger',\n  success = 'success',\n  info = 'info'\n}\n\nexport interface ProgressContainerProps extends Omit<React.HTMLProps<HTMLDivElement>, 'label'> {\n  /** Properties needed for aria support */\n  ariaProps: AriaProps;\n  /** Progress component DOM ID. */\n  parentId: string;\n  /** Progress title. */\n  title?: string;\n  /** Label to indicate what progress is showing. */\n  label?: React.ReactNode;\n  /** Type of progress status. */\n  variant?: 'danger' | 'success' | 'info';\n  /** Location of progress value. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Actual progress value. */\n  value: number;\n}\n\nconst variantToIcon: {[k: string]: React.FunctionComponent} = {\n  danger: TimesCircleIcon,\n  success: CheckCircleIcon\n};\n\nexport const ProgressContainer: React.FunctionComponent<ProgressContainerProps> = ({\n  ariaProps,\n  value,\n  title = '',\n  parentId,\n  label = null,\n  variant = ProgressVariant.info,\n  measureLocation = ProgressMeasureLocation.top\n}: ProgressContainerProps) => {\n  const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n  return (\n    <React.Fragment>\n      <div className={css(progressStyle.progressDescription)} id={`${parentId}-description`}>\n        {title}\n      </div>\n      <div className={css(progressStyle.progressStatus)}>\n        {(measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && (\n          <span className={css(progressStyle.progressMeasure)}>{label || `${value}%`}</span>\n        )}\n        {variantToIcon.hasOwnProperty(variant) && (\n          <span className={css(progressStyle.progressStatusIcon)}>\n            <StatusIcon />\n          </span>\n        )}\n      </div>\n      <ProgressBar ariaProps={ariaProps} value={value}>\n        {measureLocation === ProgressMeasureLocation.inside && `${value}%`}\n      </ProgressBar>\n    </React.Fragment>\n  );\n};\n"],"file":"ProgressContainer.js"}