{"version":3,"sources":["../../../../src/components/Table/Table.tsx"],"names":["React","styles","stylesGrid","DropdownPosition","DropdownDirection","css","getModifier","Provider","BodyCell","HeaderCell","RowWrapper","BodyWrapper","calculateColumns","TableGridBreakpoint","TableVariant","SortByDirection","TableContext","createContext","headerData","headerRows","rows","Table","Component","row","selected","undefined","length","every","isSelected","hasOwnProperty","showSelect","render","props","ariaLabel","caption","header","className","gridBreakPoint","onSort","onSelect","canSelectAll","sortBy","children","actions","actionResolver","areActionsDisabled","onCollapse","onExpand","rowLabeledBy","dropdownPosition","dropdownDirection","contentId","expandId","variant","cells","bodyWrapper","rowWrapper","borders","role","console","error","allRowsSelected","areAllRowsSelected","firstUserColumnIndex","filter","callback","body","wrapper","cell","table","compact","modifiers","expandable","noBorderRows","index","direction","isSeparator","itemKey","title","onClick","isOpen","parent","compoundParent","fullWidth","noPadding","isExpanded","isFirstVisible","isLastVisible","transforms","cellTransforms","columnTransforms","formatters","cellFormatters","data","right","down","gridMd"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport stylesGrid from '@patternfly/react-styles/css/components/Table/table-grid';\nimport { DropdownPosition, DropdownDirection, DropdownItemProps, Omit } from '@patternfly/react-core';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport { Provider } from './base';\nimport { BodyCell } from './BodyCell';\nimport { HeaderCell } from './HeaderCell';\nimport { RowWrapper } from './RowWrapper';\nimport { BodyWrapper } from './BodyWrapper';\nimport { calculateColumns } from './utils/headerUtils';\nimport { formatterValueType, ColumnType, RowType, RowKeyType, ColumnsType } from './base';\n\nexport enum TableGridBreakpoint {\n  none = '',\n  grid = 'grid',\n  gridMd = 'grid-md',\n  gridLg = 'grid-lg',\n  gridXl = 'grid-xl',\n  grid2xl = 'grid-2xl'\n}\n\nexport enum TableVariant {\n  compact = 'compact'\n}\n\nexport type OnSort = (event: React.MouseEvent, columnIndex: number, sortByDirection: SortByDirection, extraData: IExtraColumnData) => void;\nexport type OnCollapse = (event: React.MouseEvent, rowIndex: number, isOpen: boolean, rowData: IRowData, extraData: IExtraData) => void;\nexport type OnExpand = (event: React.MouseEvent, rowIndex: number, colIndex: number, isOpen: boolean, rowData: IRowData, extraData: IExtraData) => void;\nexport type OnSelect = (event: React.MouseEvent, isSelected: boolean, rowIndex: number, rowData: IRowData, extraData: IExtraData) => void;\n\nexport enum SortByDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n\nexport interface IHeaderRow extends ColumnType {\n}\n\nexport interface IRowData extends IRow {\n  disableActions?: boolean;\n}\n\nexport interface IColumn {\n  extraParams: {\n    sortBy?: ISortBy;\n    onSort?: OnSort;\n    onCollapse?: OnCollapse;\n    onExpand?: OnExpand;\n    onSelect?: OnSelect;\n    rowLabeledBy?: string;\n    expandId?: string;\n    contentId?: string;\n    dropdownPosition?: DropdownPosition;\n    dropdownDirection?: DropdownDirection;\n    allRowsSelected?: boolean;\n  };\n}\n\nexport interface IExtraRowData {\n  rowIndex?: number;\n  rowKey?: RowKeyType;\n}\n\nexport interface IExtraColumnData {\n  columnIndex?: number;\n  column?: IColumn;\n  property?: string;\n}\n\nexport interface IExtraData extends IExtraColumnData, IExtraRowData {\n}\n\nexport interface IExtra extends IExtraData {\n  rowData?: IRowData;\n}\n\nexport type IFormatterValueType = formatterValueType & {\n  title?: string | React.ReactNode;\n  props?: any;\n};\n\nexport interface ISortBy {\n  index?: number;\n  direction?: 'asc' | 'desc';\n}\n\nexport interface IAction extends Omit<DropdownItemProps, 'title' | 'onClick'> {\n  isSeparator?: boolean;\n  itemKey?: string;\n  title?: string | React.ReactNode;\n  onClick: (event: React.MouseEvent, rowIndex: number, rowData: IRowData, extraData: IExtraData) => void;\n}\n\nexport interface ISeparator extends IAction {\n  isSeparator: boolean;\n}\n\nexport type IActions = (IAction | ISeparator)[];\nexport type IActionsResolver = (rowData: IRowData, extraData: IExtraData) => (IAction | ISeparator)[];\nexport type IAreActionsDisabled = (rowData: IRowData, extraData: IExtraData) => boolean;\n\n// to be removed in future, this interface is no longer accurate\nexport interface IDecorator extends React.HTMLProps<HTMLElement> {\n  isVisible: boolean;\n  children?: React.ReactNode;\n}\n\nexport type ITransforms = ((\n  label?: IFormatterValueType,\n  rowData?: IRowData,\n  columnIndex?: number,\n  column?: IColumn,\n  property?: string,\n  rowIndex?: number,\n  rowKey?: RowKeyType ) => { className: string; 'aria-sort': string; children: React.ReactNode; })[];\n\nexport type IFormatters = ((\n    data?: IFormatterValueType,\n    rowData?: IRowData,\n    columnIndex?: number,\n    column?: IColumn,\n    property?: string,\n    rowIndex?: number,\n    rowKey?: RowKeyType ) => formatterValueType)[];\n\nexport interface ICell {\n  title?: string | React.ReactNode;\n  transforms?: ITransforms;\n  cellTransforms?: ITransforms;\n  columnTransforms?: ITransforms;\n  formatters?: IFormatters;\n  cellFormatters?: IFormatters;\n  props?: any;\n  data?: any;\n  header?: any;\n  cell?: any;\n}\n\nexport interface IRowCell {\n  title?: string | React.ReactNode;\n  props?: any;\n}\n\nexport interface IRow extends RowType {\n  cells?: (React.ReactNode | IRowCell)[];\n  isOpen?: boolean;\n  parent?: number;\n  compoundParent?: number;\n  props?: any;\n  fullWidth?: boolean;\n  noPadding?: boolean;\n  showSelect?: boolean;\n  isExpanded?: boolean;\n  isFirstVisible?: boolean;\n  isLastVisible?: boolean;\n  selected?: boolean;\n}\n\nexport interface TableProps {\n  'aria-label'?: string;\n  children?: React.ReactNode;\n  className?: string;\n  variant?: 'compact';\n  borders?: boolean;\n  gridBreakPoint?: '' | 'grid' | 'grid-md' | 'grid-lg' | 'grid-xl' | 'grid-2xl';\n  sortBy?: ISortBy;\n  onCollapse?: OnCollapse;\n  onExpand?: OnExpand;\n  onSelect?: OnSelect;\n  canSelectAll?: boolean;\n  onSort?: OnSort;\n  actions?: IActions;\n  actionResolver?: IActionsResolver;\n  areActionsDisabled?: IAreActionsDisabled;\n  header?: React.ReactNode;\n  caption?: React.ReactNode;\n  rowLabeledBy?: string;\n  expandId?: string;\n  contentId?: string;\n  dropdownPosition?: 'right' | 'left';\n  dropdownDirection?: 'up' | 'down';\n  rows: (IRow | string[])[];\n  cells: (ICell | string)[];\n  bodyWrapper?: Function;\n  rowWrapper?: Function;\n  role?: string;\n}\n\nexport const TableContext = React.createContext({\n  headerData: null as ColumnsType,\n  headerRows: null as IHeaderRow[],\n  rows: [] as (IRow | string[])[]\n});\n\nexport class Table extends React.Component<TableProps, {}> {\n  static defaultProps = {\n    \"children\": null as React.ReactNode,\n    \"className\": '',\n    \"variant\": null as TableVariant,\n    \"borders\": true,\n    \"rowLabeledBy\": 'simple-node',\n    \"expandId\": 'expandable-toggle',\n    \"contentId\": 'expanded-content',\n    \"dropdownPosition\": DropdownPosition.right,\n    \"dropdownDirection\": DropdownDirection.down,\n    \"header\": undefined as React.ReactNode,\n    \"caption\": undefined as React.ReactNode,\n    'aria-label': undefined as string,\n    \"gridBreakPoint\": TableGridBreakpoint.gridMd,\n    \"role\": 'grid',\n    \"canSelectAll\": true\n  };\n\n  isSelected = (row: IRow) => row.selected === true;\n\n  areAllRowsSelected = (rows: IRow[]) => {\n    if (rows === undefined || rows.length === 0) {\n      return false;\n    }\n    return rows.every((row) => this.isSelected(row) || (row.hasOwnProperty('parent') && !row.showSelect));\n  }\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      caption,\n      header,\n      className,\n      gridBreakPoint,\n      onSort,\n      onSelect,\n      canSelectAll,\n      sortBy,\n      children,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onExpand,\n      rowLabeledBy,\n      dropdownPosition,\n      dropdownDirection,\n      contentId,\n      expandId,\n      variant,\n      rows,\n      cells,\n      bodyWrapper,\n      rowWrapper,\n      borders,\n      role,\n      ...props\n    } = this.props;\n\n    if (!ariaLabel && !caption && !header && role !== 'presentation') {\n      // tslint:disable-next-line:no-console\n      console.error('Table: Specify at least one of: header, caption, aria-label');\n    }\n\n    const headerData = calculateColumns(cells, {\n      sortBy,\n      onSort,\n      onSelect,\n      canSelectAll,\n      allRowsSelected: onSelect ? this.areAllRowsSelected(rows as IRow[]) : false,\n      actions,\n      actionResolver,\n      areActionsDisabled,\n      onCollapse,\n      onExpand,\n      rowLabeledBy,\n      expandId,\n      contentId,\n      dropdownPosition,\n      dropdownDirection,\n      firstUserColumnIndex: [onCollapse, onSelect].filter((callback) => callback).length\n    });\n\n    return (\n      <TableContext.Provider\n        value={{\n          headerData,\n          headerRows: null as IHeaderRow[],\n          rows\n        }}\n      >\n        {header}\n        <Provider\n          {...props}\n          aria-label={ariaLabel}\n          renderers={{\n            body: {\n              wrapper: bodyWrapper || BodyWrapper,\n              row: rowWrapper || RowWrapper,\n              cell: BodyCell\n            },\n            header: {\n              cell: HeaderCell\n            }\n          }}\n          columns={headerData}\n          role={role}\n          className={css(\n            styles.table,\n            gridBreakPoint && getModifier(stylesGrid, gridBreakPoint),\n            getModifier(styles, variant),\n            ((onCollapse && variant === TableVariant.compact) || onExpand) && styles.modifiers.expandable,\n            variant === TableVariant.compact && borders === false ? styles.modifiers.noBorderRows : null,\n            className\n          )}\n        >\n          {caption && <caption>{caption}</caption>}\n          {children}\n        </Provider>\n      </TableContext.Provider>\n    );\n  }\n}\n"],"file":"Table.js"}