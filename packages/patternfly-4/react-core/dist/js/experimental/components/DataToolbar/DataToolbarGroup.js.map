{"version":3,"sources":["../../../../../src/experimental/components/DataToolbar/DataToolbarGroup.tsx"],"names":["DataToolbarGroupVariant","DataToolbarGroup","breakpointMods","spacers","itemSpacers","className","variant","children","props","styles","dataToolbarGroup"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAKA;;;;;;;;;;;;;;IAEYA,uB;;;WAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;GAAAA,uB,uCAAAA,uB;;AAqBL,IAAMC,gBAAgE,GAAG,SAAnEA,gBAAmE,OAQlD;AAAA,iCAP3BC,cAO2B;AAAA,MAP3BA,cAO2B,oCAPV,EAOU;AAAA,0BAN3BC,OAM2B;AAAA,MAN3BA,OAM2B,6BANjB,EAMiB;AAAA,8BAL3BC,WAK2B;AAAA,MAL3BA,WAK2B,iCALb,EAKa;AAAA,MAJ3BC,SAI2B,QAJ3BA,SAI2B;AAAA,MAH3BC,OAG2B,QAH3BA,OAG2B;AAAA,MAF3BC,QAE2B,QAF3BA,QAE2B;AAAA,MADxBC,KACwB;;AAE5B,SACE;AACE,IAAA,SAAS,EAAE,sBACTC,wBAAOC,gBADE,EAETJ,OAAO,IAAI,8BAAYG,uBAAZ,EAAoBH,OAApB,CAFF,EAGT,gCAAqBJ,cAArB,EAAqCO,uBAArC,CAHS,EAIT,qCAAcL,WAAd,EAA2B,kBAA3B,CAJS,EAKT,qCAAcD,OAAd,CALS,EAMTE,SANS;AADb,KAQMG,KARN,GAUGD,QAVH,CADF;AAeD,CAzBM;;;;AAbLF,EAAAA,S;AAEAC,EAAAA,O,2FAAoC,c,iCAAiB,mB,iCAAsB,c;AAE3EJ,EAAAA,c;AAEAC,EAAAA,O;AAEAC,EAAAA,W;AAEAG,EAAAA,Q","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';\nimport { css, getModifier } from '@patternfly/react-styles';\n\nimport {\n  DataToolbarBreakpointMod,\n  DataToolbarSpacer,\n  formatSpacers\n} from './DataToolbarUtils';\nimport { formatBreakpointMods } from '../../../helpers/util';\n\nexport enum DataToolbarGroupVariant {\n  'filter-group' = 'filter-group',\n  'icon-button-group' = 'icon-button-group',\n  'button-group' = 'button-group',\n}\n\nexport interface DataToolbarGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Classes applied to root element of the Data toolbar group */\n  className?: string;\n  /** A type modifier which modifies spacing specifically depending on the type of group */\n  variant?: DataToolbarGroupVariant | 'filter-group' | 'icon-button-group' | 'button-group';\n  /** Array of objects representing the various modifiers to apply to the Data toolbar group at various breakpoints */\n  breakpointMods?: DataToolbarBreakpointMod[];\n  /** Array of objects representing the various spacers to apply to the Data toolbar group at various breakpoints */\n  spacers?: DataToolbarSpacer[];\n  /** Array of objects representing the spacers to apply to the items in this group at various breakpoints */\n  itemSpacers?: DataToolbarSpacer[];\n  /** Content to be rendered inside the Data toolbar group */\n  children?: React.ReactNode;\n}\n\nexport const DataToolbarGroup: React.FunctionComponent<DataToolbarGroupProps> = ({\n   breakpointMods = [] as DataToolbarBreakpointMod[],\n   spacers = [] as DataToolbarSpacer[],\n   itemSpacers = [] as DataToolbarSpacer[],\n   className,\n   variant,\n   children,\n   ...props\n }: DataToolbarGroupProps) => {\n\n  return (\n    <div\n      className={css(\n        styles.dataToolbarGroup,\n        variant && getModifier(styles, variant),\n        formatBreakpointMods(breakpointMods, styles),\n        formatSpacers(itemSpacers, 'pf-m-space-items'),\n        formatSpacers(spacers),\n        className)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n\n};\n"],"file":"DataToolbarGroup.js"}