{"version":3,"sources":["../esm/StyleSheet.js"],"names":["css","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","StyleSheet","create","styleObj","reduce","prev","parse","input","classes","map","className","modifiers","inject","raw","styles","filteredStyles","style"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { css as emotionCSS, cx, injectGlobal } from 'emotion';\nimport { formatClassName, getCSSClasses, isModifier, createStyleDeclaration, isValidStyleDeclaration, getClassName } from './utils';\nexport const StyleSheet = {\n  create(styleObj) {\n    const keys = Object.keys(styleObj);\n\n    if (keys.length > 0) {\n      return keys.reduce((prev, key) => _objectSpread({}, prev, {\n        [key]: emotionCSS(styleObj[key])\n      }), {});\n    }\n\n    return emotionCSS(styleObj);\n  },\n\n  parse(input) {\n    const classes = getCSSClasses(input);\n\n    if (!classes) {\n      return {};\n    }\n\n    return classes.reduce((map, className) => {\n      const key = formatClassName(className);\n\n      if (map[key]) {\n        return map;\n      }\n\n      const value = createStyleDeclaration(className, input);\n\n      if (isModifier(className)) {\n        map.modifiers[key] = value;\n      } else {\n        map[key] = value;\n      }\n\n      return map;\n    }, {\n      modifiers: {},\n      inject: () => injectGlobal(input),\n      raw: input\n    });\n  }\n\n};\nexport function css(...styles) {\n  const filteredStyles = [];\n  styles.forEach(style => {\n    if (isValidStyleDeclaration(style)) {\n      // remove global injection of styles in favor of require(css) in the component\n      // style.__inject();\n      filteredStyles.push(getClassName(style));\n      return;\n    }\n\n    filteredStyles.push(style);\n  });\n  return cx(...filteredStyles);\n}\n//# sourceMappingURL=StyleSheet.js.map"],"file":"StyleSheet.js"}