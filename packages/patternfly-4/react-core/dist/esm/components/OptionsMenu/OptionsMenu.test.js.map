{"version":3,"sources":["../../../../src/components/OptionsMenu/OptionsMenu.test.js"],"names":["React","mount","OptionsMenu","OptionsMenuDirection","OptionsMenuPosition","OptionsMenuToggle","OptionsMenuItemGroup","OptionsMenuItem","OptionsMenuSeparator","OptionsMenuToggleWithText","menuItems","describe","test","view","expect","toMatchSnapshot","right","up"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { OptionsMenu, OptionsMenuDirection, OptionsMenuPosition } from './OptionsMenu';\nimport { OptionsMenuToggle } from './OptionsMenuToggle';\nimport { OptionsMenuItemGroup } from './OptionsMenuItemGroup';\nimport { OptionsMenuItem } from './OptionsMenuItem';\nimport { OptionsMenuSeparator } from './OptionsMenuSeparator';\nimport { OptionsMenuToggleWithText } from './OptionsMenuToggleWithText';\n\nconst menuItems = [\n  <OptionsMenuItemGroup key=\"first group\">\n    <OptionsMenuItem key=\"name\">Name</OptionsMenuItem>\n    <OptionsMenuItem key=\"date\">Date</OptionsMenuItem>\n    <OptionsMenuItem isDisabled key=\"disabled\">\n      Disabled\n    </OptionsMenuItem>\n    <OptionsMenuItem key=\"size\">Size</OptionsMenuItem>\n  </OptionsMenuItemGroup>,\n  <OptionsMenuSeparator key=\"separator\" />,\n  <OptionsMenuItemGroup key=\"second group\">\n    <OptionsMenuItem key=\"ascending\">Ascending</OptionsMenuItem>\n    <OptionsMenuItem key=\"descending\">Descending</OptionsMenuItem>\n  </OptionsMenuItemGroup>\n];\n\ndescribe('optionsMenu', () => {\n  test('regular', () => {\n    const view = mount(\n      <OptionsMenu id=\"regular\" menuItems={menuItems} toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>} />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"rightAligned\"\n        menuItems={menuItems}\n        position={OptionsMenuPosition.right}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('open up', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"openUp\"\n        menuItems={menuItems}\n        direction={OptionsMenuDirection.up}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned + open up', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"rightAlignedOpenUp\"\n        menuItems={menuItems}\n        position={OptionsMenuPosition.right}\n        direction={OptionsMenuDirection.up}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('expanded', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"expanded\"\n        menuItems={menuItems}\n        isOpen\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('plain', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"plain\"\n        menuItems={menuItems}\n        isPlain\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('text', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"text\"\n        menuItems={menuItems}\n        toggle={\n          <OptionsMenuToggleWithText toggleButtonContents={<React.Fragment>Test</React.Fragment>} toggleText=\"Test\" />\n        }\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('isDisabled', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"disabled\"\n        menuItems={menuItems}\n        toggle={<OptionsMenuToggle isDisabled>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"OptionsMenu.test.js"}