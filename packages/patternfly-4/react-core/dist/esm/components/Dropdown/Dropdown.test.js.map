{"version":3,"sources":["../../../../src/components/Dropdown/Dropdown.test.tsx"],"names":["React","mount","Dropdown","DropdownPosition","DropdownDirection","InternalDropdownItem","DropdownSeparator","DropdownToggle","KebabToggle","dropdownItems","describe","test","view","expect","toMatchSnapshot","right","up","mockToggle","jest","fn","mockSelect","find","first","simulate","mock","calls","toHaveLength","toThrowError","myMock","global","console","error","not","toBeCalled"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { Dropdown } from './Dropdown';\nimport { DropdownPosition, DropdownDirection } from './dropdownConstants';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownSeparator } from './Separator';\nimport { DropdownToggle } from './DropdownToggle';\nimport { KebabToggle } from './KebabToggle';\n\nconst dropdownItems = [\n  <InternalDropdownItem key=\"link\">Link</InternalDropdownItem>,\n  <InternalDropdownItem key=\"action\" component=\"button\">\n    Action\n  </InternalDropdownItem>,\n  <InternalDropdownItem key=\"disabled link\" isDisabled>\n    Disabled Link\n  </InternalDropdownItem>,\n  <InternalDropdownItem key=\"disabled action\" isDisabled component=\"button\">\n    Disabled Action\n  </InternalDropdownItem>,\n  <DropdownSeparator key=\"separator\" />,\n  <InternalDropdownItem key=\"separated link\">Separated Link</InternalDropdownItem>,\n  <InternalDropdownItem key=\"separated action\" component=\"button\">\n    Separated Action\n  </InternalDropdownItem>\n];\n\ndescribe('dropdown', () => {\n  test('regular', () => {\n    const view = mount(\n      <Dropdown dropdownItems={dropdownItems} toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>} />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        position={DropdownPosition.right}\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('dropup', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        direction={DropdownDirection.up}\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('dropup + right aligned', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        direction={DropdownDirection.up}\n        position={DropdownPosition.right}\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('expanded', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        isOpen\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('primary', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        toggle={<DropdownToggle id=\"Dropdown Toggle\" isPrimary>Dropdown</DropdownToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('basic', () => {\n    const view = mount(\n      <Dropdown isOpen toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}>\n        <div>BASIC</div>\n      </Dropdown>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n\ndescribe('KebabToggle', () => {\n  test('regular', () => {\n    const view = mount(<Dropdown dropdownItems={dropdownItems} toggle={<KebabToggle id=\"Dropdown Toggle\" />} />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        position={DropdownPosition.right}\n        toggle={<KebabToggle id=\"Dropdown Toggle\" />}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('dropup', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        direction={DropdownDirection.up}\n        toggle={<KebabToggle id=\"Dropdown Toggle\" />}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('dropup + right aligned', () => {\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        direction={DropdownDirection.up}\n        position={DropdownPosition.right}\n        toggle={<KebabToggle id=\"Dropdown Toggle\" />}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('expanded', () => {\n    const view = mount(<Dropdown dropdownItems={dropdownItems} isOpen toggle={<KebabToggle id=\"Dropdown Toggle\" />} />);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('plain', () => {\n    const view = mount(\n      <Dropdown dropdownItems={dropdownItems} isPlain toggle={<KebabToggle id=\"Dropdown Toggle\" />} />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('basic', () => {\n    const view = mount(\n      <Dropdown isOpen toggle={<KebabToggle id=\"Dropdown Toggle\" />}>\n        <div>BASIC</div>\n      </Dropdown>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n\ndescribe('API', () => {\n  test('click on item', () => {\n    const mockToggle = jest.fn();\n    const mockSelect = jest.fn();\n    const view = mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        onSelect={mockSelect}\n        isOpen\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    view\n      .find('a')\n      .first()\n      .simulate('click');\n    expect(mockToggle.mock.calls).toHaveLength(0);\n    expect(mockSelect.mock.calls).toHaveLength(1);\n  });\n\n  test('dropdownItems and children console error ', () => {\n    expect(() => mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        isOpen\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      >\n        <div>Children items</div>\n      </Dropdown>\n    )).toThrowError();\n  });\n\n  test('dropdownItems only, no console error ', () => {\n    const myMock = jest.fn();\n    global.console = { error: myMock } as any;\n    mount(\n      <Dropdown\n        dropdownItems={dropdownItems}\n        isOpen\n        toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}\n      />\n    );\n    expect(myMock).not.toBeCalled();\n  });\n\n  test('children only, no console ', () => {\n    const myMock = jest.fn();\n    global.console = { error: myMock } as any;\n    mount(\n      <Dropdown isOpen toggle={<DropdownToggle id=\"Dropdown Toggle\">Dropdown</DropdownToggle>}>\n        <div>Children items</div>\n      </Dropdown>\n    );\n    expect(myMock).not.toBeCalled();\n  });\n});\n"],"file":"Dropdown.test.js"}