{"version":3,"sources":["../../../../src/components/Card/CardBody.test.tsx"],"names":["React","CardBody","shallow","test","view","expect","toMatchSnapshot","prop","testId","toBe","component","type","Component"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEAC,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,QAAMC,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD,OAAD,CAApB;AACAG,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,QAAMC,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC;AAApB,IAAD,CAApB;AACAG,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BD,eAA/B;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,QAAMK,MAAM,GAAG,WAAf;AACA,QAAMJ,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD;AAAU,mBAAaM;AAAvB,IAAD,CAApB;AACAH,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,CAJG,CAAJ;AAMAL,IAAI,CAAC,6CAAD,EAAgD,MAAM;AACxD,QAAMO,SAAS,GAAG,SAAlB;AACA,QAAMN,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEQ;AAArB,IAAD,CAApB;AACAL,EAAAA,MAAM,CAACD,IAAI,CAACO,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBC,SAAzB;AACD,CAJG,CAAJ;AAMAP,IAAI,CAAC,sDAAD,EAAyD,MAAM;AACjE,QAAMS,SAAS,GAAG,MAAM,4CAAxB;;AACA,QAAMR,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEU;AAArB,IAAD,CAApB;AACAP,EAAAA,MAAM,CAACD,IAAI,CAACO,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBG,SAAzB;AACD,CAJG,CAAJ;AAMAT,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,QAAMC,IAAI,GAAGF,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE;AAApB,IAAD,CAApB;AACAG,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ","sourcesContent":["import React from 'react';\nimport { CardBody } from './CardBody';\nimport { shallow } from 'enzyme';\n\ntest('renders with PatternFly Core styles', () => {\n  const view = shallow(<CardBody />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('className is added to the root element', () => {\n  const view = shallow(<CardBody className=\"extra-class\" />);\n  expect(view.prop('className')).toMatchSnapshot();\n});\n\ntest('extra props are spread to the root element', () => {\n  const testId = 'card-body';\n  const view = shallow(<CardBody data-testid={testId} />);\n  expect(view.prop('data-testid')).toBe(testId);\n});\n\ntest('allows passing in a string as the component', () => {\n  const component = 'section';\n  const view = shallow(<CardBody component={component} />);\n  expect(view.type()).toBe(component);\n});\n\ntest('allows passing in a React Component as the component', () => {\n  const Component = () => <div>im a div</div>;\n  const view = shallow(<CardBody component={Component} />);\n  expect(view.type()).toBe(Component);\n});\n\ntest('body with no-fill applied ', () => {\n  const view = shallow(<CardBody isFilled={false} />);\n  expect(view).toMatchSnapshot();\n});\n"],"file":"CardBody.test.js"}