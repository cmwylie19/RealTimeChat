{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBulletGroupTitle.tsx"],"names":["React","Line","ChartContainer","ChartLabel","ChartBulletStyles","getBulletGroupTitleTheme","getLabelTextSize","getBulletLabelX","getBulletLabelY","getPaddingForSide","ChartBulletGroupTitle","ariaDesc","ariaTitle","capHeight","dividerComponent","padding","standalone","subTitleComponent","subTitle","themeColor","themeVariant","title","titleComponent","theme","height","chart","width","rest","defaultPadding","bottom","left","right","top","labelPadding","legend","style","labels","getDivider","titleSize","text","subTitleSize","dy","cloneElement","x1","x2","y1","y2","line","data","props","getTitle","titleProps","showBoth","label","groupTitle","textAnchor","verticalAnchor","x","chartWidth","labelPosition","y","chartHeight","Boolean"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  PaddingProps,\n  StringOrNumberOrCallback,\n} from 'victory';\nimport { Line } from 'victory-core';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartBulletStyles, ChartThemeDefinition } from '../ChartTheme';\nimport { getBulletGroupTitleTheme, getLabelTextSize, getBulletLabelX, getBulletLabelY, getPaddingForSide } from '../ChartUtils';\n\n/**\n * See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/victory/index.d.ts\n */\nexport interface ChartBulletGroupTitleProps {\n  /**\n   * The ariaDesc prop specifies the description of the chart/SVG to assist with\n   * accessibility for screen readers.\n   *\n   * Note: Overridden by the desc prop of containerComponent\n   */\n  ariaDesc?: string;\n  /**\n   * The ariaTitle prop specifies the title to be applied to the SVG to assist\n   * accessibility for screen readers.\n   *\n   * Note: Overridden by the title prop of containerComponent\n   */\n  ariaTitle?: string;\n  /**\n   * The capHeight prop defines a text metric for the font being used: the expected height of capital letters.\n   * This is necessary because of SVG, which (a) positions the *bottom* of the text at `y`, and (b) has no notion of\n   * line height. The value should ideally use the same units as `lineHeight` and `dy`, preferably ems. If given a\n   * unitless number, it is assumed to be ems.\n   */\n  capHeight?: StringOrNumberOrCallback;\n  /**\n   * The divider component to render with the chart\n   */\n  dividerComponent?: React.ReactElement<any>;\n  /**\n   * The height props specifies the height the svg viewBox of the chart container.\n   * This value should be given as a number of pixels\n   */\n  height?: number;\n  /**\n   * The padding props specifies the amount of padding in number of pixels between\n   * the edge of the chart and any rendered child components. This prop can be given\n   * as a number or as an object with padding specified for top, bottom, left\n   * and right.\n   *\n   * Note: The bottom padding property is unused\n   */\n  padding?: PaddingProps;\n  /**\n   * The standalone prop determines whether the component will render a standalone svg\n   * or a <g> tag that will be included in an external svg. Set standalone to false to\n   * compose ChartLine with other components within an enclosing <svg> tag.\n   */\n  standalone?: boolean;\n  /**\n   * The subtitle to render for grouped bullets\n   */\n  subTitle?: string;\n  /**\n   * The label component to render the chart subTitle.\n   *\n   * Note: Default label properties may be applied\n   */\n  subTitleComponent?: React.ReactElement<any>;\n  /**\n   * The theme prop takes a style object with nested data, labels, and parent objects.\n   * You can create this object yourself, or you can use a theme provided by\n   * When using ChartLine as a solo component, implement the theme directly on\n   * ChartLine. If you are wrapping ChartLine in ChartChart or ChartGroup,\n   * please call the theme on the outermost wrapper component instead.\n   */\n  theme?: ChartThemeDefinition;\n  /**\n   * Specifies the theme color. Valid values are 'blue', 'green', 'multi', etc.\n   *\n   * Note: Not compatible with theme prop\n   *\n   * @example themeColor={ChartThemeColor.blue}\n   */\n  themeColor?: string;\n  /**\n   * Specifies the theme variant. Valid values are 'dark' or 'light'\n   *\n   * Note: Not compatible with theme prop\n   *\n   * @example themeVariant={ChartThemeVariant.light}\n   */\n  themeVariant?: string;\n  /**\n   * The title to render for grouped bullets\n   */\n  title?: string;\n  /**\n   * The label component to render the chart title.\n   *\n   * Note: Default label properties may be applied\n   */\n  titleComponent?: React.ReactElement<any>;\n  /**\n   * The width props specifies the width of the svg viewBox of the chart container\n   * This value should be given as a number of pixels\n   */\n  width?: number;\n}\n\nexport const ChartBulletGroupTitle: React.FunctionComponent<ChartBulletGroupTitleProps> = ({\n  ariaDesc,\n  ariaTitle,\n  capHeight = 1.1,\n  dividerComponent = <Line />,\n  padding,\n  standalone = true,\n  subTitleComponent = <ChartLabel />,\n  subTitle,\n  themeColor,\n  themeVariant,\n  title,\n  titleComponent = <ChartLabel />,\n\n  // destructure last\n  theme = getBulletGroupTitleTheme(themeColor, themeVariant),\n  height = theme.chart.height,\n  width = theme.chart.width,\n  ...rest\n}: ChartBulletGroupTitleProps) => {\n  const defaultPadding = {\n    bottom: getPaddingForSide('bottom',  padding, theme.chart.padding),\n    left: getPaddingForSide('left', padding, theme.chart.padding),\n    right: getPaddingForSide('right', padding, theme.chart.padding),\n    top: getPaddingForSide('top', padding, theme.chart.padding),\n  };\n\n  const labelPadding = {\n    bottom: getPaddingForSide('bottom',  padding, theme.legend.style.labels.padding),\n    left: getPaddingForSide('left', padding, theme.legend.style.labels.padding),\n    right: getPaddingForSide('right', padding, theme.legend.style.labels.padding),\n    top: getPaddingForSide('top', padding, theme.legend.style.labels.padding),\n  };\n\n  // Horizontal divider to render under the group title\n  const getDivider = () => {\n    const titleSize = getLabelTextSize({text: title,  theme});\n    const subTitleSize = getLabelTextSize({text: subTitle,  theme});\n    const dy = title && subTitle\n      ? titleSize.height + subTitleSize.height + labelPadding.top + labelPadding.bottom\n      : titleSize.height + labelPadding.top + labelPadding.bottom;\n\n    return React.cloneElement(dividerComponent, {\n      x1: defaultPadding.left,\n      x2: width - defaultPadding.right,\n      y1: defaultPadding.top + dy,\n      y2: defaultPadding.top + dy,\n      style: theme.line.style.data,\n      ...dividerComponent.props\n    });\n  };\n\n  // Returns title\n  const getTitle = () => {\n    const titleProps = titleComponent ? titleComponent.props : {};\n    const showBoth = title && subTitle;\n    return React.cloneElement(titleComponent, {\n      ...showBoth && { capHeight },\n      style: [ChartBulletStyles.label.groupTitle, ChartBulletStyles.label.subTitle],\n      text: showBoth ? [title, subTitle] : title,\n      textAnchor: 'middle',\n      verticalAnchor: 'middle',\n      x: getBulletLabelX({\n        chartWidth: width,\n        labelPosition: 'top'\n      }),\n      y: getBulletLabelY({\n        chartHeight: height,\n        dy: defaultPadding.top,\n        labelPosition: 'top'\n      }),\n      ...titleProps\n    });\n  };\n\n  const groupTitle = (\n    Boolean(title) && (\n      <React.Fragment>\n        {getTitle()}\n        {getDivider()}\n      </React.Fragment>\n    )\n  );\n\n  return standalone ? (\n    <ChartContainer desc={ariaDesc} height={height} title={ariaTitle} width={width}>\n      {groupTitle}\n    </ChartContainer>\n  ) : (\n    <React.Fragment>\n      {groupTitle}\n    </React.Fragment>\n  );\n};\n"],"file":"ChartBulletGroupTitle.js"}