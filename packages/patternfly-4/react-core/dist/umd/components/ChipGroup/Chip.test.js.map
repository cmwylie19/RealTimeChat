{"version":3,"sources":["../../../esm/components/ChipGroup/Chip.test.js"],"names":["test","view","React","createElement","ChipButton","id","className","expect","toMatchSnapshot","describe","Chip","isOverflowChip","isReadOnly"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAIAA,EAAAA,IAAI,CAAC,YAAD,EAAe,MAAM;AACvB,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,sBAApB,EAAgC;AACnDC,MAAAA,EAAE,EAAE,gBAD+C;AAEnDC,MAAAA,SAAS,EAAE;AAFwC,KAAhC,EAGlBJ,gBAAMC,aAAN,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,OAA/B,CAHkB,CAAR,CAAb;AAIAI,IAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,GANG,CAAJ;AAOAC,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBT,IAAAA,IAAI,CAAC,UAAD,EAAa,MAAM;AACrB,YAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBO,UAApB,EAA0B;AAC7CJ,QAAAA,SAAS,EAAE,YADkC;AAE7CK,QAAAA,cAAc,EAAE;AAF6B,OAA1B,EAGlB,QAHkB,CAAR,CAAb;AAIAJ,MAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,KANG,CAAJ;AAOAR,IAAAA,IAAI,CAAC,UAAD,EAAa,MAAM;AACrB,YAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBO,UAApB,EAA0B;AAC7CJ,QAAAA,SAAS,EAAE,YADkC;AAE7CD,QAAAA,EAAE,EAAE;AAFyC,OAA1B,EAGlB,MAHkB,CAAR,CAAb;AAIAE,MAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,KANG,CAAJ;AAOAR,IAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,YAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBO,UAApB,EAA0B;AAC7CJ,QAAAA,SAAS,EAAE,YADkC;AAE7CD,QAAAA,EAAE,EAAE;AAFyC,OAA1B,EAGlB,qBAHkB,CAAR,CAAb;AAIAE,MAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,KANG,CAAJ;AAOAR,IAAAA,IAAI,CAAC,UAAD,EAAa,MAAM;AACrB,YAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBO,UAApB,EAA0B;AAC7CJ,QAAAA,SAAS,EAAE,YADkC;AAE7CM,QAAAA,UAAU,EAAE;AAFiC,OAA1B,EAGlB,QAHkB,CAAR,CAAb;AAIAL,MAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,KANG,CAAJ;AAOD,GA7BO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { ChipButton } from './ChipButton';\nimport { Chip } from './Chip';\ntest('ChipButton', () => {\n  const view = shallow(React.createElement(ChipButton, {\n    id: \"my-chip-button\",\n    className: \"chip-bttn-cls\"\n  }, React.createElement(\"b\", null, \"Close\")));\n  expect(view).toMatchSnapshot();\n});\ndescribe('Chip', () => {\n  test('overflow', () => {\n    const view = shallow(React.createElement(Chip, {\n      className: \"my-chp-cls\",\n      isOverflowChip: true\n    }, \"4 more\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('closable', () => {\n    const view = shallow(React.createElement(Chip, {\n      className: \"my-chp-cls\",\n      id: \"chip_one\"\n    }, \"Chip\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('closable with tooltip', () => {\n    const view = shallow(React.createElement(Chip, {\n      className: \"my-chp-cls\",\n      id: \"chip_one\"\n    }, \"1234567890123456789\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('readonly', () => {\n    const view = shallow(React.createElement(Chip, {\n      className: \"my-chp-cls\",\n      isReadOnly: true\n    }, \"4 more\"));\n    expect(view).toMatchSnapshot();\n  });\n});\n//# sourceMappingURL=Chip.test.js.map"],"file":"Chip.test.js"}