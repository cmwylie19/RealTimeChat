{"version":3,"sources":["../../../../src/components/ApplicationLauncher/ApplicationLauncher.tsx"],"names":["React","styles","ThIcon","DropdownDirection","DropdownPosition","DropdownToggle","DropdownContext","DropdownWithContext","ApplicationLauncher","Component","render","props","ariaLabel","isOpen","onToggle","toggleIcon","onSelect","isDisabled","className","isGrouped","dropdownItems","items","ref","menuClass","appLauncherMenu","itemClass","appLauncherMenuItem","toggleClass","appLauncherToggle","baseClass","appLauncher","baseComponent","sectionClass","appLauncherGroup","sectionTitleClass","appLauncherGroupTitle","sectionComponent","disabledClass","modifiers","disabled","hoverClass","hover","separatorClass","appLauncherSeparator","length","direction","position","down","left","_event","undefined","_value"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,cAA9C,EAA8DC,eAA9D,QAAqF,aAArF;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAkCA,OAAO,MAAMC,mBAAN,SAAkCR,KAAK,CAACS,SAAxC,CAA4E;AAejFC,EAAAA,MAAM,GAAG;AACP,wBAaI,KAAKC,KAbT;AAAA,UAAM;AACJ,oBAAcC,SADV;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,QALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,SAPI;AAQJC,MAAAA,SARI;AASJC,MAAAA,aATI;AAUJC,MAAAA,KAVI;AAWJC,MAAAA;AAXI,KAAN;AAAA,UAYKX,KAZL;;AAcA,WACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAC/BK,QAAAA,QAD+B;AAE/BO,QAAAA,SAAS,EAAEtB,MAAM,CAACuB,eAFa;AAG/BC,QAAAA,SAAS,EAAExB,MAAM,CAACyB,mBAHa;AAI/BC,QAAAA,WAAW,EAAE1B,MAAM,CAAC2B,iBAJW;AAK/BC,QAAAA,SAAS,EAAE5B,MAAM,CAAC6B,WALa;AAM/BC,QAAAA,aAAa,EAAE,KANgB;AAO/BC,QAAAA,YAAY,EAAE/B,MAAM,CAACgC,gBAPU;AAQ/BC,QAAAA,iBAAiB,EAAEjC,MAAM,CAACkC,qBARK;AAS/BC,QAAAA,gBAAgB,EAAE,SATa;AAU/BC,QAAAA,aAAa,EAAEpC,MAAM,CAACqC,SAAP,CAAiBC,QAVD;AAW/BC,QAAAA,UAAU,EAAEvC,MAAM,CAACqC,SAAP,CAAiBG,KAXE;AAY/BC,QAAAA,cAAc,EAAEzC,MAAM,CAAC0C;AAZQ;AAAjC,OAcE,oBAAC,mBAAD,eACMhC,KADN;AAEE,MAAA,aAAa,EAAEU,KAAK,CAACuB,MAAN,GAAevB,KAAf,GAAuBD,aAFxC;AAGE,MAAA,MAAM,EAAEP,MAHV;AAIE,MAAA,SAAS,EAAEK,SAJb;AAKE,oBAAYN,SALd;AAME,MAAA,MAAM,EACJ,oBAAC,cAAD;AACE,QAAA,aAAa,EAAE,IADjB;AAEE,QAAA,MAAM,EAAEC,MAFV;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,UAAU,EAAEG,UAJd;AAKE,sBAAYL;AALd,SAOGG,UAPH,CAPJ;AAiBE,MAAA,SAAS,EAAEI;AAjBb,OAdF,CADF;AAoCD;;AAlEgF;;gBAAtEX,mB;AA9BTU,EAAAA,S;AAEA2B,EAAAA,S;AAOAzB,EAAAA,a;AAEAC,EAAAA,K;AAEAJ,EAAAA,U;AAEAJ,EAAAA,M;AAEAiC,EAAAA,Q;AAEA9B,EAAAA,Q;AAEAF,EAAAA,Q;AAEA,c;AAEAK,EAAAA,S;AAEAJ,EAAAA,U;;;gBAGSP,mB,kBACW;AACpB,eAAa,EADO;AAEpB,gBAAc,KAFM;AAGpB,eAAaL,iBAAiB,CAAC4C,IAHX;AAIpB,mBAAiB,EAJG;AAKpB,WAAS,EALW;AAMpB,YAAU,KANU;AAOpB,cAAY3C,gBAAgB,CAAC4C,IAPT;AAQpB,cAAaC,MAAD,IAAsBC,SARd;AASpB,cAAaC,MAAD,IAA0BD,SATlB;AAUpB,gBAAc,sBAVM;AAWpB,eAAa,KAXO;AAYpB,gBAAc,oBAAC,MAAD;AAZM,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport { ThIcon } from '@patternfly/react-icons';\nimport { DropdownDirection, DropdownPosition, DropdownToggle, DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\n\nexport interface ApplicationLauncherProps extends React.HTMLProps<HTMLDivElement> {\n    /** Additional element css classes */\n    className?: string;\n    /** Display menu above or below dropdown toggle */\n    direction?: DropdownDirection;\n    /**\n     * @deprecated\n     * Use the items prop instead\n     *\n     * Array of DropdownItem nodes that will be rendered in the dropdown Menu list\n     */\n    dropdownItems?: React.ReactNode[];\n    /** Array of application launcher items */\n    items?: React.ReactNode[];\n    /** Render Application launcher toggle as disabled icon */\n    isDisabled?: boolean;\n    /** open bool */\n    isOpen?: boolean;\n    /** Indicates where menu will be alligned horizontally */\n    position?: DropdownPosition;\n    /** Function callback called when user selects item */\n    onSelect?: (event: any) => void;\n    /** Callback called when application launcher toggle is clicked */\n    onToggle?: (value: boolean) => void;\n    /** Adds accessible text to the button. Required for plain buttons */\n    'aria-label'?: string;\n    /** Flag to indicate if application launcher has groups */\n    isGrouped?: boolean;\n    /** Toggle Icon, optional to override the icon used for the toggle */\n    toggleIcon?: React.ReactNode;\n}\n\nexport class ApplicationLauncher extends React.Component<ApplicationLauncherProps> {\n  static defaultProps = {\n    \"className\": '',\n    \"isDisabled\": false,\n    \"direction\": DropdownDirection.down,\n    \"dropdownItems\": [] as React.ReactNode[],\n    \"items\": [] as React.ReactNode[],\n    \"isOpen\": false,\n    \"position\": DropdownPosition.left,\n    \"onSelect\": (_event: any): any => undefined,\n    \"onToggle\": (_value: boolean): any => undefined,\n    'aria-label': 'Application launcher',\n    \"isGrouped\": false,\n    \"toggleIcon\": <ThIcon />\n  };\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      isOpen,\n      onToggle,\n      toggleIcon,\n      onSelect,\n      isDisabled,\n      className,\n      isGrouped,\n      dropdownItems,\n      items,\n      ref,\n      ...props\n    } = this.props;\n    return (\n      <DropdownContext.Provider value={{\n        onSelect,\n        menuClass: styles.appLauncherMenu,\n        itemClass: styles.appLauncherMenuItem,\n        toggleClass: styles.appLauncherToggle,\n        baseClass: styles.appLauncher,\n        baseComponent: 'nav',\n        sectionClass: styles.appLauncherGroup,\n        sectionTitleClass: styles.appLauncherGroupTitle,\n        sectionComponent: 'section',\n        disabledClass: styles.modifiers.disabled,\n        hoverClass: styles.modifiers.hover,\n        separatorClass: styles.appLauncherSeparator\n      }}>\n        <DropdownWithContext\n          {...props}\n          dropdownItems={items.length ? items : dropdownItems}\n          isOpen={isOpen}\n          className={className}\n          aria-label={ariaLabel}\n          toggle={\n            <DropdownToggle\n              iconComponent={null}\n              isOpen={isOpen}\n              onToggle={onToggle}\n              isDisabled={isDisabled}\n              aria-label={ariaLabel}\n            >\n              {toggleIcon}\n            </DropdownToggle>\n          }\n          isGrouped={isGrouped}\n        />\n      </DropdownContext.Provider>\n    );\n  }\n}\n"],"file":"ApplicationLauncher.js"}