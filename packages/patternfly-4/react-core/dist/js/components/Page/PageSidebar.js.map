{"version":3,"sources":["../../../../src/components/Page/PageSidebar.tsx"],"names":["PageSidebar","className","nav","isNavOpen","theme","props","isManagedSidebar","managedIsNavOpen","navOpen","styles","pageSidebar","modifiers","dark","expanded","collapsed","pageSidebarBody"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAkBO,IAAMA,WAAsD,GACjE,SADWA,WACX;AAAA,4BAAGC,SAAH;AAAA,MAAGA,SAAH,+BAAc,EAAd;AAAA,MAAkBC,GAAlB,QAAkBA,GAAlB;AAAA,4BAAuBC,SAAvB;AAAA,MAAuBA,SAAvB,+BAAkC,IAAlC;AAAA,wBAAwCC,KAAxC;AAAA,MAAwCA,KAAxC,2BAA+C,OAA/C;AAAA,MAA2DC,KAA3D;;AAAA,SACE,oBAAC,yBAAD,QACG,iBAAuE;AAAA,QAArEC,gBAAqE,SAArEA,gBAAqE;AAAA,QAAxCC,gBAAwC,SAAnDJ,SAAmD;AACtE,QAAMK,OAAO,GAAGF,gBAAgB,GAAGC,gBAAH,GAAsBJ,SAAtD;AAEA,WACE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,SAAS,EAAE,sBACTM,iBAAOC,WADE,EAETN,KAAK,KAAK,MAAV,IAAoBK,iBAAOE,SAAP,CAAiBC,IAF5B,EAGTJ,OAAO,IAAIC,iBAAOE,SAAP,CAAiBE,QAHnB,EAIT,CAACL,OAAD,IAAYC,iBAAOE,SAAP,CAAiBG,SAJpB,EAKTb,SALS;AAFb,OASMI,KATN,GAWE;AAAK,MAAA,SAAS,EAAE,sBAAII,iBAAOM,eAAX;AAAhB,OAA8Cb,GAA9C,CAXF,CADF;AAeD,GAnBH,CADF;AAAA,CADK;;;;AAdLD,EAAAA,S;AAEAC,EAAAA,G;AAKAI,EAAAA,gB;AAEAH,EAAAA,S;AAEAC,EAAAA,K,+BAAQ,M,EAAS,O","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { PageContextConsumer } from './Page';\n\nexport interface PageSidebarProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the page sidebar */\n  className?: string;\n  /** Component to render the side navigation (e.g. <Nav /> */\n  nav?: React.ReactNode;\n  /**\n   * If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\n   * the sidebar component or add a callback onNavToggle function into the PageHeader component\n   */\n  isManagedSidebar?: boolean;\n  /** Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed */\n  isNavOpen?: boolean;\n  /** Indicates the color scheme of the sidebar */\n  theme?: 'dark' | 'light'\n}\n\nexport const PageSidebar: React.FunctionComponent<PageSidebarProps> =\n  ({ className= '', nav, isNavOpen= true, theme= 'light', ...props }: PageSidebarProps) => (\n    <PageContextConsumer>\n      {({isManagedSidebar, isNavOpen: managedIsNavOpen}: PageSidebarProps) => {\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n        return (\n          <div\n            id=\"page-sidebar\"\n            className={css(\n              styles.pageSidebar,\n              theme === 'dark' && styles.modifiers.dark,\n              navOpen && styles.modifiers.expanded,\n              !navOpen && styles.modifiers.collapsed,\n              className\n            )}\n            {...props}\n          >\n            <div className={css(styles.pageSidebarBody)}>{nav}</div>\n          </div>\n        );\n      }}\n    </PageContextConsumer>\n);\n"],"file":"PageSidebar.js"}