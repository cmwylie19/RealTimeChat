{"version":3,"sources":["../../../../src/components/DataList/DataListCell.tsx"],"names":["DataListCell","children","className","width","isFilled","alignRight","isIcon","props","styles","dataListCell","modifiers","noFill","icon"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AAkBO,IAAMA,YAAwD,GAAG,SAA3DA,YAA2D;AAAA,2BACtEC,QADsE;AAAA,MACtEA,QADsE,8BAC3D,IAD2D;AAAA,4BAEtEC,SAFsE;AAAA,MAEtEA,SAFsE,+BAE1D,EAF0D;AAAA,wBAGtEC,KAHsE;AAAA,MAGtEA,KAHsE,2BAG9D,CAH8D;AAAA,2BAItEC,QAJsE;AAAA,MAItEA,QAJsE,8BAI3D,IAJ2D;AAAA,6BAKtEC,UALsE;AAAA,MAKtEA,UALsE,gCAKzD,KALyD;AAAA,yBAMtEC,MANsE;AAAA,MAMtEA,MANsE,4BAM7D,KAN6D;AAAA,MAOnEC,KAPmE;;AAAA,SAStE;AACE,IAAA,SAAS,EAAE,sBACTC,qBAAOC,YADE,EAETN,KAAK,GAAG,CAAR,IAAa,8BAAYK,oBAAZ,iBAA4BL,KAA5B,GAAqC,EAArC,CAFJ,EAGT,CAACC,QAAD,IAAaI,qBAAOE,SAAP,CAAiBC,MAHrB,EAITN,UAAU,IAAIG,qBAAOE,SAAP,CAAiBL,UAJtB,EAKTC,MAAM,IAAIE,qBAAOE,SAAP,CAAiBE,IALlB,EAMTV,SANS;AADb,KASMK,KATN,GAWGN,QAXH,CATsE;AAAA,CAAjE;;;;AAbLA,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,K,+BAAQ,C,EAAI,C,EAAI,C,EAAI,C,EAAI,C;AAExBC,EAAAA,Q;AAEAC,EAAAA,U;AAEAC,EAAAA,M","sourcesContent":["import * as React from 'react';\nimport { css, getModifier } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface DataListCellProps extends Omit<React.HTMLProps<HTMLDivElement>, 'width'> {\n  /** Content rendered inside the DataList cell */\n  children?: React.ReactNode;\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Width (from 1-5) to the DataList cell */\n  width?: 1 | 2 | 3 | 4 | 5;\n  /** Enables the body Content to fill the height of the card */\n  isFilled?: boolean;\n  /**  Aligns the cell content to the right of its parent. */\n  alignRight?: boolean;\n  /** Set to true if the cell content is an Icon */\n  isIcon?: boolean;\n}\n\nexport const DataListCell: React.FunctionComponent<DataListCellProps> = ({\n  children = null,\n  className = '',\n  width = 1,\n  isFilled = true,\n  alignRight = false,\n  isIcon = false,\n  ...props\n}: DataListCellProps) => (\n  <div\n    className={css(\n      styles.dataListCell,\n      width > 1 && getModifier(styles, `flex_${width}`, ''),\n      !isFilled && styles.modifiers.noFill,\n      alignRight && styles.modifiers.alignRight,\n      isIcon && styles.modifiers.icon,\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n"],"file":"DataListCell.js"}