{"version":3,"sources":["../../../../src/components/Badge/Badge.tsx"],"names":["React","css","styles","Badge","isRead","className","children","props","badge","modifiers","read","unread"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAWA,OAAO,MAAMC,KAA0C,GAAG;AAAA,MAAC;AACzDC,IAAAA,MAAM,GAAG,KADgD;AAEzDC,IAAAA,SAAS,GAAG,EAF6C;AAGzDC,IAAAA,QAAQ,GAAG;AAH8C,GAAD;AAAA,MAIrDC,KAJqD;;AAAA,SAKxD,yCAAUA,KAAV;AAAiB,IAAA,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACM,KAAR,EAAgBJ,MAAM,GAAGF,MAAM,CAACO,SAAP,CAAiBC,IAApB,GAA2BR,MAAM,CAACO,SAAP,CAAiBE,MAAlE,EAAkFN,SAAlF;AAA/B,MACGC,QADH,CALwD;AAAA,CAAnD;;AAPLF,EAAAA,M;AAEAE,EAAAA,Q;AAEAD,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\n\nexport interface BadgeProps extends React.HTMLProps<HTMLSpanElement> {\n  /**  Adds styling to the badge to indicate it has been read */\n  isRead?: boolean;\n  /** content rendered inside the Badge */\n  children?: React.ReactNode;\n  /** additional classes added to the Badge */\n  className?: string;\n}\n\nexport const Badge: React.FunctionComponent<BadgeProps> = ({\n  isRead = false,\n  className = '',\n  children = '',\n  ...props }: BadgeProps) => (\n  <span {...props} className={css(styles.badge, (isRead ? styles.modifiers.read : styles.modifiers.unread) as any, className)}>\n    {children}\n  </span>\n);\n"],"file":"Badge.js"}