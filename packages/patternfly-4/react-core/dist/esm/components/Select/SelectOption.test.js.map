{"version":3,"sources":["../../../../src/components/Select/SelectOption.test.tsx"],"names":["React","shallow","mount","SelectOption","SelectProvider","User","constructor","title","firstName","lastName","describe","test","view","onSelect","onClose","variant","jest","fn","expect","instance","props","toHaveProperty","toMatchSnapshot","find","hasClass","toBe"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { SelectOption, SelectOptionObject } from './SelectOption';\nimport { SelectProvider } from './selectConstants';\n\nclass User implements SelectOptionObject {\n  private firstName: string;\n  private lastName: string;\n  private title: string;\n\n  constructor(title: string, firstName: string, lastName: string) {\n    this.title = title;\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  toString = (): string => `${this.title}: ${this.firstName} ${this.lastName}`;\n}\n\ndescribe('select options', () => {\n  test('renders with value parameter successfully', () => {\n    const view = mount(\n      <SelectProvider value={{ onSelect: () => {}, onClose: () => {}, variant: 'single' }}>\n        <SelectOption value=\"test\" sendRef={jest.fn()} />\n      </SelectProvider>\n    );\n    expect(view.instance().props).toHaveProperty('value', 'test');\n    expect(view).toMatchSnapshot();\n  });\n\n  test('renders with custom display successfully', () => {\n    const view = mount(\n      <SelectProvider value={{ onSelect: () => {}, onClose: () => {}, variant: 'single' }}>\n        <SelectOption value=\"test\" sendRef={jest.fn()}>\n          <div>test display</div>\n        </SelectOption>\n      </SelectProvider>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('renders with custom user object successfully', () => {\n    const view = mount(\n      <SelectProvider value={{ onSelect: () => {}, onClose: () => {}, variant: 'single' }}>\n        <SelectOption value={new User('Mr.', 'Test', 'User')} sendRef={jest.fn()} />\n      </SelectProvider>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('renders with custom display and custom user object successfully', () => {\n    const view = mount(\n      <SelectProvider value={{ onSelect: () => {}, onClose: () => {}, variant: 'single' }}>\n        <SelectOption value={new User('Mr.', 'Test', 'User')} sendRef={jest.fn()}>\n          <div>test display</div>\n        </SelectOption>\n      </SelectProvider>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  describe('disabled', () => {\n    test('renders disabled successfully', () => {\n      const view = mount(\n        <SelectProvider value={{ onSelect: () => {}, onClose: () => {}, variant: 'single' }}>\n          <SelectOption isDisabled value=\"test\" sendRef={jest.fn()} />\n        </SelectProvider>\n      );\n      expect(view.find('button').hasClass('pf-m-disabled')).toBe(true);\n      expect(view).toMatchSnapshot();\n    });\n  });\n\n  describe('is selected', () => {\n    test('renders selected successfully', () => {\n      const view = shallow(<SelectOption isSelected value=\"test\" sendRef={jest.fn()} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n\n  describe('checked', () => {\n    test('renders with checked successfully', () => {\n      const view = shallow(<SelectOption isChecked value=\"test\" sendRef={jest.fn()} />);\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"SelectOption.test.js"}