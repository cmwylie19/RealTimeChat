{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorItem.tsx"],"names":["ContextSelectorItem","React","createRef","props","sendRef","index","ref","current","className","children","isHovered","onClick","isDisabled","onSelect","styles","contextSelectorMenuListItem","modifiers","disabled","hover","event","Component","undefined","Function","prototype"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBaA,mB;;;;;;;;;;;;;;;;;;0DAW+BC,KAAK,CAACC,SAAN,E;;;;;;;wCAEtB;AAClB;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAA9B,EAAqC,KAAKC,GAAL,CAASC,OAA9C;AACD;;;6BAEQ;AAAA;;AAAA,wBACmF,KAAKJ,KADxF;AAAA,UACCK,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,SADtB,eACsBA,SADtB;AAAA,UACiCC,QADjC,eACiCA,OADjC;AAAA,UAC0CC,UAD1C,eAC0CA,UAD1C;AAAA,UACsDP,KADtD,eACsDA,KADtD;AAAA,UAC6DD,OAD7D,eAC6DA,OAD7D;AAAA,UACyED,KADzE;;AAEP,aACE,oBAAC,gDAAD,CAAwB,QAAxB,QACG;AAAA,YAAGU,QAAH,QAAGA,QAAH;AAAA,eACC;AAAI,UAAA,IAAI,EAAC;AAAT,WACE;AACE,UAAA,SAAS,EAAE,sBACTC,4BAAOC,2BADE,EAETH,UAAU,IAAIE,4BAAOE,SAAP,CAAiBC,QAFtB,EAGTP,SAAS,IAAII,4BAAOE,SAAP,CAAiBE,KAHrB,EAITV,SAJS,CADb;AAOE,UAAA,GAAG,EAAE,MAAI,CAACF,GAPZ;AAQE,UAAA,OAAO,EAAE,iBAACa,KAAD,EAAW;AAClB,gBAAI,CAACP,UAAL,EAAiB;AACfD,cAAAA,QAAO,CAACQ,KAAD,CAAP;;AACAN,cAAAA,QAAQ,CAACM,KAAD,EAAQV,QAAR,CAAR;AACD;AACF;AAbH,WAcMN,KAdN,GAgBGM,QAhBH,CADF,CADD;AAAA,OADH,CADF;AA0BD;;;;EA9CsCR,KAAK,CAACmB,S;;;;gBAAlCpB,mB;AAhBXS,EAAAA,Q;AAEAD,EAAAA,S;AAEAI,EAAAA,U;AAGAF,EAAAA,S;AAEAC,EAAAA,O;AAEAN,EAAAA,K;AAEAD,EAAAA,O;;;gBAGWJ,mB,kBACW;AACpBS,EAAAA,QAAQ,EAAE,IADU;AAEpBD,EAAAA,SAAS,EAAE,EAFS;AAGpBE,EAAAA,SAAS,EAAE,KAHS;AAIpBE,EAAAA,UAAU,EAAE,KAJQ;AAKpBD,EAAAA,OAAO,EAAE;AAAA,WAAWU,SAAX;AAAA,GALW;AAMpBhB,EAAAA,KAAK,EAAEgB,SANa;AAOpBjB,EAAAA,OAAO,EAAEkB,QAAQ,CAACC;AAPE,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\n\nexport interface ContextSelectorItemProps {\n  /** Anything which can be rendered as Context Selector item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of the Context Selector item */\n  className?: string;\n  /** Render Context  Selector item as disabled */\n  isDisabled?: boolean;\n  // isSelected?\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Callback for click event */\n  onClick: (event: React.MouseEvent) => void;\n  /** internal index of the item */\n  index: number;\n  /** Internal callback for ref tracking */\n  sendRef: (index: number, current: any) => void;\n}\n\nexport class ContextSelectorItem extends React.Component<ContextSelectorItemProps> {\n  static defaultProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isHovered: false,\n    isDisabled: false,\n    onClick: (): any => undefined,\n    index: undefined as number,\n    sendRef: Function.prototype\n  };\n\n  ref: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n\n  render() {\n    const { className, children, isHovered, onClick, isDisabled, index, sendRef, ...props } = this.props;\n    return (\n      <ContextSelectorContext.Consumer>\n        {({ onSelect }) => (\n          <li role=\"none\">\n            <button\n              className={css(\n                styles.contextSelectorMenuListItem,\n                isDisabled && styles.modifiers.disabled,\n                isHovered && styles.modifiers.hover,\n                className\n              )}\n              ref={this.ref}\n              onClick={(event) => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, children);\n                }\n              }}\n              {...props}\n            >\n              {children}\n            </button>\n          </li>\n        )}\n      </ContextSelectorContext.Consumer>\n    );\n  }\n}\n"],"file":"ContextSelectorItem.js"}