{"version":3,"sources":["../../../../src/components/TopologyView/TopologyView.tsx"],"names":["React","Stack","StackItem","TopologyView","className","contextToolbar","viewToolbar","children","controlBar","sideBar","sideBarOpen","props","containerClasses"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,wBAAjC;AACA,OAAO,oEAAP;AAkBA,OAAO,MAAMC,YAAwD,GAAG,UAS/C;AAAA,MATgD;AACvEC,IAAAA,SAAS,GAAG,EAD2D;AAEvEC,IAAAA,cAAc,GAAG,IAFsD;AAGvEC,IAAAA,WAAW,GAAG,IAHyD;AAIvEC,IAAAA,QAAQ,GAAG,IAJ4D;AAKvEC,IAAAA,UAAU,GAAG,IAL0D;AAMvEC,IAAAA,OAAO,GAAG,IAN6D;AAOvEC,IAAAA,WAAW,GAAG;AAPyD,GAShD;AAAA,MADpBC,KACoB;;AACvB,QAAMC,gBAAgB,GACnB,GAAEH,OAAO,GAAG,qCAAH,GAA2C,EAAG,EAAxD,GACC,GAAEC,WAAW,GAAG,4CAAH,GAAkD,EAAG,EAFrE;AAIA,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEN;AAAlB,KAAiCO,KAAjC,GACGN,cAAc,IAAI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE;AAArB,KAA6BA,cAA7B,CADrB,EAEGC,WAAW,IAAI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE;AAArB,KAA6BA,WAA7B,CAFlB,EAGE,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAoB,IAAA,SAAS,EAAEM;AAA/B,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGL,QADH,EAEGC,UAAU,IAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2CA,UAA3C,CAFjB,CADF,EAKGC,OALH,CAHF,CADF;AAaD,CA3BM;;AAdLL,EAAAA,S;AAEAG,EAAAA,Q;AAEAF,EAAAA,c;AAEAC,EAAAA,W;AAEAE,EAAAA,U;AAEAC,EAAAA,O;AACAC,EAAAA,W","sourcesContent":["import * as React from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport '@patternfly/react-styles/css/components/Topology/topology-view.css';\n\nexport interface TopologyViewProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the view */\n  className?: string;\n  /** Topology inner container (canvas)  */\n  children?: React.ReactNode;\n  /** Context toolbar to be displayed at the top of the view, should contain components for changing context */\n  contextToolbar?: React.ReactNode;\n  /** View toolbar to be displayed below the context toolbar, should contain components for changing view contents */\n  viewToolbar?: React.ReactNode;\n  /** Topology control bar (typically a TopologyControlBar), used to manipulate the graph layout */\n  controlBar?: React.ReactNode;\n  /** Topology side bar (typically a TopologySideBar), used to display information for elements in graph */\n  sideBar?: React.ReactNode;\n  sideBarOpen?: boolean;\n}\n\nexport const TopologyView: React.FunctionComponent<TopologyViewProps> = ({\n  className = '',\n  contextToolbar = null,\n  viewToolbar = null,\n  children = null,\n  controlBar = null,\n  sideBar = null,\n  sideBarOpen = false,\n  ...props\n}: TopologyViewProps) => {\n  const containerClasses =\n    `${sideBar ? 'pf-topology-container__with-sidebar' : ''}` +\n    `${sideBarOpen ? ' pf-topology-container__with-sidebar--open' : ''}`;\n\n  return (\n    <Stack className={className} {...props}>\n      {contextToolbar && <StackItem isFilled={false}>{contextToolbar}</StackItem>}\n      {viewToolbar && <StackItem isFilled={false}>{viewToolbar}</StackItem>}\n      <StackItem isFilled className={containerClasses}>\n        <div className=\"pf-topology-content\">\n          {children}\n          {controlBar && <span className=\"pf-topology-control-bar\">{controlBar}</span>}\n        </div>\n        {sideBar}\n      </StackItem>\n    </Stack>\n  );\n};\n"],"file":"TopologyView.js"}