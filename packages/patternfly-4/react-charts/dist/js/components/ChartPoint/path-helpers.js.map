{"version":3,"sources":["../../../../src/components/ChartPoint/path-helpers.ts"],"names":["PathHelpers","circle","x","y","size","square","baseSize","x0","y1","distance","diamond","length","Math","sqrt","triangleDown","height","x1","y0","triangleUp","plus","minus","lineHeight","star","angle","PI","range","starCoords","map","index","sin","cos","join","dash","padding","threshold"],"mappings":"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","sourcesContent":["export const PathHelpers = {\n  circle(x: number, y: number, size: number) {\n    return `M ${x}, ${y}\n      m ${-size}, 0\n      a ${size}, ${size} 0 1,0 ${size * 2},0\n      a ${size}, ${size} 0 1,0 ${-size * 2},0`;\n  },\n\n  square(x: number, y: number, size: number) {\n    const baseSize = 0.87 * size;\n    const x0 = x - baseSize;\n    const y1 = y + baseSize;\n    const distance = x + baseSize - x0;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${distance}\n      h-${distance}\n      z`;\n  },\n\n  diamond(x: number, y: number, size: number) {\n    const baseSize = 0.87 * size;\n    const length = Math.sqrt(2 * (baseSize * baseSize));\n    return `M ${x}, ${y + length}\n      l ${length}, -${length}\n      l -${length}, -${length}\n      l -${length}, ${length}\n      l ${length}, ${length}\n      z`;\n  },\n\n  triangleDown(x: number, y: number, size: number) {\n    const height = (size / 2) * Math.sqrt(3);\n    const x0 = x - size;\n    const x1 = x + size;\n    const y0 = y - size;\n    const y1 = y + height;\n    return `M ${x0}, ${y0}\n      L ${x1}, ${y0}\n      L ${x}, ${y1}\n      z`;\n  },\n\n  triangleUp(x: number, y: number, size: number) {\n    const height = (size / 2) * Math.sqrt(3);\n    const x0 = x - size;\n    const x1 = x + size;\n    const y0 = y - height;\n    const y1 = y + size;\n    return `M ${x0}, ${y1}\n      L ${x1}, ${y1}\n      L ${x}, ${y0}\n      z`;\n  },\n\n  plus(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const distance = baseSize / 1.5;\n    return `\n      M ${x - distance / 2}, ${y + baseSize}\n      v-${distance}\n      h-${distance}\n      v-${distance}\n      h${distance}\n      v-${distance}\n      h${distance}\n      v${distance}\n      h${distance}\n      v${distance}\n      h-${distance}\n      v${distance}\n      z`;\n  },\n\n  minus(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = x + baseSize - x0;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  },\n\n  star(x: number, y: number, size: number) {\n    const baseSize = 1.35 * size;\n    const angle = Math.PI / 5;\n    const range = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const starCoords = range.map((index) => {\n      const length = index % 2 === 0 ? baseSize : baseSize / 2;\n      return `${length * Math.sin(angle * (index + 1)) + x},\n        ${length * Math.cos(angle * (index + 1)) + y}`;\n    });\n    return `M ${starCoords.join('L')} z`;\n  },\n\n  dash(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = (x + baseSize - x0) * 0.3;\n    const padding = distance / 3;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance * 2 + padding * 2}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  },\n\n  threshold(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = (x + baseSize - x0) * 0.5;\n    const padding = distance / 3;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  }\n};\n"],"file":"path-helpers.js"}