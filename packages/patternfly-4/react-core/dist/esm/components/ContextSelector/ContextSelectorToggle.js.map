{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorToggle.tsx"],"names":["React","CaretDownIcon","styles","css","KEY_CODES","ContextSelectorToggle","Component","createRef","document","addEventListener","onDocClick","onEscPress","removeEventListener","event","isOpen","parentRef","onToggle","props","contains","target","toggle","current","focus","keyCode","which","ESCAPE_KEY","onEnter","TAB","key","ENTER","preventDefault","SPACE","render","className","toggleText","isFocused","isActive","isHovered","id","contextSelectorToggle","modifiers","hover","active","onKeyDown","contextSelectorToggleText","contextSelectorToggleIcon","undefined","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { KEY_CODES } from '../../helpers/constants';\n\nexport interface ContextSelectorToggleProps {\n  /** HTML ID of toggle */\n  id: string;\n  /** Classes applied to root element of toggle */\n  className?: string;\n  /** Text that appears in the Context Selector Toggle */\n  toggleText?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** Callback called when toggle is clicked */\n  onToggle?: (event: any, value: boolean) => void;\n  /** Callback for toggle open on keyboard entry */\n  onEnter: () => void;\n  /** Element which wraps toggle */\n  parentRef?: any;\n  /** Forces focus state */\n  isFocused?: boolean;\n  /** Forces hover state */\n  isHovered?: boolean;\n  /** Forces active state */\n  isActive?: boolean;\n}\n\nexport class ContextSelectorToggle extends React.Component<ContextSelectorToggleProps> {\n  static defaultProps = {\n    className: '',\n    toggleText: '',\n    isOpen: false,\n    onEnter: () => undefined as any,\n    parentRef: null as any,\n    isFocused: false,\n    isHovered: false,\n    isActive: false,\n    onToggle: (event: any, value: boolean) => undefined as any\n  };\n\n  toggle: React.RefObject<HTMLButtonElement> = React.createRef();\n\n  componentDidMount = () => {\n    document.addEventListener('mousedown', this.onDocClick);\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.onEscPress);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('mousedown', this.onDocClick);\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.onEscPress);\n  }\n\n  onDocClick = (event: any) => {\n    const { isOpen, parentRef, onToggle } = this.props;\n    if (isOpen && parentRef && !parentRef.contains(event.target)) {\n      onToggle(null, false);\n      this.toggle.current.focus();\n    }\n  }\n\n  onEscPress = (event: any) => {\n    const { isOpen, parentRef, onToggle } = this.props;\n    const keyCode = event.keyCode || event.which;\n    if (isOpen && keyCode === KEY_CODES.ESCAPE_KEY && parentRef && parentRef.contains(event.target)) {\n      onToggle(null, false);\n      this.toggle.current.focus();\n    }\n  }\n\n  onKeyDown = (event: any) => {\n    const { isOpen, onToggle, onEnter } = this.props;\n    if ((event.keyCode === KEY_CODES.TAB && !isOpen) || event.key !== KEY_CODES.ENTER) { return; }\n    event.preventDefault();\n    if (\n      (event.keyCode === KEY_CODES.TAB || event.keyCode === KEY_CODES.ENTER || event.key !== KEY_CODES.SPACE) &&\n      isOpen\n    ) {\n      onToggle(null, !isOpen);\n    } else if ((event.keyCode === KEY_CODES.ENTER || event.key === ' ') && !isOpen) {\n      onToggle(null, !isOpen);\n      onEnter();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      toggleText,\n      isOpen,\n      isFocused,\n      isActive,\n      isHovered,\n      onToggle,\n      onEnter,\n      parentRef,\n      id,\n      ...props\n    } = this.props;\n    return (\n      <button\n        {...props}\n        id={id}\n        ref={this.toggle}\n        className={css(\n          styles.contextSelectorToggle,\n          isFocused && styles.modifiers.focus,\n          isHovered && styles.modifiers.hover,\n          isActive && styles.modifiers.active,\n          className\n        )}\n        type=\"button\"\n        onClick={(event) => onToggle(event, !isOpen)}\n        aria-expanded={isOpen}\n        onKeyDown={this.onKeyDown}\n      >\n        <span className={css(styles.contextSelectorToggleText)}>{toggleText}</span>\n        <CaretDownIcon className={css(styles.contextSelectorToggleIcon)} aria-hidden />\n      </button>\n    );\n  }\n}\n"],"file":"ContextSelectorToggle.js"}