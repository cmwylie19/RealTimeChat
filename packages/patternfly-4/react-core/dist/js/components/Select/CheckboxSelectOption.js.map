{"version":3,"sources":["../../../../src/components/Select/CheckboxSelectOption.tsx"],"names":["CheckboxSelectOption","React","createRef","event","key","KeyTypes","Tab","preventDefault","ArrowUp","props","keyHandler","index","ArrowDown","Enter","ref","current","click","focus","sendRef","children","className","value","onClick","isDisabled","isChecked","onSelect","checkStyles","check","styles","selectMenuItem","modifiers","disabled","onKeyDown","checkInput","checkLabel","Component","Function","prototype"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport { default as checkStyles } from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { SelectConsumer, KeyTypes } from './selectConstants';\n\nexport interface CheckboxSelectOptionProps extends React.HTMLProps<HTMLLabelElement> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Internal index of the option */\n  index?: number;\n  /** The value for the option */\n  value: string;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, index: number) => void;\n  /** Internal callback for keyboard navigation */\n  keyHandler?: (index: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\n\nexport class CheckboxSelectOption extends React.Component<CheckboxSelectOptionProps> {\n  private ref = React.createRef<any>();\n  static defaultProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isChecked: false,\n    onClick: Function.prototype,\n    sendRef: Function.prototype,\n    keyHandler: Function.prototype\n  };\n\n  componentDidMount() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(this.ref.current, this.props.index);\n  }\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KeyTypes.Tab) {\n      return;\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      this.props.keyHandler(this.props.index, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      this.props.keyHandler(this.props.index, 'down');\n    } else if (event.key === KeyTypes.Enter) {\n      this.ref.current.click();\n      this.ref.current.focus();\n    }\n  }\n\n  render() {\n    const { children, className, value, onClick, isDisabled, isChecked, sendRef, keyHandler, index, ...props } = this.props;\n    return (\n      <SelectConsumer>\n        {({ onSelect }) => (\n          <label\n            {...props}\n            className={css(\n              checkStyles.check,\n              styles.selectMenuItem,\n              isDisabled && styles.modifiers.disabled,\n              className\n            )}\n            onKeyDown={this.onKeyDown}\n          >\n            <input\n              id={value}\n              className={css(checkStyles.checkInput)}\n              type=\"checkbox\"\n              onChange={(event) => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, value);\n                }\n              }}\n              ref={this.ref}\n              defaultChecked={isChecked || false}\n              disabled={isDisabled}\n            />\n            <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{children || value}</span>\n          </label>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"],"file":"CheckboxSelectOption.js"}