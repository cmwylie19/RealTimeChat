{"version":3,"sources":["../../../../../src/experimental/components/DataToolbar/DataToolbarUtils.tsx"],"names":["React","DataToolbarContext","createContext","formatSpacers","spacers","type","reduce","acc","curr","spacerSize","breakpoint"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAUA,OAAO,MAAMC,kBAAkB,GAAGD,KAAK,CAACE,aAAN,CAAsD,EAAtD,CAA3B;AAgBP,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAA+BC,IAAI,GAAG,aAAtC,KAAwD;AAEnF,SAAOD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KACnB,GAAED,GAAI,IAAGF,IAAK,IAAGG,IAAI,CAACC,UAAW,GAAED,IAAI,CAACE,UAAL,GAAmB,OAAMF,IAAI,CAACE,UAAW,EAAzC,GAA6C,EAAG,EAD/E,EAEJ,EAFI,CAAP;AAGD,CALM","sourcesContent":["import * as React from 'react';\nimport { RefObject } from 'react';\n\ninterface DataToolbarContextProps {\n  isExpanded: boolean;\n  toggleIsExpanded: () => void;\n  expandableContentRef: RefObject<HTMLDivElement>;\n  expandableContentId: string;\n}\n\nexport const DataToolbarContext = React.createContext<Partial<DataToolbarContextProps>>({});\n\nexport type DataToolbarBreakpointMod = {\n  /** The attribute to modify  */\n  modifier: 'hidden' | 'visible' | 'align-right' | 'align-left';\n  /** The breakpoint at which to apply the modifier */\n  breakpoint: 'md' | 'lg' | 'xl' | '2xl';\n};\n\nexport type DataToolbarSpacer = {\n  /** The size of the spacer */\n  spacerSize: 'none' | 'sm' | 'md' | 'lg';\n  /** The breakpoint at which to apply the spacer */\n  breakpoint?: 'md' | 'lg' | 'xl';\n};\n\nexport const formatSpacers = (spacers: DataToolbarSpacer[], type = 'pf-m-spacer') => {\n\n  return spacers.reduce((acc, curr) => (\n    `${acc} ${type}-${curr.spacerSize}${curr.breakpoint ? `-on-${curr.breakpoint}` : ''}`\n  ), '');\n};\n"],"file":"DataToolbarUtils.js"}