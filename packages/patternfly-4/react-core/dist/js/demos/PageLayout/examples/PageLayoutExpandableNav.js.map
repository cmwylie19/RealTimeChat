{"version":3,"sources":["../../../../../src/demos/PageLayout/examples/PageLayoutExpandableNav.js"],"names":["PageLayoutExpandableNav","props","isDropdownOpen","setState","event","state","isKebabDropdownOpen","result","activeItem","itemId","activeGroup","groupId","PageNav","onNavSelect","kebabDropdownItems","userDropdownItems","PageToolbar","accessibleStyles","screenReader","visibleOnLg","ButtonVariant","plain","hiddenOnLg","spacingStyles","mr_0","onKebabDropdownSelect","onKebabDropdownToggle","visibleOnMd","onDropdownSelect","onDropdownToggle","Header","imgBrand","imgAvatar","Sidebar","PageBreadcrumb","pageId","PageSkipToContent","PageSectionVariants","light","Array","apply","map","x","i","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\n// make sure you've installed @patternfly/patternfly\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport spacingStyles from '@patternfly/react-styles/css/utilities/Spacing/spacing';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport imgBrand from './imgBrand.png';\nimport imgAvatar from './imgAvatar.svg';\n\nclass PageLayoutExpandableNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeGroup: 'grp-1',\n      activeItem: 'grp-1_itm-1'\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  }\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  }\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  }\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  }\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId,\n      activeGroup: result.groupId\n    });\n  }\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" theme=\"dark\">\n        <NavList>\n          <NavExpandable title=\"System Panel\" groupId=\"grp-1\" isActive={activeGroup === 'grp-1'} isExpanded>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'}>\n              Overview\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'}>\n              Resource Usage\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'}>\n              Hypervisors\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'}>\n              Instances\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'}>\n              Volumes\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'}>\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Policy\" groupId=\"grp-2\" isActive={activeGroup === 'grp-2'}>\n            <NavItem groupId=\"grp-2\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem groupId=\"grp-2\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Authentication\" groupId=\"grp-3\" isActive={activeGroup === 'grp-3'}>\n            <NavItem groupId=\"grp-3\" itemId=\"grp-3_itm-1\" isActive={activeItem === 'grp-3_itm-1'}>\n              Subnav Link 1\n            </NavItem>\n            <NavItem groupId=\"grp-3\" itemId=\"grp-3_itm-2\" isActive={activeItem === 'grp-3_itm-2'}>\n              Subnav Link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <BellIcon /> Notifications\n      </DropdownItem>,\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownItem>Link</DropdownItem>,\n      <DropdownItem component=\"button\">Action</DropdownItem>,\n      <DropdownItem isDisabled>Disabled Link</DropdownItem>,\n      <DropdownItem isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator />,\n      <DropdownItem>Separated Link</DropdownItem>,\n      <DropdownItem component=\"button\">Separated Action</DropdownItem>\n    ];\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"expanded-example-uid-01\" aria-label=\"Notifications actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"expanded-example-uid-02\" aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={imgAvatar} alt=\"Avatar image\" />}\n        showNavToggle\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} theme=\"dark\" />;\n    const PageBreadcrumb = (\n      <Breadcrumb>\n        <BreadcrumbItem>Section Home</BreadcrumbItem>\n        <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n        <BreadcrumbItem to=\"#\">Section Title</BreadcrumbItem>\n        <BreadcrumbItem to=\"#\" isActive>\n          Section Landing\n        </BreadcrumbItem>\n      </Breadcrumb>\n    );\n    const pageId = 'main-content-page-layout-expandable-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          breadcrumb={PageBreadcrumb}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutExpandableNav;\n"],"file":"PageLayoutExpandableNav.js"}