{"version":3,"sources":["../../../../src/components/List/List.tsx"],"names":["ListVariant","List","className","children","variant","props","styles","list","modifiers"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;IAEYA,W;;;WAAAA,W;AAAAA,EAAAA,W;GAAAA,W,2BAAAA,W;;AAaL,IAAMC,IAAwC,GAAG,SAA3CA,IAA2C;AAAA,4BACtDC,SADsD;AAAA,MACtDA,SADsD,+BAC1C,EAD0C;AAAA,2BAEtDC,QAFsD;AAAA,MAEtDA,QAFsD,8BAE3C,IAF2C;AAAA,0BAGtDC,OAHsD;AAAA,MAGtDA,OAHsD,6BAG5C,IAH4C;AAAA,MAInDC,KAJmD;;AAAA,SAMtD,uCAAQA,KAAR;AAAe,IAAA,SAAS,EAAE,sBAAIC,iBAAOC,IAAX,EAAiBH,OAAO,IAAI,8BAAYE,iBAAOE,SAAnB,EAA8BJ,OAA9B,CAA5B,EAAoEF,SAApE;AAA1B,MACGC,QADH,CANsD;AAAA,CAAjD;;;;AAPLA,EAAAA,Q;AAEAD,EAAAA,S;AAEAE,EAAAA,O,+BAAU,Q","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/List/list';\nimport { css, getModifier } from '@patternfly/react-styles';\n\nexport enum ListVariant {\n  inline = 'inline'\n}\n\nexport interface ListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Anything that can be rendered inside of the list */\n  children?: React.ReactNode;\n  /** Additional classes added to the list. */\n  className?: string;\n  /** Adds list variant styles */\n  variant?: 'inline';\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  className = '',\n  children = null,\n  variant = null,\n  ...props\n}) => (\n  <ul {...props} className={css(styles.list, variant && getModifier(styles.modifiers, variant), className)}>\n    {children}\n  </ul>\n);\n"],"file":"List.js"}