{"version":3,"sources":["../../../../../src/components/ChartBullet/utils/chart-bullet-theme.ts"],"names":["getLegendColorScale","computedData","legendData","colorScale","forEach","data","index","i","length","_index","push","_color","getColorScale","comparativeErrorMeasureData","comparativeErrorMeasureLegendData","comparativeWarningMeasureData","comparativeWarningMeasureLegendData","invert","primaryDotMeasureData","primaryDotMeasureLegendData","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","qualitativeRangeLegendData","themeColor","themeVariant","getBulletThemeWithLegendColorScale","theme","legend"],"mappings":"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","sourcesContent":["import {\n  getPrimaryDotMeasureData,\n  getComparativeErrorMeasureData,\n  getComparativeWarningMeasureData,\n  getPrimarySegmentedMeasureData,\n  getQualitativeRangeData\n}  from './chart-bullet-data';\nimport { ChartThemeDefinition } from '../../ChartTheme';\nimport { getBulletTheme } from '../../ChartUtils';\n\ninterface ChartBulletThemeInterface {\n  comparativeErrorMeasureData?: any[];\n  comparativeErrorMeasureLegendData?: any[];\n  comparativeWarningMeasureData?: any[];\n  comparativeWarningMeasureLegendData?: any[];\n  invert?: boolean;\n  primaryDotMeasureData?: any[];\n  primaryDotMeasureLegendData?: any[];\n  primarySegmentedMeasureData?: any[];\n  primarySegmentedMeasureLegendData?: any[];\n  qualitativeRangeData?: any[];\n  qualitativeRangeLegendData?: any[];\n  themeColor?: string;\n  themeVariant?: string;\n}\n\nconst getLegendColorScale = (computedData: any, legendData: any) => {\n  const colorScale: string[] = [];\n  legendData.forEach((data: any, index: number) => {\n    for (let i = 0; i < computedData.length; i++) {\n      if (index === computedData[i]._index) {\n        colorScale.push(computedData[i]._color);\n      }\n    }\n  });\n  return colorScale;\n};\n\nexport const getColorScale = ({\n  comparativeErrorMeasureData,\n  comparativeErrorMeasureLegendData,\n  comparativeWarningMeasureData,\n  comparativeWarningMeasureLegendData,\n  invert,\n  primaryDotMeasureData,\n  primaryDotMeasureLegendData,\n  primarySegmentedMeasureData,\n  primarySegmentedMeasureLegendData,\n  qualitativeRangeData,\n  qualitativeRangeLegendData,\n  themeColor,\n  themeVariant\n}: ChartBulletThemeInterface): any[] => {\n  const colorScale: any[] = [];\n  if (primaryDotMeasureLegendData && primaryDotMeasureLegendData.length) {\n    const computedData = getPrimaryDotMeasureData({\n      data: primaryDotMeasureData,\n      invert\n    });\n    colorScale.push(...getLegendColorScale(computedData, primaryDotMeasureLegendData));\n  }\n  if (primarySegmentedMeasureLegendData && primarySegmentedMeasureLegendData.length) {\n    const computedData = getPrimarySegmentedMeasureData({\n      data: primarySegmentedMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, primarySegmentedMeasureLegendData));\n  }\n  if (comparativeWarningMeasureLegendData && comparativeWarningMeasureLegendData.length) {\n    const computedData = getComparativeWarningMeasureData({\n      data: comparativeWarningMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, comparativeWarningMeasureLegendData));\n  }\n  if (comparativeErrorMeasureLegendData && comparativeErrorMeasureLegendData.length) {\n    const computedData = getComparativeErrorMeasureData({\n      data: comparativeErrorMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, comparativeErrorMeasureLegendData));\n  }\n  if (qualitativeRangeLegendData && qualitativeRangeLegendData.length) {\n    const computedData = getQualitativeRangeData({\n      data: qualitativeRangeData,\n      invert\n    });\n    colorScale.push(...getLegendColorScale(computedData, qualitativeRangeLegendData));\n  }\n  return colorScale;\n};\n\n// Get bullet chart theme with legend color scale\nexport const getBulletThemeWithLegendColorScale = ({\n  comparativeErrorMeasureData,\n  comparativeErrorMeasureLegendData,\n  comparativeWarningMeasureData,\n  comparativeWarningMeasureLegendData,\n  invert,\n  primaryDotMeasureData,\n  primaryDotMeasureLegendData,\n  primarySegmentedMeasureData,\n  primarySegmentedMeasureLegendData,\n  qualitativeRangeData,\n  qualitativeRangeLegendData,\n  themeColor,\n  themeVariant\n}: ChartBulletThemeInterface): ChartThemeDefinition => {\n  const colorScale = getColorScale({\n    comparativeErrorMeasureData,\n    comparativeErrorMeasureLegendData,\n    comparativeWarningMeasureData,\n    comparativeWarningMeasureLegendData,\n    invert,\n    primaryDotMeasureData,\n    primaryDotMeasureLegendData,\n    primarySegmentedMeasureData,\n    primarySegmentedMeasureLegendData,\n    qualitativeRangeData,\n    qualitativeRangeLegendData,\n    themeColor,\n    themeVariant});\n\n  const theme = getBulletTheme(themeColor, themeVariant);\n  theme.legend.colorScale = [...colorScale];\n  return theme;\n};\n"],"file":"chart-bullet-theme.js"}