{"version":3,"sources":["../../../../src/components/InlineEdit/ConfirmButtons.js"],"names":["buttonsTopPosition","window","rowDimensions","bold","boldShift","bottom","height","top","right","width","buttonsBottomPosition","ConfirmButtons","messages","confirmButtonLabel","cancelButtonLabel","onConfirm","onCancel","environment","buttonsOnTop","boldBorder","row","positionStyle","className","styles","tableInlineEditButtons","modifiers","defaultProps","undefined","propTypes","PropTypes","func","shape","number","left","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nimport { CancelButton } from '../CancelButton';\nimport { ConfirmButton } from '../ConfirmButton';\nimport '@patternfly/react-styles/css/components/Table/inline-edit.css';\nimport { inlineEditStyles as styles } from './css/inline-edit-css';\n\nconst buttonsTopPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    bottom: window.height - rowDimensions.top - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst buttonsBottomPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    top: rowDimensions.bottom - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst ConfirmButtons = ({\n  messages: { confirmButtonLabel, cancelButtonLabel },\n  onConfirm,\n  onCancel,\n  environment,\n  buttonsOnTop,\n  boldBorder\n}) => {\n  if (environment == null) {\n    return null;\n  }\n  const { window, row } = environment;\n\n  const positionStyle = buttonsOnTop\n    ? buttonsTopPosition(window, row, boldBorder)\n    : buttonsBottomPosition(window, row, boldBorder);\n\n  const className = css(\n    styles.tableInlineEditButtons,\n    buttonsOnTop ? styles.modifiers.top : styles.modifiers.bottom,\n    boldBorder && styles.modifiers.bold\n  );\n\n  return (\n    <div style={positionStyle} className={className} key=\"confirmButtons\">\n      <ConfirmButton key=\"confirm\" aria-label={confirmButtonLabel} onMouseUp={onConfirm} />\n      <CancelButton key=\"cancel\" aria-label={cancelButtonLabel} onMouseUp={onCancel} />\n    </div>\n  );\n};\n\nConfirmButtons.defaultProps = {\n  onConfirm: () => undefined,\n  onCancel: () => undefined,\n  buttonsOnTop: false,\n  boldBorder: false,\n  environment: undefined,\n  messages: {\n    confirmButtonLabel: 'Save',\n    cancelButtonLabel: 'Cancel'\n  }\n};\n\nConfirmButtons.propTypes = {\n  /** Confirm edit callback */\n  onConfirm: PropTypes.func,\n  /** Cancel edit callback */\n  onCancel: PropTypes.func,\n  /** Inject confirm buttons positions */\n  environment: PropTypes.shape({\n    window: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    row: PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number\n    })\n  }),\n  buttonsOnTop: PropTypes.bool,\n  boldBorder: PropTypes.bool,\n  messages: PropTypes.shape({\n    confirmButtonLabel: PropTypes.string,\n    cancelButtonLabel: PropTypes.string\n  })\n};\n\nexport default ConfirmButtons;\n"],"file":"ConfirmButtons.js"}