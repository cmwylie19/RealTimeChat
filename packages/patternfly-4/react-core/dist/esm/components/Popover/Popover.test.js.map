{"version":3,"sources":["../../../../src/components/Popover/Popover.test.tsx"],"names":["React","shallow","Popover","PopoverPosition","test","view","expect","toMatchSnapshot","right","duration","offset"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,WAAzC;AAEAC,IAAI,CAAC,+CAAD,EAAkD,MAAM;AAC1D,QAAMC,IAAI,GAAGJ,OAAO,CAClB,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,aAAa,EAAE,kDAJjB;AAKE,IAAA,WAAW,EACT;AANJ,KAWE,kDAXF,CADkB,CAApB;AAeAK,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAjBG,CAAJ;AAmBAH,IAAI,CAAC,8CAAD,EAAiD,MAAM;AACzD,QAAMC,IAAI,GAAGJ,OAAO,CAClB,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEE,eAAe,CAACK,KAD5B;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,aAAa,EAAE,kDAJjB;AAKE,IAAA,WAAW,EACT;AANJ,KAWE,kDAXF,CADkB,CAApB;AAeAF,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAjBG,CAAJ;AAmBAH,IAAI,CAAC,yCAAD,EAA4C,MAAM;AACpD,QAAMC,IAAI,GAAGJ,OAAO,CAClB,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEE,eAAe,CAACK,KAD5B;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,aAAa,EAAE,kDAJjB;AAKE,IAAA,WAAW,EACT,2IANJ;AAUE,IAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,CADA;AAEVC,MAAAA,MAAM,EAAE;AAFE;AAVd,KAeE,oDAfF,CADkB,CAApB;AAmBAJ,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CArBG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\nimport { Popover, PopoverPosition } from './Popover';\n\ntest('popover renders close-button, header and body', () => {\n  const view = shallow(\n    <Popover\n      position=\"top\"\n      isVisible\n      hideOnOutsideClick\n      headerContent={<div>Popover Header</div>}\n      bodyContent={\n        <div>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\n        </div>\n      }\n    >\n      <div>Toggle Popover</div>\n    </Popover>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('popover can specify position as object value', () => {\n  const view = shallow(\n    <Popover\n      position={PopoverPosition.right}\n      isVisible\n      hideOnOutsideClick\n      headerContent={<div>Popover Header</div>}\n      bodyContent={\n        <div>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\n        </div>\n      }\n    >\n      <div>Toggle Popover</div>\n    </Popover>\n  );\n  expect(view).toMatchSnapshot();\n});\n\ntest('popover passes along values to tippy.js', () => {\n  const view = shallow(\n    <Popover\n      position={PopoverPosition.right}\n      isVisible\n      hideOnOutsideClick\n      headerContent={<div>Popover Header</div>}\n      bodyContent={\n        <div>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\n        </div>\n      }\n      tippyProps={{\n        duration: [200, 200],\n        offset: 20\n      }}\n    >\n      <div>Tippy Props Test</div>\n    </Popover>\n  );\n  expect(view).toMatchSnapshot();\n});\n"],"file":"Popover.test.js"}