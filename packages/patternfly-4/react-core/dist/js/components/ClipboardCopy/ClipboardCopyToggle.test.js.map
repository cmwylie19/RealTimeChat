{"version":3,"sources":["../../../../src/components/ClipboardCopy/ClipboardCopyToggle.test.tsx"],"names":["props","id","textId","contentId","isExpanded","className","onClick","jest","fn","test","desc","view","expect","toMatchSnapshot","onclick","find","simulate","toBeCalled","toBe"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,OADQ;AAEZC,EAAAA,MAAM,EAAE,YAFI;AAGZC,EAAAA,SAAS,EAAE,eAHC;AAIZC,EAAAA,UAAU,EAAE,KAJA;AAKZC,EAAAA,SAAS,EAAE,aALC;AAMZC,EAAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AANG,CAAd;AASAC,IAAI,CAAC,sBAAD,EAAyB,YAAM;AACjC,MAAMC,IAAI,GAAG,gBAAb;AACA,MAAMC,IAAI,GAAG,qBAAQ,gCAAC,wCAAD,eAAyBX,KAAzB;AAAgC,kBAAYU;AAA5C,KAAR,CAAb;AACAE,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAJG,CAAJ;AAMAJ,IAAI,CAAC,uBAAD,EAA0B,YAAM;AAClC,MAAMK,OAAO,GAAGP,IAAI,CAACC,EAAL,EAAhB;AACA,MAAMG,IAAI,GAAG,qBAAQ,gCAAC,wCAAD,eAAyBX,KAAzB;AAAgC,IAAA,OAAO,EAAEc;AAAzC,KAAR,CAAb;AACAH,EAAAA,IAAI,CAACI,IAAL,CAAU,QAAV,EAAoBC,QAApB,CAA6B,OAA7B;AACAJ,EAAAA,MAAM,CAACE,OAAD,CAAN,CAAgBG,UAAhB;AACD,CALG,CAAJ;AAOAR,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,MAAIE,IAAI,GAAG,qBAAQ,gCAAC,wCAAD,eAAyBX,KAAzB;AAAgC,IAAA,UAAU;AAA1C,KAAR,CAAX;AACAY,EAAAA,MAAM,CAACD,IAAI,CAACX,KAAL,GAAa,eAAb,CAAD,CAAN,CAAsCkB,IAAtC,CAA2C,IAA3C;AACAP,EAAAA,IAAI,GAAG,qBAAQ,gCAAC,wCAAD,eAAyBX,KAAzB;AAAgC,IAAA,UAAU,EAAE;AAA5C,KAAR,CAAP;AACAY,EAAAA,MAAM,CAACD,IAAI,CAACX,KAAL,GAAa,eAAb,CAAD,CAAN,CAAsCkB,IAAtC,CAA2C,KAA3C;AACD,CALG,CAAJ","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\n\nconst props = {\n  id: 'my-id',\n  textId: 'my-text-id',\n  contentId: 'my-content-id',\n  isExpanded: false,\n  className: 'myclassName',\n  onClick: jest.fn()\n};\n\ntest('toggle button render', () => {\n  const desc = 'toggle content';\n  const view = shallow(<ClipboardCopyToggle {...props} aria-label={desc} />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('toggle button onClick', () => {\n  const onclick = jest.fn();\n  const view = shallow(<ClipboardCopyToggle {...props} onClick={onclick} />);\n  view.find('button').simulate('click');\n  expect(onclick).toBeCalled();\n});\n\ntest('toggle button is on expanded mode', () => {\n  let view = shallow(<ClipboardCopyToggle {...props} isExpanded />);\n  expect(view.props()['aria-expanded']).toBe(true);\n  view = shallow(<ClipboardCopyToggle {...props} isExpanded={false} />);\n  expect(view.props()['aria-expanded']).toBe(false);\n});\n"],"file":"ClipboardCopyToggle.test.js"}