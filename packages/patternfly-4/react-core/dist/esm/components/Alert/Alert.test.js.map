{"version":3,"sources":["../../../../src/components/Alert/Alert.test.tsx"],"names":["React","mount","shallow","Alert","AlertVariant","AlertActionLink","AlertActionCloseButton","test","view","expect","props","className","toMatch","Object","values","forEach","variant","describe","toMatchSnapshot","onClose","jest","fn","find","simulate","toHaveBeenCalled"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { mount, shallow } from 'enzyme';\n\nimport { Alert, AlertVariant } from './Alert';\nimport { AlertActionLink }  from './AlertActionLink';\nimport { AlertActionCloseButton } from './AlertActionCloseButton';\n\ntest('default Alert variant is info', () => {\n  const view = shallow(<Alert title=\"this is a test\">Alert testing</Alert>);\n  expect(view.props().className).toMatch(/pf-m-info/);\n});\n\nObject.values(AlertVariant).forEach((variant) => {\n  describe(`Alert - ${variant}`, () => {\n    test('Description', () => {\n      const view = mount(\n        <Alert variant={variant} title=\"\">\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n    });\n\n    test('Title', () => {\n      const view = mount(\n        <Alert variant={variant} title=\"Some title\">\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n    });\n\n    test('Action Link', () => {\n      const view = mount(\n        <Alert variant={variant} action={<AlertActionLink>test</AlertActionLink>} title=\"\">\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n    });\n\n    test('Action Close Button', () => {\n      const onClose = jest.fn();\n      const view = mount(\n        <Alert variant={variant} action={<AlertActionCloseButton aria-label=\"Close\" onClose={onClose} />} title=\"\">\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n      view.find('button[aria-label=\"Close\"]').simulate('click');\n      expect(onClose).toHaveBeenCalled();\n    });\n\n    test('Action and Title', () => {\n      const view = mount(\n        <Alert variant={variant} action={<AlertActionLink>test</AlertActionLink>} title=\"Some title\">\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n    });\n\n    test('Custom aria label', () => {\n      const view = mount(\n        <Alert\n          variant={variant}\n          aria-label={`Custom aria label for ${variant}`}\n          action={<AlertActionLink>test</AlertActionLink>}\n          title=\"Some title\"\n        >\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n\n    });\n\n    test('inline variation', () => {\n      const view = mount(\n        <Alert\n          variant={variant}\n          isInline\n          title=\"Some title\"\n        >\n          Some alert\n        </Alert>\n      );\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"Alert.test.js"}