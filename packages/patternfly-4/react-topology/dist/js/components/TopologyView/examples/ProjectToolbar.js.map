{"version":3,"sources":["../../../../../src/components/TopologyView/examples/ProjectToolbar.js"],"names":["projects","id","name","applications","ProjectToolbar","selectedProject","selectedApplication","projectDropDownOpen","applicationDropDownOpen","isOpen","setState","e","project","preventDefault","application","state","onProjectDropDownToggle","DropdownPosition","right","map","onProjectSelect","onApplicationDropDownToggle","onApplicationSelect","renderProjectDropdown","renderApplicationDropdown","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownItem,\n  Stack,\n  StackItem,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\n\nconst projects = [\n  { id: 1, name: 'Project 1' },\n  { id: 2, name: 'Project 2' },\n  { id: 3, name: 'Project 3' },\n  { id: 4, name: 'Project 4' },\n  { id: 'all', name: 'All' }\n];\n\nconst applications = [\n  { id: 1, name: 'Application 1' },\n  { id: 2, name: 'Application 2' },\n  { id: 3, name: 'Application 3' },\n  { id: 4, name: 'Application 4' },\n  { id: 'all', name: 'All' }\n];\n\nexport class ProjectToolbar extends React.Component {\n  state = {\n    selectedProject: projects[4],\n    selectedApplication: applications[4],\n    projectDropDownOpen: false,\n    applicationDropDownOpen: false\n  };\n\n  onProjectDropDownToggle = isOpen => {\n    this.setState({ projectDropDownOpen: isOpen });\n  }\n\n  onProjectSelect = (e, project) => {\n    e.preventDefault();\n    this.setState({ selectedProject: project, projectDropDownOpen: false });\n  }\n\n  onApplicationDropDownToggle = isOpen => {\n    this.setState({ applicationDropDownOpen: isOpen });\n  }\n\n  onApplicationSelect = (e, application) => {\n    e.preventDefault();\n    this.setState({ selectedApplication: application, applicationDropDownOpen: false });\n  }\n\n  renderProjectDropdown = () => {\n    const { projectDropDownOpen, selectedProject } = this.state;\n\n    return (\n      <Stack>\n        <StackItem>\n          <label>Project</label>\n        </StackItem>\n        <StackItem>\n          <Dropdown\n            onToggle={this.onProjectDropDownToggle}\n            position={DropdownPosition.right}\n            toggle={<DropdownToggle onToggle={this.onProjectDropDownToggle}>{selectedProject.name}</DropdownToggle>}\n            isOpen={projectDropDownOpen}\n            dropdownItems={projects.map(project => (\n              <DropdownItem key={project.id} onClick={e => this.onProjectSelect(e, project)}>\n                {project.name}\n              </DropdownItem>\n            ))}\n          />\n        </StackItem>\n      </Stack>\n    );\n  }\n\n  renderApplicationDropdown = () => {\n    const { applicationDropDownOpen, selectedApplication } = this.state;\n\n    return (\n      <Stack>\n        <StackItem>\n          <label>Application</label>\n        </StackItem>\n        <StackItem>\n          <Dropdown\n            onToggle={this.onApplicationDropDownToggle}\n            position={DropdownPosition.right}\n            toggle={\n              <DropdownToggle onToggle={this.onApplicationDropDownToggle}>{selectedApplication.name}</DropdownToggle>\n            }\n            isOpen={applicationDropDownOpen}\n            dropdownItems={applications.map(application => (\n              <DropdownItem key={application.id} onClick={e => this.onApplicationSelect(e, application)}>\n                {application.name}\n              </DropdownItem>\n            ))}\n          />\n        </StackItem>\n      </Stack>\n    );\n  }\n\n  render() {\n    return (\n      <Toolbar className=\"project-toolbar pf-u-mx-md pf-u-mt-md\">\n        <ToolbarGroup>\n          <ToolbarItem className=\"pf-u-mr-xl\">{this.renderProjectDropdown()}</ToolbarItem>\n          <ToolbarItem className=\"pf-u-mr-md\">{this.renderApplicationDropdown()}</ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n  }\n}\n"],"file":"ProjectToolbar.js"}