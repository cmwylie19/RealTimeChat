{"version":3,"sources":["../../../esm/layouts/Flex/Flex.test.js"],"names":["React","test","view","createElement","Flex","FlexItem","expect","toMatchSnapshot","className","prop","testId","toBe"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIZC,EAAAA,IAAI,CAAC,8BAAD,EAAiC,MAAM;AACzC,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,UAApB,EAA0B,IAA1B,EAAgCJ,KAAK,CAACG,aAAN,CAAoBE,kBAApB,EAA8B,IAA9B,EAAoC,MAApC,CAAhC,CAAR,CAAb;AACAC,IAAAA,MAAM,CAACJ,IAAD,CAAN,CAAaK,eAAb;AACD,GAHG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,aAAD,EAAgB,MAAM;AACxB,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,UAApB,EAA0B,IAA1B,EAAgCJ,KAAK,CAACG,aAAN,CAAoBC,UAApB,EAA0B,IAA1B,EAAgCJ,KAAK,CAACG,aAAN,CAAoBE,kBAApB,EAA8B,IAA9B,EAAoC,MAApC,CAAhC,CAAhC,CAAR,CAAb;AACAC,IAAAA,MAAM,CAACJ,IAAD,CAAN,CAAaK,eAAb;AACD,GAHG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,UAApB,EAA0B;AAC7CI,MAAAA,SAAS,EAAE;AADkC,KAA1B,CAAR,CAAb;AAGAF,IAAAA,MAAM,CAACJ,IAAI,CAACO,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BF,eAA/B;AACD,GALG,CAAJ;AAMAN,EAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,UAAMS,MAAM,GAAG,MAAf;AACA,UAAMR,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,UAApB,EAA0B;AAC7C,qBAAeM;AAD8B,KAA1B,CAAR,CAAb;AAGAJ,IAAAA,MAAM,CAACJ,IAAI,CAACO,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,GANG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { Flex } from './Flex';\nimport { FlexItem } from './FlexItem';\nimport { shallow } from 'enzyme';\ntest('Simple flex with single item', () => {\n  const view = shallow(React.createElement(Flex, null, React.createElement(FlexItem, null, \"Test\")));\n  expect(view).toMatchSnapshot();\n});\ntest('Nested flex', () => {\n  const view = shallow(React.createElement(Flex, null, React.createElement(Flex, null, React.createElement(FlexItem, null, \"Test\"))));\n  expect(view).toMatchSnapshot();\n});\ntest('className is added to the root element', () => {\n  const view = shallow(React.createElement(Flex, {\n    className: \"extra-class\"\n  }));\n  expect(view.prop('className')).toMatchSnapshot();\n});\ntest('extra props are spread to the root element', () => {\n  const testId = 'flex';\n  const view = shallow(React.createElement(Flex, {\n    \"data-testid\": testId\n  }));\n  expect(view.prop('data-testid')).toBe(testId);\n});\n//# sourceMappingURL=Flex.test.js.map"],"file":"Flex.test.js"}