{"version":3,"sources":["../../../../src/components/Dropdown/DropdownItem.tsx"],"names":["React","InternalDropdownItem","DropdownArrowContext","DropdownItem","children","className","component","isDisabled","isHovered","href","tooltip","tooltipProps","onClick","ref","props","context"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoCC,oBAApC,QAAgE,wBAAhE;AACA,SAASC,oBAAT,QAAqC,qBAArC;AAqBA,OAAO,MAAMC,YAAwD,GAAG;AAAA,MAAC;AACvEC,IAAAA,QAAQ,GAAG,IAD4D;AAEvEC,IAAAA,SAAS,GAAG,EAF2D;AAGvEC,IAAAA,SAAS,GAAG,GAH2D;AAIvEC,IAAAA,UAAU,GAAG,KAJ0D;AAKvEC,IAAAA,SAAS,GAAG,KAL2D;AAMvEC,IAAAA,IAAI,GAAG,EANgE;AAOvEC,IAAAA,OAAO,GAAG,IAP6D;AAQvEC,IAAAA,YAAY,GAAG,EARwD;AASvEC,IAAAA,OATuE;AAUvEC,IAAAA;AAVuE,GAAD;AAAA,MAWnEC,KAXmE;;AAAA,SAatE,oBAAC,oBAAD,CAAsB,QAAtB,QACIC,OAAD,IACC,oBAAC,oBAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,IAAA,QAAQ,EAAEX,QAJZ;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,UAAU,EAAEC,UAPd;AAQE,IAAA,SAAS,EAAEC,SARb;AASE,IAAA,IAAI,EAAEC,IATR;AAUE,IAAA,OAAO,EAAEC,OAVX;AAWE,IAAA,YAAY,EAAEC,YAXhB;AAYE,IAAA,OAAO,EAAEC;AAZX,KAaME,KAbN,EAFJ,CAbsE;AAAA,CAAjE;;AAjBLV,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,S;AAEAC,EAAAA,U;AAEAC,EAAAA,S;AAEAC,EAAAA,I;AAEAC,EAAAA,O;AAEAC,EAAAA,Y","sourcesContent":["import * as React from 'react';\nimport { InternalDropdownItemProps, InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\n\nexport interface DropdownItemProps extends InternalDropdownItemProps {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Indicates which component will be used as dropdown item */\n  component?: React.ReactNode;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n}\n\nexport const DropdownItem: React.FunctionComponent<DropdownItemProps> = ({\n  children = null,\n  className = '',\n  component = 'a',\n  isDisabled = false,\n  isHovered = false,\n  href = '',\n  tooltip = null,\n  tooltipProps = {},\n  onClick,\n  ref, // Types of Ref are different for React.FC vs React.Component\n  ...props\n}: DropdownItemProps) => (\n  <DropdownArrowContext.Consumer>\n    {(context) =>\n      <InternalDropdownItem\n        context={context}\n        role=\"menuitem\"\n        tabIndex={-1}\n        children={children}\n        className={className}\n        component={component}\n        isDisabled={isDisabled}\n        isHovered={isHovered}\n        href={href}\n        tooltip={tooltip}\n        tooltipProps={tooltipProps}\n        onClick={onClick}\n        {...props} />}\n  </DropdownArrowContext.Consumer>\n);\n"],"file":"DropdownItem.js"}