{"version":3,"sources":["../../../esm/components/Form/FormHelperText.test.js"],"names":["test","view","React","createElement","FormHelperText","isError","isHidden","expect","toMatchSnapshot","className","prop","testId","toBe","CustomNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGAA,EAAAA,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,8BAApB,EAAoC;AACvDC,MAAAA,OAAO,EAAE,IAD8C;AAEvDC,MAAAA,QAAQ,EAAE;AAF6C,KAApC,CAAR,CAAb;AAIAC,IAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,GANG,CAAJ;AAOAR,EAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,8BAApB,EAAoC;AACvDK,MAAAA,SAAS,EAAE;AAD4C,KAApC,CAAR,CAAb;AAGAF,IAAAA,MAAM,CAACN,IAAI,CAACS,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BF,eAA/B;AACD,GALG,CAAJ;AAMAR,EAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,UAAMW,MAAM,GAAG,YAAf;AACA,UAAMV,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,8BAApB,EAAoC;AACvD,qBAAeO;AADwC,KAApC,CAAR,CAAb;AAGAJ,IAAAA,MAAM,CAACN,IAAI,CAACS,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,GANG,CAAJ;AAOAX,EAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,UAAMa,UAAU,GAAG,MAAMX,gBAAMC,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,gBAAjC,CAAzB;;AAEA,UAAMF,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,8BAApB,EAAoC,IAApC,EAA0CF,gBAAMC,aAAN,CAAoBU,UAApB,EAAgC,IAAhC,CAA1C,CAAR,CAAb;AACAN,IAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,GALG,CAAJ","sourcesContent":["import React from 'react';\nimport { FormHelperText } from './FormHelperText';\nimport { shallow } from 'enzyme';\ntest('renders with PatternFly Core styles', () => {\n  const view = shallow(React.createElement(FormHelperText, {\n    isError: true,\n    isHidden: false\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('className is added to the root element', () => {\n  const view = shallow(React.createElement(FormHelperText, {\n    className: \"extra-class\"\n  }));\n  expect(view.prop('className')).toMatchSnapshot();\n});\ntest('extra props are spread to the root element', () => {\n  const testId = 'login-body';\n  const view = shallow(React.createElement(FormHelperText, {\n    \"data-testid\": testId\n  }));\n  expect(view.prop('data-testid')).toBe(testId);\n});\ntest('LoginFooterItem  with custom node', () => {\n  const CustomNode = () => React.createElement(\"div\", null, \"My custom node\");\n\n  const view = shallow(React.createElement(FormHelperText, null, React.createElement(CustomNode, null)));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=FormHelperText.test.js.map"],"file":"FormHelperText.test.js"}