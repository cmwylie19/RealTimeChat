{"version":3,"sources":["../../../esm/components/InlineEdit/InlineEdit.api.test.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","firstColTitle","lastColTitle","firstInputName","secondInputName","editRowIndex","firstColEditedRowInputId","rowIndex","columnIndex","column","property","name","lastColEditedRowInputId","columns","describe","mountOptions","container","beforeEach","React","createElement","attachTo","getDOMNode","getAttribute","contains","elem","selector","getElementsByTagName","undefined","afterEach","unmount","test","ComposedBody","TableBody","ComposedRowWrapper","RowWrapper","onBlur","jest","fn","inlineEditingFormatter","renderEdit","activeEditId","firstInputId","secondInputId","Fragment","TableTextInput","id","defaultValue","autoFocus","editableCols","title","cellFormatters","editableRows","rows","map","row","cells","isEditing","editConfig","onEditCellClicked","editConfirmationType","TableEditConfirmation","ROW","onEditConfirmed","onEditCanceled","view","Table","caption","rowWrapper","TableHeader","editTextInputWrapper","find","TextInput","first","prop","currentTarget","expect","toHaveBeenCalled","mock","calls","toHaveLength","toBe","hostNodes","simulate","setTimeout"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { Table, TableHeader, TableBody, RowWrapper } from '@patternfly/react-table';\nimport { TextInput } from '@patternfly/react-core';\nimport { default as editableRowWrapper } from './editableRowWrapper';\nimport { default as editableTableBody } from './editableTableBody';\nimport { inlineEditFormatterFactory } from './utils';\nimport { TableEditConfirmation } from './constants';\nimport { TableTextInput } from '../TableTextInput';\nimport { rows, columns } from '../../test-helpers/data-sets';\nimport { mockClosest, makeTableId } from '../../test-helpers/helpers';\nconst firstColTitle = 'editcolfirst';\nconst lastColTitle = 'editcollast';\nconst firstInputName = 'inputOne';\nconst secondInputName = 'inputTwo';\nconst editRowIndex = 2;\nconst firstColEditedRowInputId = {\n  rowIndex: editRowIndex,\n  columnIndex: 0,\n  column: {\n    property: firstColTitle\n  },\n  name: firstInputName\n};\nconst lastColEditedRowInputId = {\n  rowIndex: editRowIndex,\n  columnIndex: columns.length + 2 - 1,\n  column: {\n    property: lastColTitle\n  },\n  name: secondInputName\n};\ndescribe('Editable table', () => {\n  let mountOptions;\n  let container;\n  beforeEach(() => {\n    container = mount(React.createElement(\"div\", null));\n    mountOptions = {\n      attachTo: container.getDOMNode()\n    }; // mock closest for selecting the first column (firing onEditCellClicked) and resolving table for confirm buttons\n\n    mockClosest({\n      '[data-key]': {\n        getAttribute: () => firstColEditedRowInputId.columnIndex,\n        contains: elem => elem.getAttribute('id') === makeTableId(firstColEditedRowInputId)\n      },\n      '[id]': {\n        getAttribute: () => makeTableId(firstColEditedRowInputId)\n      }\n    }, selector => selector === 'table' ? container.getDOMNode().getElementsByTagName('table')[0] : undefined, true);\n  });\n  afterEach(() => {\n    container.unmount();\n  });\n  test('should call correct function', () => {\n    const ComposedBody = editableTableBody(TableBody);\n    const ComposedRowWrapper = editableRowWrapper(RowWrapper);\n    const onBlur = jest.fn();\n    const inlineEditingFormatter = inlineEditFormatterFactory({\n      renderEdit: (value, {\n        columnIndex,\n        rowIndex,\n        column\n      }, {\n        activeEditId\n      }) => {\n        const firstInputId = makeTableId({\n          rowIndex,\n          columnIndex,\n          column,\n          name: firstInputName\n        });\n        const secondInputId = makeTableId({\n          rowIndex,\n          columnIndex,\n          column,\n          name: secondInputName\n        });\n        return React.createElement(React.Fragment, null, React.createElement(TableTextInput, {\n          id: firstInputId,\n          defaultValue: value,\n          onBlur: onBlur,\n          autoFocus: activeEditId === firstInputId\n        }), React.createElement(TableTextInput, {\n          id: secondInputId,\n          defaultValue: value,\n          onBlur: onBlur,\n          autoFocus: activeEditId === secondInputId\n        }));\n      }\n    });\n    const editableCols = [{\n      title: firstColTitle,\n      cellFormatters: [inlineEditingFormatter]\n    }, ...columns, {\n      title: lastColTitle,\n      cellFormatters: [inlineEditingFormatter]\n    }];\n    const editableRows = rows.map(row => _objectSpread({}, row, {\n      cells: ['', ...row.cells, ''] // add two new columns\n\n    }));\n    editableRows[editRowIndex].isEditing = true;\n    const editConfig = {\n      activeEditId: makeTableId(lastColEditedRowInputId),\n      onEditCellClicked: jest.fn(),\n      editConfirmationType: TableEditConfirmation.ROW,\n      onEditConfirmed: jest.fn(),\n      onEditCanceled: jest.fn()\n    };\n    const view = mount(React.createElement(Table, {\n      caption: \"Editable table\",\n      cells: editableCols,\n      rows: editableRows,\n      rowWrapper: ComposedRowWrapper\n    }, React.createElement(TableHeader, null), React.createElement(ComposedBody, {\n      editConfig: editConfig\n    })), mountOptions); // calls onBlur properly\n\n    const editTextInputWrapper = view.find(TextInput).find(`#${makeTableId(lastColEditedRowInputId)}`).first();\n    editTextInputWrapper.prop('onBlur')({\n      currentTarget: {\n        value: 'water'\n      }\n    });\n    expect(onBlur).toHaveBeenCalled();\n    expect(onBlur.mock.calls).toHaveLength(1);\n    expect(onBlur.mock.calls[0][0]).toBe('water'); // responds to cell click\n\n    view.find(`#${makeTableId(firstColEditedRowInputId)}`).hostNodes().simulate('mousedown'); // should immediately call onEditCellClicked\n\n    setTimeout(() => expect(editConfig.onEditCellClicked).toHaveBeenCalled(), 0); // responds to confirmation button clicks\n\n    view.find('.pf-c-table__inline-edit-buttons button.pf-c-button.pf-m-primary').simulate('mouseup');\n    expect(editConfig.onEditConfirmed).toHaveBeenCalled();\n    view.find('.pf-c-table__inline-edit-buttons button.pf-c-button.pf-m-plain').simulate('mouseup');\n    expect(editConfig.onEditCanceled).toHaveBeenCalled();\n  });\n});\n//# sourceMappingURL=InlineEdit.api.test.js.map"],"file":"InlineEdit.api.test.js"}