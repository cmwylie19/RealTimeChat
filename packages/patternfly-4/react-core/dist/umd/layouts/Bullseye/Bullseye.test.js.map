{"version":3,"sources":["../../../esm/layouts/Bullseye/Bullseye.test.js"],"names":["React","test","view","createElement","Bullseye","expect","toMatchSnapshot","className","prop","testId","toBe","component","type","Component"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGZC,EAAAA,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B,IAA9B,CAAR,CAAb;AACAC,IAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,GAHG,CAAJ;AAIAL,EAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDG,MAAAA,SAAS,EAAE;AADsC,KAA9B,CAAR,CAAb;AAGAF,IAAAA,MAAM,CAACH,IAAI,CAACM,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BF,eAA/B;AACD,GALG,CAAJ;AAMAL,EAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,UAAMQ,MAAM,GAAG,UAAf;AACA,UAAMP,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjD,qBAAeK;AADkC,KAA9B,CAAR,CAAb;AAGAJ,IAAAA,MAAM,CAACH,IAAI,CAACM,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,GANG,CAAJ;AAOAR,EAAAA,IAAI,CAAC,6CAAD,EAAgD,MAAM;AACxD,UAAMU,SAAS,GAAG,KAAlB;AACA,UAAMT,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDO,MAAAA,SAAS,EAAEA;AADsC,KAA9B,CAAR,CAAb;AAGAN,IAAAA,MAAM,CAACH,IAAI,CAACU,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBC,SAAzB;AACD,GANG,CAAJ;AAOAV,EAAAA,IAAI,CAAC,sDAAD,EAAyD,MAAM;AACjE,UAAMY,SAAS,GAAG,MAAM,IAAxB;;AAEA,UAAMX,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDO,MAAAA,SAAS,EAAEE;AADsC,KAA9B,CAAR,CAAb;AAGAR,IAAAA,MAAM,CAACH,IAAI,CAACU,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBG,SAAzB;AACD,GAPG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { Bullseye } from './Bullseye';\nimport { shallow } from 'enzyme';\ntest('renders with PatternFly Core styles', () => {\n  const view = shallow(React.createElement(Bullseye, null));\n  expect(view).toMatchSnapshot();\n});\ntest('className is added to the root element', () => {\n  const view = shallow(React.createElement(Bullseye, {\n    className: \"extra-class\"\n  }));\n  expect(view.prop('className')).toMatchSnapshot();\n});\ntest('extra props are spread to the root element', () => {\n  const testId = 'bullseye';\n  const view = shallow(React.createElement(Bullseye, {\n    \"data-testid\": testId\n  }));\n  expect(view.prop('data-testid')).toBe(testId);\n});\ntest('allows passing in a string as the component', () => {\n  const component = 'div';\n  const view = shallow(React.createElement(Bullseye, {\n    component: component\n  }));\n  expect(view.type()).toBe(component);\n});\ntest('allows passing in a React Component as the component', () => {\n  const Component = () => null;\n\n  const view = shallow(React.createElement(Bullseye, {\n    component: Component\n  }));\n  expect(view.type()).toBe(Component);\n});\n//# sourceMappingURL=Bullseye.test.js.map"],"file":"Bullseye.test.js"}