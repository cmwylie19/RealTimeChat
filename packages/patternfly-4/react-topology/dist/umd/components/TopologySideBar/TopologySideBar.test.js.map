{"version":3,"sources":["../../../esm/components/TopologySideBar/TopologySideBar.test.js"],"names":["React","describe","test","view","createElement","TopologySideBar","className","show","header","id","expect","toMatchSnapshot","find","length","toBe","mockClose","jest","fn","onClose","simulate","toBeCalled"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGZC,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,IAAAA,IAAI,CAAC,2CAAD,EAA8C,MAAM;AACtD,YAAMC,IAAI,GAAG,mBAAMH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAqC;AACtDC,QAAAA,SAAS,EAAE,eAD2C;AAEtDC,QAAAA,IAAI,EAAE,IAFgD;AAGtDC,QAAAA,MAAM,EAAER,KAAK,CAACI,aAAN,CAAoB,MAApB,EAA4B;AAClCK,UAAAA,EAAE,EAAE;AAD8B,SAA5B,EAEL,QAFK;AAH8C,OAArC,EAMhBT,KAAK,CAACI,aAAN,CAAoB,KAApB,EAA2B;AAC5BK,QAAAA,EAAE,EAAE;AADwB,OAA3B,CANgB,CAAN,CAAb;AASAC,MAAAA,MAAM,CAACP,IAAD,CAAN,CAAaQ,eAAb;AACAD,MAAAA,MAAM,CAACP,IAAI,CAACS,IAAL,CAAU,+CAAV,EAA2DC,MAA5D,CAAN,CAA0EC,IAA1E,CAA+E,CAA/E;AACD,KAZG,CAAJ;AAaAZ,IAAAA,IAAI,CAAC,oDAAD,EAAuD,MAAM;AAC/D,YAAMa,SAAS,GAAGC,IAAI,CAACC,EAAL,EAAlB;AACA,YAAMd,IAAI,GAAG,mBAAMH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAqC;AACtDC,QAAAA,SAAS,EAAE,eAD2C;AAEtDC,QAAAA,IAAI,EAAE,IAFgD;AAGtDW,QAAAA,OAAO,EAAEH;AAH6C,OAArC,EAIhB,GAJgB,EAIXf,KAAK,CAACI,aAAN,CAAoB,KAApB,EAA2B;AACjCK,QAAAA,EAAE,EAAE;AAD6B,OAA3B,CAJW,CAAN,CAAb;AAOAC,MAAAA,MAAM,CAACP,IAAD,CAAN,CAAaQ,eAAb;AACAR,MAAAA,IAAI,CAACS,IAAL,CAAU,sCAAV,EAAkDO,QAAlD,CAA2D,OAA3D;AACAT,MAAAA,MAAM,CAACK,SAAD,CAAN,CAAkBK,UAAlB;AACD,KAZG,CAAJ;AAaAlB,IAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,YAAMC,IAAI,GAAG,mBAAMH,KAAK,CAACI,aAAN,CAAoBC,sBAApB,EAAqC;AACtDC,QAAAA,SAAS,EAAE,eAD2C;AAEtDC,QAAAA,IAAI,EAAE,KAFgD;AAGtDC,QAAAA,MAAM,EAAER,KAAK,CAACI,aAAN,CAAoB,MAApB,EAA4B;AAClCK,UAAAA,EAAE,EAAE;AAD8B,SAA5B,EAEL,QAFK;AAH8C,OAArC,EAMhB,GANgB,EAMXT,KAAK,CAACI,aAAN,CAAoB,KAApB,EAA2B;AACjCK,QAAAA,EAAE,EAAE;AAD6B,OAA3B,CANW,CAAN,CAAb;AASAC,MAAAA,MAAM,CAACP,IAAD,CAAN,CAAaQ,eAAb;AACAD,MAAAA,MAAM,CAACP,IAAI,CAACS,IAAL,CAAU,cAAV,EAA0BC,MAA3B,CAAN,CAAyCC,IAAzC,CAA8C,CAA9C;AACD,KAZG,CAAJ;AAaD,GAxCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { TopologySideBar } from './index';\ndescribe('TopologySideBar', () => {\n  test('should display topology sidebar correctly', () => {\n    const view = mount(React.createElement(TopologySideBar, {\n      className: \"my-test-class\",\n      show: true,\n      header: React.createElement(\"span\", {\n        id: \"test-header-id\"\n      }, \"Header\")\n    }, React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n    expect(view.find('.pf-topology-side-bar__header #test-header-id').length).toBe(1);\n  });\n  test('should display topology sidebar w/ close correctly', () => {\n    const mockClose = jest.fn();\n    const view = mount(React.createElement(TopologySideBar, {\n      className: \"my-test-class\",\n      show: true,\n      onClose: mockClose\n    }, \">\", React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n    view.find('button.pf-topology-side-bar__dismiss').simulate('click');\n    expect(mockClose).toBeCalled();\n  });\n  test('should hide the sidebar correctly', () => {\n    const view = mount(React.createElement(TopologySideBar, {\n      className: \"my-test-class\",\n      show: false,\n      header: React.createElement(\"span\", {\n        id: \"test-header-id\"\n      }, \"Header\")\n    }, \">\", React.createElement(\"div\", {\n      id: \"test-canvas\"\n    })));\n    expect(view).toMatchSnapshot();\n    expect(view.find('#test-canvas').length).toBe(0);\n  });\n});\n//# sourceMappingURL=TopologySideBar.test.js.map"],"file":"TopologySideBar.test.js"}