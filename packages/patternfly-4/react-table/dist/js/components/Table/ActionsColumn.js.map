{"version":3,"sources":["../../../../src/components/Table/ActionsColumn.tsx"],"names":["ActionsColumn","props","isOpen","setState","event","onClick","rowData","extraData","preventDefault","rowIndex","state","items","children","dropdownPosition","dropdownDirection","isDisabled","onToggle","map","key","title","itemKey","isSeparator","onSelect","React","Component","DropdownPosition","right","DropdownDirection","down"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyBaA,a;;;;;AASX,yBAAYC,KAAZ,EAAuC;AAAA;;AAAA;;AACrC,uFAAMA,KAAN;;AADqC,+DAO5B,UAACC,MAAD,EAA2B;AACpC,YAAKC,QAAL,CAAc;AACZD,QAAAA,MAAM,EAANA;AADY,OAAd;AAGD,KAXsC;;AAAA,+DAa5B,UAACE,KAAD,EACCC,OADD,EAC4I;AAAA,wBACtH,MAAKJ,KADiH;AAAA,UAC7IK,OAD6I,eAC7IA,OAD6I;AAAA,UACpIC,SADoI,eACpIA,SADoI;AAErJH,MAAAA,KAAK,CAACI,cAAN,GAFqJ,CAGrJ;;AACAH,MAAAA,OAAO,IAAIA,OAAO,CAACD,KAAD,EAA4BG,SAAS,IAAIA,SAAS,CAACE,QAAnD,EAA6DH,OAA7D,EAAsEC,SAAtE,CAAlB;;AACA,YAAKJ,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAE,CAAC,MAAKQ,KAAL,CAAWR;AADR,OAAd;AAGD,KAtBsC;;AAErC,UAAKQ,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE;AADG,KAAb;AAFqC;AAKtC;;;;6BAmBQ;AAAA;;AAAA,UACCA,MADD,GACY,KAAKQ,KADjB,CACCR,MADD;AAAA,yBAEsE,KAAKD,KAF3E;AAAA,UAECU,KAFD,gBAECA,KAFD;AAAA,UAEQC,QAFR,gBAEQA,QAFR;AAAA,UAEkBC,gBAFlB,gBAEkBA,gBAFlB;AAAA,UAEoCC,iBAFpC,gBAEoCA,iBAFpC;AAAA,UAEuDC,UAFvD,gBAEuDA,UAFvD;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP,QACE,oBAAC,mBAAD;AACE,QAAA,MAAM,EAAE,oBAAC,sBAAD;AAAa,UAAA,UAAU,EAAEA,UAAzB;AAAqC,UAAA,QAAQ,EAAE,KAAKC;AAApD,UADV;AAEE,QAAA,QAAQ,EAAEH,gBAFZ;AAGE,QAAA,SAAS,EAAEC,iBAHb;AAIE,QAAA,MAAM,EAAEZ,MAJV;AAKE,QAAA,aAAa,EAAES,KAAK,CAACM,GAAN,CACb,gBAAqDC,GAArD;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,cAAUC,OAAV,QAAUA,OAAV;AAAA,cAAmBf,QAAnB,QAAmBA,OAAnB;AAAA,cAA4BgB,WAA5B,QAA4BA,WAA5B;AAAA,cAA4CpB,KAA5C;;AAAA,iBACEoB,WAAW,GACT,oBAAC,4BAAD,eAAuBpB,KAAvB;AAA8B,YAAA,GAAG,EAAEmB,OAAO,IAAIF,GAA9C;AAAmD,wBAAUE,OAAO,IAAIF;AAAxE,aADS,GAGT,oBAAC,uBAAD;AACE,YAAA,OAAO,EAAE,iBAACd,KAAD;AAAA,qBAAW,MAAI,CAACkB,QAAL,CAAclB,KAAd,EAAqBC,QAArB,CAAX;AAAA;AADX,aAEMJ,KAFN;AAGE,YAAA,GAAG,EAAEmB,OAAO,IAAIF,GAHlB;AAIE,wBAAUE,OAAO,IAAIF;AAJvB,cAMGC,KANH,CAJJ;AAAA,SADa,CALjB;AAoBE,QAAA,OAAO;AApBT,QADF,EAuBGP,QAvBH,CADF;AA2BD;;;;EA/DgCW,KAAK,CAACC,S;;;;gBAA5BxB,a;AAbXY,EAAAA,Q;AACAD,EAAAA,K;AACAI,EAAAA,U;AACAF,EAAAA,gB;AACAC,EAAAA,iB;AACAR,EAAAA,O;AACAC,EAAAA,S;;;gBAOWP,a,kBACW;AACpBY,EAAAA,QAAQ,EAAE,IADU;AAEpBD,EAAAA,KAAK,EAAE,EAFa;AAGpBE,EAAAA,gBAAgB,EAAEY,4BAAiBC,KAHf;AAIpBZ,EAAAA,iBAAiB,EAAEa,6BAAkBC,IAJjB;AAKpBtB,EAAAA,OAAO,EAAE,EALW;AAMpBC,EAAAA,SAAS,EAAE;AANS,C","sourcesContent":["import * as React from 'react';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownDirection,\n  KebabToggle,\n  DropdownItem,\n  DropdownSeparator\n} from '@patternfly/react-core';\n\nimport { IAction, IExtraData, IRowData } from './Table';\n\nexport interface ActionsColumnProps {\n  children?: React.ReactNode;\n  items: IAction[];\n  isDisabled?: boolean;\n  dropdownPosition?: DropdownPosition;\n  dropdownDirection?: DropdownDirection;\n  rowData?: IRowData;\n  extraData?: IExtraData;\n}\n\nexport interface ActionsColumnState {\n  isOpen: boolean;\n}\n\nexport class ActionsColumn extends React.Component<ActionsColumnProps, ActionsColumnState> {\n  static defaultProps = {\n    children: null as React.ReactNode,\n    items: [] as IAction[],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    rowData: {} as IRowData,\n    extraData: {} as IExtraData\n  };\n  constructor(props: ActionsColumnProps) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  onToggle = (isOpen: boolean): void => {\n    this.setState({\n      isOpen\n    });\n  }\n\n  onSelect = (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n              onClick: ((event: React.MouseEvent, rowIndex: number | undefined, rowData: IRowData, extraData: IExtraData) => void) | undefined): void => {\n    const { rowData, extraData } = this.props;\n    event.preventDefault();\n    // tslint:disable-next-line:no-unused-expression\n    onClick && onClick(event as React.MouseEvent, extraData && extraData.rowIndex, rowData, extraData);\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, children, dropdownPosition, dropdownDirection, isDisabled } = this.props;\n    return (\n      <React.Fragment>\n        <Dropdown\n          toggle={<KebabToggle isDisabled={isDisabled} onToggle={this.onToggle} />}\n          position={dropdownPosition}\n          direction={dropdownDirection}\n          isOpen={isOpen}\n          dropdownItems={items.map(\n            ({ title, itemKey, onClick, isSeparator, ...props }, key) =>\n              isSeparator ? (\n                <DropdownSeparator {...props} key={itemKey || key} data-key={itemKey || key} />\n              ) : (\n                <DropdownItem\n                  onClick={(event) => this.onSelect(event, onClick)}\n                  {...props}\n                  key={itemKey || key}\n                  data-key={itemKey || key}\n                >\n                  {title}\n                </DropdownItem>\n              )\n          )}\n          isPlain\n        />\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n"],"file":"ActionsColumn.js"}