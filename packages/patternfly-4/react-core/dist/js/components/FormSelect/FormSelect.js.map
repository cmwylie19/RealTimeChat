{"version":3,"sources":["../../../../src/components/FormSelect/FormSelect.tsx"],"names":["FormSelect","props","event","onChange","currentTarget","value","id","console","error","children","className","isValid","isDisabled","isRequired","styles","formControl","handleChange","React","Component","onBlur","onFocus","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BaA,U;;;;;AACX,sBAAYC,KAAZ,EAAoC;AAAA;;AAAA;;AAClC,oFAAMA,KAAN;;AADkC,mEAmBrB,UAACC,KAAD,EAAgB;AAC7B,YAAKD,KAAL,CAAWE,QAAX,CAAoBD,KAAK,CAACE,aAAN,CAAoBC,KAAxC,EAA+CH,KAA/C;AACD,KArBmC;;AAElC,QAAI,CAACD,KAAK,CAACK,EAAP,IAAa,CAACL,KAAK,CAAC,YAAD,CAAvB,EAAuC;AACrC;AACAM,MAAAA,OAAO,CAACC,KAAR,CAAc,gEAAd;AACD;;AALiC;AAMnC;;;;6BAiBQ;AAAA,wBAC2E,KAAKP,KADhF;AAAA,UACCQ,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBL,KADtB,eACsBA,KADtB;AAAA,UAC6BM,OAD7B,eAC6BA,OAD7B;AAAA,UACsCC,UADtC,eACsCA,UADtC;AAAA,UACkDC,UADlD,eACkDA,UADlD;AAAA,UACiEZ,KADjE;;AAEP,aACE,2CACMA,KADN;AAEE,QAAA,SAAS,EAAE,sBAAIa,wBAAOC,WAAX,EAAwBL,SAAxB,CAFb;AAGE,wBAAc,CAACC,OAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKK,YAJjB;AAKE,QAAA,QAAQ,EAAEJ,UALZ;AAME,QAAA,QAAQ,EAAEC,UANZ;AAOE,QAAA,KAAK,EAAER;AAPT,UASGI,QATH,CADF;AAaD;;;;EAvC6BQ,KAAK,CAACC,S;;;;gBAAzBlB,U;AArBTS,EAAAA,Q;AAEAC,EAAAA,S;AAEAL,EAAAA,K;AAEAM,EAAAA,O;AAEAC,EAAAA,U;AAEAC,EAAAA,U;AAEAM,EAAAA,M;AAEAC,EAAAA,O;AAEAjB,EAAAA,Q;AAEA,c;;;gBAGSH,U,kBASW;AACpBU,EAAAA,SAAS,EAAE,EADS;AAEpBL,EAAAA,KAAK,EAAE,EAFa;AAGpBM,EAAAA,OAAO,EAAE,IAHW;AAIpBC,EAAAA,UAAU,EAAE,KAJQ;AAKpBC,EAAAA,UAAU,EAAE,KALQ;AAMpBM,EAAAA,MAAM,EAAE;AAAA,WAAWE,SAAX;AAAA,GANY;AAOpBD,EAAAA,OAAO,EAAE;AAAA,WAAWC,SAAX;AAAA,GAPW;AAQpBlB,EAAAA,QAAQ,EAAE;AAAA,WAAWkB,SAAX;AAAA;AARU,C","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface FormSelectProps extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'onBlur' | 'onFocus' | 'disabled'> {\n    /** content rendered inside the FormSelect */\n    children: React.ReactNode;\n    /** additional classes added to the FormSelect control */\n    className?: string;\n    /** value of selected option */\n    value?: any;\n    /** Flag indicating selection is valid */\n    isValid?: boolean;\n    /** Flag indicating the FormSelect is disabled */\n    isDisabled?: boolean;\n    /** Sets the FormSelectrequired. */\n    isRequired?: boolean;\n    /** Optional callback for updating when selection loses focus */\n    onBlur?: (event: React.FormEvent<HTMLSelectElement>) => void;\n    /** Optional callback for updating when selection gets focus */\n    onFocus?: (event: React.FormEvent<HTMLSelectElement>) => void;\n    /** Optional callback for updating when selection changes */\n    onChange?: (value: string, event: React.FormEvent<HTMLSelectElement>) => void;\n    /** Custom flag to show that the FormSelect requires an associated id or aria-label. */\n    'aria-label'?: string;\n}\n\nexport class FormSelect extends React.Component<FormSelectProps> {\n  constructor(props: FormSelectProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // tslint:disable-next-line:no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n  }\n\n  static defaultProps = {\n    className: '',\n    value: '',\n    isValid: true,\n    isDisabled: false,\n    isRequired: false,\n    onBlur: (): any => undefined,\n    onFocus: (): any => undefined,\n    onChange: (): any => undefined\n  };\n\n  handleChange = (event: any) => {\n    this.props.onChange(event.currentTarget.value, event);\n  }\n\n  render() {\n    const { children, className, value, isValid, isDisabled, isRequired, ...props } = this.props;\n    return (\n      <select\n        {...props}\n        className={css(styles.formControl, className)}\n        aria-invalid={!isValid}\n        onChange={this.handleChange}\n        disabled={isDisabled}\n        required={isRequired}\n        value={value}\n      >\n        {children}\n      </select>\n    );\n  }\n}\n"],"file":"FormSelect.js"}