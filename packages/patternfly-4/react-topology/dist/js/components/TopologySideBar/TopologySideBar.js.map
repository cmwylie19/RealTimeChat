{"version":3,"sources":["../../../../src/components/TopologySideBar/TopologySideBar.tsx"],"names":["TopologySideBar","props","setState","isIn","show","clearTimer","timer","setTimeout","updateForTransitions","clearTimeout","state","className","onClose","header","children","otherProps","startTimer","React","Component"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBaA,e;;;;;AAIX,2BAAYC,KAAZ,EAAyC;AAAA;;AAAA;;AACvC,yFAAMA,KAAN;;AADuC,4DAF5B,IAE4B;;AAAA,2EASlB,YAAM;AAC3B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWG;AAAnB,OAAd;AACD,KAXwC;;AAAA,iEAa5B,YAAM;AACjB,YAAKC,UAAL;;AACA,YAAKC,KAAL,GAAaC,UAAU,CAAC,MAAKC,oBAAN,EAA4B,GAA5B,CAAvB;AACD,KAhBwC;;AAAA,iEAkB5B,YAAM;AACjB,UAAI,MAAKF,KAAT,EAAgB;AACdG,QAAAA,YAAY,CAAC,MAAKH,KAAN,CAAZ;AACA,cAAKA,KAAL,GAAa,IAAb;AACD;AACF,KAvBwC;;AAEvC,UAAKI,KAAL,GAAa;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFuC;AAGxC;;;;2CAEsB;AACrB,WAAKE,UAAL;AACD;;;6BAkBQ;AAAA,wBAQH,KAAKJ,KARF;AAAA,8CAELU,SAFK;AAAA,UAELA,SAFK,sCAEO,EAFP;AAAA,yCAGLP,IAHK;AAAA,UAGLA,IAHK,iCAGE,KAHF;AAAA,4CAILQ,OAJK;AAAA,UAILA,OAJK,oCAIK,IAJL;AAAA,UAKLC,MALK,eAKLA,MALK;AAAA,6CAMLC,QANK;AAAA,UAMLA,QANK,qCAMM,IANN;AAAA,UAOFC,UAPE;;AAAA,UASCZ,IATD,GASU,KAAKO,KATf,CASCP,IATD;;AAWP,UAAIA,IAAI,KAAKC,IAAb,EAAmB;AACjB,aAAKC,UAAL;AACA,aAAKW,UAAL;AACD;;AAED,aACE,wCACMD,UADN;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,sCAA+BJ,SAA/B,SAA2CP,IAAI,GAAG,QAAH,GAAc,EAA7D,SAAkED,IAAI,GAAG,KAAH,GAAW,EAAjF;AAHX,UAKGC,IAAI,IACH,oBAAC,KAAD,CAAO,QAAP,QACGQ,OAAO,IACN,oBAAC,iBAAD;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,OAAO,EAAC,OAA1D;AAAkE,QAAA,OAAO,EAAEA,OAA3E;AAA2F,sBAAW;AAAtG,SACE,oBAAC,qBAAD,OADF,CAFJ,EAMGC,MAAM,IACL;AAAK,QAAA,SAAS,EAAC;AAAf,SACGA,MADH,CAPJ,EAWE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGC,QADH,CAXF,CANJ,CADF;AAyBD;;;;EAtEkCG,KAAK,CAACC,S;;;;gBAA9BlB,e;AAfXW,EAAAA,S;AAEAG,EAAAA,Q;AAEAV,EAAAA,I;AAEAQ,EAAAA,O;AAEAC,EAAAA,M","sourcesContent":["import * as React from 'react';\n\nimport { TimesIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\nimport '@patternfly/react-styles/css/components/Topology/topology-side-bar.css';\n\nexport interface TopologySideBarProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the sidebar */\n  className?: string;\n  /** Contents for the sidebar */\n  children?: React.ReactNode;\n  /** Flag if sidebar is open */\n  show?: boolean;\n  /** A callback for closing the sidebar, if provided the close button will be displayed in the sidebar */\n  onClose?: () => void;\n  /** Component to place in the header of the sidebar */\n  header?: React.ReactNode;\n}\n\ninterface TopologySideBarState {\n  isIn: boolean;\n}\n\nexport class TopologySideBar extends React.Component<TopologySideBarProps, TopologySideBarState> {\n\n  timer: any = null;\n\n  constructor(props: TopologySideBarProps) {\n    super(props);\n    this.state = { isIn: false };\n  }\n\n  componentWillUnmount() {\n    this.clearTimer();\n  }\n\n  updateForTransitions = () => {\n    this.setState({ isIn: this.props.show });\n  }\n\n  startTimer = () => {\n    this.clearTimer();\n    this.timer = setTimeout(this.updateForTransitions, 150);\n  }\n\n  clearTimer = () => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  render() {\n    const {\n      className = '',\n      show = false,\n      onClose = null,\n      header,\n      children = null,\n      ...otherProps\n    } = this.props;\n    const { isIn } = this.state;\n\n    if (isIn !== show) {\n      this.clearTimer();\n      this.startTimer();\n    }\n\n    return (\n      <div\n        {...otherProps}\n        role=\"dialog\"\n        className={`pf-topology-side-bar fade ${className}${show ? ' shown' : ''}${isIn ? ' in' : ''}`}\n      >\n        {show && (\n          <React.Fragment>\n            {onClose && (\n              <Button className=\"pf-topology-side-bar__dismiss\" variant=\"plain\" onClick={onClose as any} aria-label=\"Close\">\n                <TimesIcon />\n              </Button>\n            )}\n            {header && (\n              <div className=\"pf-topology-side-bar__header\">\n                {header}\n              </div>\n            )}\n            <div className=\"pf-topology-side-bar__body\">\n              {children}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n"],"file":"TopologySideBar.js"}