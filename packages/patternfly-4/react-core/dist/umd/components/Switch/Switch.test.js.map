{"version":3,"sources":["../../../esm/components/Switch/Switch.test.js"],"names":["React","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","onChange","jest","fn","isChecked","test","view","createElement","Switch","id","expect","find","prop","toBe","toBeDefined","label","labelOff","toMatchSnapshot","check","isDisabled","input","simulate","checked","mock","calls"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { mount } from 'enzyme';\nimport { Switch } from './Switch';\nconst props = {\n  onChange: jest.fn(),\n  isChecked: false\n};\ntest('switch label for attribute equals input id attribute', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"foo\"\n  }));\n  expect(view.find('input').prop('id')).toBe('foo');\n  expect(view.find('label').prop('htmlFor')).toBe('foo');\n});\ntest('switch label id is auto generated', () => {\n  const view = mount(React.createElement(Switch, {\n    \"aria-label\": \"...\"\n  }));\n  expect(view.find('input').prop('id')).toBeDefined();\n});\ntest('switch is checked', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-checked\",\n    label: \"On\",\n    labelOff: \"Off\",\n    isChecked: true\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch is not checked', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-not-checked\",\n    label: \"On\",\n    labelOff: \"Off\",\n    isChecked: false\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch with only label is checked', () => {\n  const check = true;\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-checked\",\n    label: check ? \"On\" : \"Off\",\n    isChecked: check\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch with only label is not checked', () => {\n  const check = false;\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-not-checked\",\n    label: check ? \"On\" : \"Off\",\n    isChecked: check\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('no label switch is checked', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"no-label-switch-is-checked\",\n    isChecked: true\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('no label switch is not checked', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"no-label-switch-is-not-checked\",\n    isChecked: false\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch is checked and disabled', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-checked-and-disabled\",\n    isChecked: true,\n    isDisabled: true\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch is not checked and disabled', () => {\n  const view = mount(React.createElement(Switch, {\n    id: \"switch-is-not-checked-and-disabled\",\n    isChecked: false,\n    isDisabled: true\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('switch passes value and event to onChange handler', () => {\n  const view = mount(React.createElement(Switch, _extends({\n    id: \"onChange-switch\"\n  }, props)));\n  const input = view.find('input');\n  expect(input.prop('defaultChecked')).toBe(false);\n  input.simulate('change', {\n    target: {\n      checked: true\n    }\n  });\n  expect(props.onChange.mock.calls[0][0]).toBe(true);\n});\n//# sourceMappingURL=Switch.test.js.map"],"file":"Switch.test.js"}