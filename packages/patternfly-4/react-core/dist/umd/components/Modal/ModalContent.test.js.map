{"version":3,"sources":["../../../esm/components/Modal/ModalContent.test.js"],"names":["React","test","view","createElement","ModalContent","title","id","isOpen","expect","toMatchSnapshot","actions","isLarge","onClose","undefined","header","footer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\nimport { ModalContent } from './ModalContent';\ntest('Modal Content Test only body', () => {\n  const view = shallow(React.createElement(ModalContent, {\n    title: \"Test Modal Content title\",\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Content Test isOpen', () => {\n  const view = shallow(React.createElement(ModalContent, {\n    title: \"Test Modal Content title\",\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Content Test with footer', () => {\n  const view = shallow(React.createElement(ModalContent, {\n    title: \"Test Modal Content title\",\n    id: \"id\",\n    isOpen: true,\n    actions: ['Testing']\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Content test without footer', () => {\n  const view = shallow(React.createElement(ModalContent, {\n    title: \"Test Modal Content title\",\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Content Test with onclose', () => {\n  const view = shallow(React.createElement(ModalContent, {\n    title: \"Test Modal Content title\",\n    actions: ['Testing footer'],\n    isLarge: true,\n    onClose: () => undefined,\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Test with custom header', () => {\n  const header = React.createElement(\"span\", {\n    id: \"test-custom-header\"\n  }, \"TEST\");\n  const view = shallow(React.createElement(ModalContent, {\n    header: header,\n    title: \"test-custom-header-modal\",\n    actions: ['Testing footer'],\n    isLarge: true,\n    onClose: () => undefined,\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\ntest('Modal Test with custom footer', () => {\n  const footer = React.createElement(\"span\", {\n    id: \"test-custom-footer\"\n  }, \"TEST\");\n  const view = shallow(React.createElement(ModalContent, {\n    footer: footer,\n    title: \"Test Modal Custom Footer\",\n    isLarge: true,\n    onClose: () => undefined,\n    id: \"id\",\n    isOpen: true\n  }, \"This is a ModalBox header\"));\n  expect(view).toMatchSnapshot();\n});\n//# sourceMappingURL=ModalContent.test.js.map"],"file":"ModalContent.test.js"}