{"version":3,"sources":["../../../../../src/components/Virtualized/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.ts"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex"],"mappings":";;;;;;;AAAA;;;AAiCe,SAASA,iDAAT,OAUC;AAAA,MATdC,SASc,QATdA,SASc;AAAA,MARdC,QAQc,QARdA,QAQc;AAAA,MAPdC,uBAOc,QAPdA,uBAOc;AAAA,MANdC,4BAMc,QANdA,4BAMc;AAAA,MALdC,cAKc,QALdA,cAKc;AAAA,MAJdC,YAIc,QAJdA,YAIc;AAAA,MAHdC,iBAGc,QAHdA,iBAGc;AAAA,MAFdC,aAEc,QAFdA,aAEc;AAAA,MADdC,kCACc,QADdA,kCACc;;AACd;AACA;AACA,MACER,SAAS,KAAKI,cAAd,IACC,CAAC,OAAOH,QAAP,KAAoB,QAApB,IAAgC,OAAOI,YAAP,KAAwB,QAAzD,KAAsEJ,QAAQ,KAAKI,YAFtF,EAGE;AACAH,IAAAA,uBAAuB,CAACC,4BAAD,CAAvB,CADA,CAGA;AACA;;AACA,QAAII,aAAa,IAAI,CAAjB,IAAsBA,aAAa,KAAKD,iBAA5C,EAA+D;AAC7DE,MAAAA,kCAAkC;AACnC;AACF;AACF","sourcesContent":["/**\n * Helper method that determines when to recalculate row or column metadata.\n */\n\ninterface Params<T> {\n  // Number of rows or columns in the current axis\n  cellCount: number,\n\n  // Width or height of cells for the current axis\n  cellSize?: number,\n\n  // Method to invoke if cell metadata should be recalculated\n  computeMetadataCallback: (props: T) => void,\n\n  // Parameters to pass to :computeMetadataCallback\n  computeMetadataCallbackProps: T,\n\n  // Newly updated number of rows or columns in the current axis\n  nextCellsCount: number,\n\n  // Newly updated width or height of cells for the current axis\n  nextCellSize?: number,\n\n  // Newly updated scroll-to-index\n  nextScrollToIndex: number,\n\n  // Scroll-to-index\n  scrollToIndex: number,\n\n  // Callback to invoke if the scroll position should be recalculated\n  updateScrollOffsetForScrollToIndex: () => void\n}\n\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset({\n  cellCount,\n  cellSize,\n  computeMetadataCallback,\n  computeMetadataCallbackProps,\n  nextCellsCount,\n  nextCellSize,\n  nextScrollToIndex,\n  scrollToIndex,\n  updateScrollOffsetForScrollToIndex\n}: Params<any>) {\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (\n    cellCount !== nextCellsCount ||\n    ((typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize)\n  ) {\n    computeMetadataCallback(computeMetadataCallbackProps);\n\n    // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}\n"],"file":"calculateSizeAndPositionDataAndUpdateScrollOffset.js"}