{"version":3,"sources":["../../../../src/components/Table/RowWrapper.tsx"],"names":["React","debounce","styles","css","RowWrapper","Component","constructor","props","event","_unmounted","onScroll","onResize","handleScroll","handleResize","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","trRef","className","row","isExpanded","rowProps","undefined","tableExpandableRow","modifiers","expanded","isOpen"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB,C,CAEA;;AAeA,OAAO,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAA8D;AAWnEC,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAClC,UAAMA,KAAN;;AADkC,0CAiCpBC,KAAD,IAAwB;AACrC,UAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,aAAKF,KAAL,CAAWG,QAAX,CAAqBF,KAArB;AACD;AACF,KArCmC;;AAAA,0CAuCpBA,KAAD,IAAkB;AAC/B,UAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,aAAKF,KAAL,CAAWI,QAAX,CAAqBH,KAArB;AACD;AACF,KA3CmC;;AAGlC,QAAID,KAAK,CAACG,QAAV,EAAoB;AAClB,WAAKE,YAAL,GAAoBX,QAAQ,CAAC,KAAKW,YAAN,EAAoB,GAApB,CAA5B;AACD;;AACD,QAAIL,KAAK,CAACI,QAAV,EAAoB;AAClB,WAAKE,YAAL,GAAoBZ,QAAQ,CAAC,KAAKY,YAAN,EAAoB,GAApB,CAA5B;AACD;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,UAAL,GAAkB,KAAlB;;AAEA,QAAI,KAAKF,KAAL,CAAWG,QAAf,EAAyB;AACvBK,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,YAAvC;AACD;;AACD,QAAI,KAAKL,KAAL,CAAWI,QAAf,EAAyB;AACvBI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKH,YAAvC;AACD;AACF;;AAEDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,UAAL,GAAkB,IAAlB;;AAEA,QAAI,KAAKF,KAAL,CAAWG,QAAf,EAAyB;AACvBK,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,YAA1C;AACD;;AACD,QAAI,KAAKL,KAAL,CAAWI,QAAf,EAAyB;AACvBI,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,YAA1C;AACD;AACF;;AAcDM,EAAAA,MAAM,GAAG;AACP,wBAQI,KAAKZ,KART;AAAA,UAAM;AACJa,MAAAA,KADI;AAEJC,MAAAA,SAFI;AAGJX,MAAAA,QAHI;AAIJC,MAAAA,QAJI;AAKJW,MAAAA,GAAG,EAAE;AAAEC,QAAAA;AAAF,OALD;AAMJC,MAAAA;AANI,KAAN;AAAA,UAOKjB,KAPL;;AAUA,WACE,uCACMA,KADN;AAEE,MAAA,GAAG,EAAEa,KAFP;AAGE,MAAA,SAAS,EAAEjB,GAAG,CACZkB,SADY,EAEZE,UAAU,KAAKE,SAAf,IAA4BvB,MAAM,CAACwB,kBAFvB,EAGZH,UAAU,IAAIrB,MAAM,CAACyB,SAAP,CAAiBC,QAHnB,CAHhB;AAQE,MAAA,MAAM,EAAEL,UAAU,KAAKE,SAAf,IAA4B,CAACF;AARvC,OADF;AAYD;;AA/EkE;;gBAAxDnB,U;AARXgB,EAAAA,K;AACAC,EAAAA,S;AACAX,EAAAA,Q;AACAC,EAAAA,Q;AACAW,EAAAA,G;AATAO,IAAAA,M;AACAN,IAAAA,U;;AASAC,EAAAA,Q;;;gBAGWpB,U,kBACW;AACpBiB,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,GAAG,EAAE;AACHO,IAAAA,MAAM,EAAEJ,SADL;AAEHF,IAAAA,UAAU,EAAEE;AAFT,GAFe;AAMpBD,EAAAA,QAAQ,EAAE;AANU,C","sourcesContent":["import * as React from 'react';\nimport { debounce } from '@patternfly/react-core';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\n\n// legacy export now, RowWrapperRow can simply be typed as IRow in the future\nexport interface RowWrapperRow {\n  isOpen?: Boolean;\n  isExpanded?: Boolean;\n}\n\nexport interface RowWrapperProps {\n  trRef?: React.Ref<any> | Function;\n  className?: string;\n  onScroll?: React.UIEventHandler;\n  onResize?: React.UIEventHandler;\n  row?: RowWrapperRow;\n  rowProps?: Object;\n}\n\nexport class RowWrapper extends React.Component<RowWrapperProps, {}> {\n  static defaultProps = {\n    className: '' as string,\n    row: {\n      isOpen: undefined as boolean,\n      isExpanded: undefined as boolean\n    } as RowWrapperRow,\n    rowProps: null as any\n  };\n  _unmounted: boolean;\n\n  constructor(props: RowWrapperProps) {\n    super(props);\n\n    if (props.onScroll) {\n      this.handleScroll = debounce(this.handleScroll, 100);\n    }\n    if (props.onResize) {\n      this.handleResize = debounce(this.handleResize, 100);\n    }\n  }\n\n  componentDidMount() {\n    this._unmounted = false;\n\n    if (this.props.onScroll) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n    if (this.props.onResize) {\n      window.addEventListener('resize', this.handleResize);\n    }\n  }\n\n  componentWillUnmount() {\n    this._unmounted = true;\n\n    if (this.props.onScroll) {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n    if (this.props.onResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  handleScroll = (event: Event): void => {\n    if (!this._unmounted) {\n      this.props.onScroll((event as unknown) as React.UIEvent<Element>);\n    }\n  }\n\n  handleResize = (event: Event) => {\n    if (!this._unmounted) {\n      this.props.onResize((event as unknown) as React.UIEvent<Element>);\n    }\n  }\n\n  render() {\n    const {\n      trRef,\n      className,\n      onScroll,\n      onResize,\n      row: { isExpanded },\n      rowProps,\n      ...props\n    } = this.props;\n\n    return (\n      <tr\n        {...props}\n        ref={trRef as React.Ref<any>}\n        className={css(\n          className,\n          isExpanded !== undefined && styles.tableExpandableRow,\n          isExpanded && styles.modifiers.expanded\n        )}\n        hidden={isExpanded !== undefined && !isExpanded}\n      />\n    );\n  }\n}\n"],"file":"RowWrapper.js"}