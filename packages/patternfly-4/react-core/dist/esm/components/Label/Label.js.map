{"version":3,"sources":["../../../../src/components/Label/Label.tsx"],"names":["React","styles","css","Label","children","className","isCompact","props","label","modifiers","compact"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,OAAO,MAAMC,KAA0C,GAAG;AAAA,MAAC;AACzDC,IAAAA,QADyD;AAEzDC,IAAAA,SAAS,GAAG,EAF6C;AAGzDC,IAAAA,SAAS,GAAG;AAH6C,GAAD;AAAA,MAIrDC,KAJqD;;AAAA,SAMxD,yCAAUA,KAAV;AAAiB,IAAA,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACO,KAAR,EAAeH,SAAf,EAA0BC,SAAS,IAAIL,MAAM,CAACQ,SAAP,CAAiBC,OAAxD;AAA/B,MACGN,QADH,CANwD;AAAA,CAAnD;;AAPLA,EAAAA,Q;AAEAC,EAAAA,S;AAEAC,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport { css } from '@patternfly/react-styles';\n\nexport interface LabelProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Content rendered inside the label. */\n  children: React.ReactNode;\n  /** Additional classes added to the label. */\n  className?: string;\n  /** Flag to show if the label is compact. */\n  isCompact?: boolean;\n}\n\nexport const Label: React.FunctionComponent<LabelProps> = ({\n  children,\n  className = '',\n  isCompact = false,\n  ...props\n}) => (\n  <span {...props} className={css(styles.label, className, isCompact && styles.modifiers.compact)}>\n    {children}\n  </span>\n);\n"],"file":"Label.js"}