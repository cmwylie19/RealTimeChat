{"version":3,"sources":["../../../../src/components/ChipGroup/ChipGroupToolbarItem.tsx"],"names":["React","css","styles","ChipGroupContext","ChipGroupToolbarItem","categoryName","children","className","props","Children","count","HeadingLevel","chipGroup","modifiers","toolbar","chipGroupLabel"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,8DAAnB;AACA,SAAQC,gBAAR,QAA+B,aAA/B;AAWA,OAAO,MAAMC,oBAAwE,GAAG,UAKvD;AAAA,MALwD;AACvFC,IAAAA,YAAY,GAAG,EADwE;AAEvFC,IAAAA,QAAQ,GAAG,IAF4E;AAGvFC,IAAAA,SAAS,GAAG;AAH2E,GAKxD;AAAA,MAD5BC,KAC4B;;AAC7B,MAAIR,KAAK,CAACS,QAAN,CAAeC,KAAf,CAAqBJ,QAArB,CAAJ,EAAoC;AAClC,WACE,oBAAC,gBAAD,CAAkB,QAAlB,QACIK,YAAD,IAAuB;AACtB,aACE;AAAI,QAAA,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACU,SAAR,EAAmBV,MAAM,CAACW,SAAP,CAAiBC,OAApC,EAA6CP,SAA7C;AAAlB,SAA+EC,KAA/E,GACE,gCACE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEP,GAAG,CAACC,MAAM,CAACa,cAAR;AAA5B,SAAsDV,YAAtD,CADF,EAEE;AAAI,QAAA,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACU,SAAR;AAAlB,SAAuCN,QAAvC,CAFF,CADF,CADF;AAQD,KAVH,CADF;AAcD;;AACD,SAAO,IAAP;AACD,CAvBI;;AAPLD,EAAAA,Y;AAEAC,EAAAA,Q;AAEAC,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ChipGroup/chip-group';\nimport {ChipGroupContext} from './ChipGroup';\n\nexport interface ChipGroupToolbarItemProps extends React.HTMLProps<HTMLUListElement> {\n  /**  Category name text */\n  categoryName?: string;\n  /** Content rendered inside the chip text */\n  children: React.ReactNode;\n  /** Additional classes added to the chip item */\n  className?: string;\n}\n\nexport const ChipGroupToolbarItem: React.FunctionComponent<ChipGroupToolbarItemProps> = ({\n  categoryName = '',\n  children = null,\n  className = '',\n  ...props\n}: ChipGroupToolbarItemProps) => {\n    if (React.Children.count(children)) {\n      return (\n        <ChipGroupContext.Consumer>\n          {(HeadingLevel: any) => {\n            return (\n              <ul className={css(styles.chipGroup, styles.modifiers.toolbar, className)} {...props}>\n                <li>\n                  <HeadingLevel className={css(styles.chipGroupLabel)}>{categoryName}</HeadingLevel>\n                  <ul className={css(styles.chipGroup)}>{children}</ul>\n                </li>\n              </ul>\n            );\n          }}\n        </ChipGroupContext.Consumer>\n      );\n    }\n    return null;\n  };\n"],"file":"ChipGroupToolbarItem.js"}