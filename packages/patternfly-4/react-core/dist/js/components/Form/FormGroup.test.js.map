{"version":3,"sources":["../../../../src/components/Form/FormGroup.test.tsx"],"names":["describe","returnFunction","test","view","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormGroup } from './FormGroup';\nimport { Form } from './Form';\nimport { mount } from 'enzyme';\n\ndescribe('FormGroup component', () => {\n  const returnFunction = () => <div>label</div>;\n\n  test('should render default form group variant', () => {\n    const view = mount(\n      <FormGroup label=\"label\" fieldId=\"label-id\" helperText=\"this is helper text\">\n        <input id=\"label-id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render inline form group variant', () => {\n    const view = mount(\n      <FormGroup isInline label=\"label\" fieldId=\"label-id\" helperText=\"this is helper text\">\n        <input id=\"label-id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant with required label', () => {\n    const view = mount(\n      <FormGroup label=\"label\" isRequired fieldId=\"label-id\">\n        <input id=\"label-id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant with node label', () => {\n    const view = mount(\n      <FormGroup fieldId=\"id\" label={<h1>Header</h1>}>\n        <input aria-label=\"input\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant with function label', () => {\n    const view = mount(\n      <FormGroup fieldId=\"id\" label={returnFunction()}>\n        <input aria-label=\"input\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant with node helperText', () => {\n    const view = mount(\n      <FormGroup label=\"Label\" fieldId=\"label-id\" helperText={<h1>Header</h1>}>\n        <input id=\"label-id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant with function helperText', () => {\n    const view = mount(\n      <FormGroup label=\"Label\" fieldId=\"label-id\" helperText={returnFunction()}>\n        <input id=\"label-id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render horizontal form group variant', () => {\n    const view = mount(\n      <Form isHorizontal>\n        <FormGroup label=\"label\" fieldId=\"label-id\" helperText=\"this is helperText\">\n          <input id=\"label-id\" />\n        </FormGroup>\n      </Form>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group variant without label', () => {\n    const view = mount(\n      <FormGroup fieldId=\"id\">\n        <input aria-label=\"input\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group required variant', () => {\n    const view = mount(\n      <FormGroup isRequired label=\"label\" fieldId=\"id\">\n        <input id=\"id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render form group invalid variant', () => {\n    const view = mount(\n      <FormGroup label=\"label\" fieldId=\"label-id\" isValid={false} helperTextInvalid=\"Invalid FormGroup\">\n        <input id=\"id\" />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render correctly when label is not a string with Children = Array', () => {\n    const view = mount(\n      <FormGroup fieldId=\"id\" label={returnFunction()}>\n        <input aria-label=\"label\" />\n        <input id=\"id\" />\n        <input />\n      </FormGroup>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"FormGroup.test.js"}