{"version":3,"sources":["../../../../src/components/Modal/ModalContent.tsx"],"names":["FocusTrap","require","ModalContent","children","className","isOpen","header","title","hideTitle","showClose","footer","actions","isFooterLeftAligned","onClose","undefined","isLarge","isSmall","width","ariaDescribedById","id","disableFocusTrap","props","modalBoxHeader","titleStyles","modalBoxFooter","length","boxStyle","modalBox","clickOutsideDeactivates","styles","bullseye"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\n// Can't use ES6 imports :(\n// The types for it are also wrong, we should probably ditch this dependency.\n// tslint:disable-next-line\nconst FocusTrap: any = require('focus-trap-react');\n\nimport styles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nimport titleStyles from '@patternfly/react-styles/css/components/Title/title';\nimport { css } from '@patternfly/react-styles';\n\nimport { Backdrop } from '../Backdrop/Backdrop';\nimport { ModalBoxBody } from './ModalBoxBody';\nimport { ModalBoxHeader } from './ModalBoxHeader';\nimport { ModalBoxCloseButton } from './ModalBoxCloseButton';\nimport { ModalBox } from './ModalBox';\nimport { ModalBoxFooter } from './ModalBoxFooter';\n\nexport interface ModalContentProps {\n  /** Content rendered inside the Modal. */\n  children: React.ReactNode;\n  /** Additional classes added to the button */\n  className?: string;\n  /** Creates a large version of the Modal */\n  isLarge?: boolean;\n  /** Creates a small version of the Modal */\n  isSmall?: boolean;\n  /** Flag to show the modal */\n  isOpen?: boolean;\n  /** Complex header (more than just text), supersedes title for header content */\n  header?: React.ReactNode;\n  /** Simple text content of the Modal Header, also used for aria-label on the body */\n  title: string;\n  /** Flag to show the title (ignored for custom headers) */\n  hideTitle?: boolean;\n  /** Flag to show the close button in the header area of the modal */\n  showClose?: boolean;\n  /** Default width of the content. */\n  width?: number | string;\n  /** Custom footer */\n  footer?: React.ReactNode;\n  /** Action buttons to add to the standard Modal Footer, ignored if `footer` is given */\n  actions?: any;\n  /** Flag to indicate that the Footer content is left aligned */\n  isFooterLeftAligned?: boolean;\n  /** A callback for when the close button is clicked */\n  onClose?: () => void;\n  /** Id to use for Modal Box description */\n  ariaDescribedById?: string;\n  /** Id of the ModalBoxBody */\n  id: string;\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n}\n\nexport const ModalContent: React.FunctionComponent<ModalContentProps> = ({\n  children,\n  className = '',\n  isOpen = false,\n  header = null,\n  title,\n  hideTitle = false,\n  showClose = true,\n  footer = null,\n  actions = [],\n  isFooterLeftAligned = false,\n  onClose = () => undefined as any,\n  isLarge = false,\n  isSmall = false,\n  width = -1,\n  ariaDescribedById = '',\n  id = '',\n  disableFocusTrap = false,\n  ...props\n}: ModalContentProps) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  const modalBoxHeader = header ?\n    <div className={css(titleStyles.title)}>{header}</div> :\n    <ModalBoxHeader hideTitle={hideTitle}> {title} </ModalBoxHeader>;\n\n  const modalBoxFooter = footer ?\n    <ModalBoxFooter isLeftAligned={isFooterLeftAligned}>{footer}</ModalBoxFooter> :\n    actions.length > 0 && <ModalBoxFooter isLeftAligned={isFooterLeftAligned}>{actions}</ModalBoxFooter>;\n  const boxStyle = width === -1 ? {} : { width };\n  const modalBox = (\n    <ModalBox\n      style={boxStyle}\n      className={className}\n      isLarge={isLarge}\n      isSmall={isSmall}\n      title={title}\n      id={ariaDescribedById || id}\n    >\n      {showClose && <ModalBoxCloseButton onClose={onClose} />}\n      {modalBoxHeader}\n      <ModalBoxBody {...props} id={id}>\n        {children}\n      </ModalBoxBody>\n      {modalBoxFooter}\n    </ModalBox>\n  );\n  return (\n    <Backdrop>\n      <FocusTrap active={!disableFocusTrap} focusTrapOptions={{ clickOutsideDeactivates: true }} className={css(styles.bullseye)}>\n        {modalBox}\n      </FocusTrap>\n    </Backdrop>\n  );\n};\n"],"file":"ModalContent.js"}