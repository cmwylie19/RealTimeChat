{"version":3,"sources":["../../../../../src/components/TopologyView/examples/ProjectToolbar.js"],"names":["React","Dropdown","DropdownPosition","DropdownToggle","DropdownItem","Stack","StackItem","Toolbar","ToolbarGroup","ToolbarItem","projects","id","name","applications","ProjectToolbar","Component","selectedProject","selectedApplication","projectDropDownOpen","applicationDropDownOpen","isOpen","setState","e","project","preventDefault","application","state","onProjectDropDownToggle","right","map","onProjectSelect","onApplicationDropDownToggle","onApplicationSelect","render","renderProjectDropdown","renderApplicationDropdown"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownItem,\n  Stack,\n  StackItem,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\n\nconst projects = [\n  { id: 1, name: 'Project 1' },\n  { id: 2, name: 'Project 2' },\n  { id: 3, name: 'Project 3' },\n  { id: 4, name: 'Project 4' },\n  { id: 'all', name: 'All' }\n];\n\nconst applications = [\n  { id: 1, name: 'Application 1' },\n  { id: 2, name: 'Application 2' },\n  { id: 3, name: 'Application 3' },\n  { id: 4, name: 'Application 4' },\n  { id: 'all', name: 'All' }\n];\n\nexport class ProjectToolbar extends React.Component {\n  state = {\n    selectedProject: projects[4],\n    selectedApplication: applications[4],\n    projectDropDownOpen: false,\n    applicationDropDownOpen: false\n  };\n\n  onProjectDropDownToggle = isOpen => {\n    this.setState({ projectDropDownOpen: isOpen });\n  }\n\n  onProjectSelect = (e, project) => {\n    e.preventDefault();\n    this.setState({ selectedProject: project, projectDropDownOpen: false });\n  }\n\n  onApplicationDropDownToggle = isOpen => {\n    this.setState({ applicationDropDownOpen: isOpen });\n  }\n\n  onApplicationSelect = (e, application) => {\n    e.preventDefault();\n    this.setState({ selectedApplication: application, applicationDropDownOpen: false });\n  }\n\n  renderProjectDropdown = () => {\n    const { projectDropDownOpen, selectedProject } = this.state;\n\n    return (\n      <Stack>\n        <StackItem>\n          <label>Project</label>\n        </StackItem>\n        <StackItem>\n          <Dropdown\n            onToggle={this.onProjectDropDownToggle}\n            position={DropdownPosition.right}\n            toggle={<DropdownToggle onToggle={this.onProjectDropDownToggle}>{selectedProject.name}</DropdownToggle>}\n            isOpen={projectDropDownOpen}\n            dropdownItems={projects.map(project => (\n              <DropdownItem key={project.id} onClick={e => this.onProjectSelect(e, project)}>\n                {project.name}\n              </DropdownItem>\n            ))}\n          />\n        </StackItem>\n      </Stack>\n    );\n  }\n\n  renderApplicationDropdown = () => {\n    const { applicationDropDownOpen, selectedApplication } = this.state;\n\n    return (\n      <Stack>\n        <StackItem>\n          <label>Application</label>\n        </StackItem>\n        <StackItem>\n          <Dropdown\n            onToggle={this.onApplicationDropDownToggle}\n            position={DropdownPosition.right}\n            toggle={\n              <DropdownToggle onToggle={this.onApplicationDropDownToggle}>{selectedApplication.name}</DropdownToggle>\n            }\n            isOpen={applicationDropDownOpen}\n            dropdownItems={applications.map(application => (\n              <DropdownItem key={application.id} onClick={e => this.onApplicationSelect(e, application)}>\n                {application.name}\n              </DropdownItem>\n            ))}\n          />\n        </StackItem>\n      </Stack>\n    );\n  }\n\n  render() {\n    return (\n      <Toolbar className=\"project-toolbar pf-u-mx-md pf-u-mt-md\">\n        <ToolbarGroup>\n          <ToolbarItem className=\"pf-u-mr-xl\">{this.renderProjectDropdown()}</ToolbarItem>\n          <ToolbarItem className=\"pf-u-mr-md\">{this.renderApplicationDropdown()}</ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n  }\n}\n"],"file":"ProjectToolbar.js"}