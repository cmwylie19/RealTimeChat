{"version":3,"sources":["../../../../src/components/InlineEdit/editableRowWrapper.test.js"],"names":["React","PropTypes","mount","default","editableRowWrapper","TableEditConfirmation","mockClosest","TestRow","trRef","propTypes","func","defaultProps","getRowWrapper","row","props","RowWrapper","buildRow","editConfirmationType","ROW","editConfig","describe","mountOptions","container","beforeEach","attachTo","find","getDOMNode","selector","undefined","afterEach","unmount","test","jest","fn","view","onResize","onScroll","expect","toMatchSnapshot","toHaveBeenCalled","Object","keys","forEach","confirmationType","toHaveLength","detach","isEditing","isParentEditing","isChildEditing","isLastVisibleParent","isTableEditing","isFirstVisible","TABLE_TOP","isLastVisible","TABLE_BOTTOM","NONE","onEditConfirmed","onEditCanceled","Fragment","simulate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { mount } from 'enzyme/build';\n\nimport { default as editableRowWrapper } from './editableRowWrapper';\nimport { TableEditConfirmation } from './constants';\nimport { mockClosest } from '../../test-helpers/helpers';\n\nconst TestRow = ({ trRef }) => <tr ref={trRef} />;\n\nTestRow.propTypes = {\n  trRef: PropTypes.func\n};\n\nTestRow.defaultProps = {\n  trRef: null\n};\n\nconst getRowWrapper = (row, props) => {\n  const RowWrapper = editableRowWrapper(TestRow);\n  return <RowWrapper {...props} row={row} />;\n};\n\nconst buildRow = (row = {}, editConfirmationType = TableEditConfirmation.ROW) => ({\n  ...row,\n  editConfig: { editConfirmationType }\n});\n\ndescribe('editableRowWrapper', () => {\n  let mountOptions;\n  let container;\n\n  beforeEach(() => {\n    container = mount(\n      <table>\n        <tbody />\n      </table>\n    );\n    mountOptions = {\n      attachTo: container.find('tbody').getDOMNode()\n    };\n\n    mockClosest(null, selector => (selector === 'table' ? container.getDOMNode() : undefined), true);\n  });\n\n  afterEach(() => {\n    container.unmount();\n  });\n\n  test('renders correctly', () => {\n    const trRef = jest.fn();\n    const view = mount(\n      getRowWrapper(buildRow({}, null), {\n        onResize: jest.fn(),\n        onScroll: jest.fn(),\n        trRef\n      }),\n      mountOptions\n    );\n    expect(view).toMatchSnapshot();\n    expect(trRef).toHaveBeenCalled();\n  });\n\n  test('sets editable row classname', () => {\n    [...Object.keys(TableEditConfirmation), null].forEach(confirmationType => {\n      const view = mount(getRowWrapper(buildRow({}, confirmationType)), mountOptions);\n      expect(view.find('.pf-c-table__editable-row')).toHaveLength(1);\n      view.detach();\n    });\n  });\n\n  test('has inline edit buttons', () => {\n    [\n      buildRow({ isEditing: true }),\n      buildRow({ isEditing: true, isParentEditing: true }), // expandable\n      buildRow({ isEditing: true, isChildEditing: true, isLastVisibleParent: true }), // expandable\n      buildRow({ isTableEditing: true, isFirstVisible: true }, TableEditConfirmation.TABLE_TOP),\n      buildRow({ isTableEditing: true, isLastVisible: true }, TableEditConfirmation.TABLE_BOTTOM)\n    ].forEach(row => {\n      const view = mount(getRowWrapper(row), mountOptions);\n      expect(view.find('.pf-c-table__inline-edit-buttons')).toHaveLength(1);\n      view.detach();\n    });\n  });\n\n  test('does not have inline edit buttons', () => {\n    [\n      buildRow({ isEditing: true }, TableEditConfirmation.NONE),\n      buildRow({ isEditing: true }, TableEditConfirmation.TABLE_TOP),\n      buildRow({ isEditing: true }, TableEditConfirmation.TABLE_BOTTOM),\n      buildRow({ isEditing: true, isParentEditing: true, isLastVisible: true }), // expandable\n      buildRow({ isEditing: true, isChildEditing: true }), // expandable\n      buildRow({ isTableEditing: true, isLastVisible: true }, TableEditConfirmation.NONE),\n      buildRow({ isTableEditing: true, isLastVisible: true }),\n      buildRow({ isTableEditing: true }, TableEditConfirmation.TABLE_TOP),\n      buildRow({ isTableEditing: true }, TableEditConfirmation.TABLE_BOTTOM),\n      buildRow({ isTableEditing: true, isLastVisible: true }, TableEditConfirmation.TABLE_TOP),\n      buildRow({ isTableEditing: true, isFirstVisible: true }, TableEditConfirmation.TABLE_BOTTOM)\n    ].forEach(row => {\n      const view = mount(getRowWrapper(row), mountOptions);\n      expect(view.find('.pf-c-table__inline-edit-buttons')).toHaveLength(0);\n      view.detach();\n    });\n  });\n\n  test('onEditConfirmed and onEditCanceled called', () => {\n    const onEditConfirmed = jest.fn();\n    const onEditCanceled = jest.fn();\n    const row = {\n      isEditing: true,\n      editConfig: {\n        editConfirmationType: TableEditConfirmation.ROW,\n        onEditConfirmed,\n        onEditCanceled\n      }\n    };\n\n    const view = mount(getRowWrapper(row, null, React.Fragment), mountOptions);\n    view.find('.pf-c-table__inline-edit-buttons button.pf-c-button.pf-m-primary').simulate('mouseup');\n    expect(onEditConfirmed).toHaveBeenCalled();\n\n    view.find('.pf-c-table__inline-edit-buttons button.pf-c-button.pf-m-plain').simulate('mouseup');\n    expect(onEditCanceled).toHaveBeenCalled();\n  });\n});\n"],"file":"editableRowWrapper.test.js"}