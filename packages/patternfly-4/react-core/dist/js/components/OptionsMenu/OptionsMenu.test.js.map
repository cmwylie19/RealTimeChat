{"version":3,"sources":["../../../../src/components/OptionsMenu/OptionsMenu.test.js"],"names":["menuItems","describe","test","view","expect","toMatchSnapshot","OptionsMenuPosition","right","OptionsMenuDirection","up"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { OptionsMenu, OptionsMenuDirection, OptionsMenuPosition } from './OptionsMenu';\nimport { OptionsMenuToggle } from './OptionsMenuToggle';\nimport { OptionsMenuItemGroup } from './OptionsMenuItemGroup';\nimport { OptionsMenuItem } from './OptionsMenuItem';\nimport { OptionsMenuSeparator } from './OptionsMenuSeparator';\nimport { OptionsMenuToggleWithText } from './OptionsMenuToggleWithText';\n\nconst menuItems = [\n  <OptionsMenuItemGroup key=\"first group\">\n    <OptionsMenuItem key=\"name\">Name</OptionsMenuItem>\n    <OptionsMenuItem key=\"date\">Date</OptionsMenuItem>\n    <OptionsMenuItem isDisabled key=\"disabled\">\n      Disabled\n    </OptionsMenuItem>\n    <OptionsMenuItem key=\"size\">Size</OptionsMenuItem>\n  </OptionsMenuItemGroup>,\n  <OptionsMenuSeparator key=\"separator\" />,\n  <OptionsMenuItemGroup key=\"second group\">\n    <OptionsMenuItem key=\"ascending\">Ascending</OptionsMenuItem>\n    <OptionsMenuItem key=\"descending\">Descending</OptionsMenuItem>\n  </OptionsMenuItemGroup>\n];\n\ndescribe('optionsMenu', () => {\n  test('regular', () => {\n    const view = mount(\n      <OptionsMenu id=\"regular\" menuItems={menuItems} toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>} />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"rightAligned\"\n        menuItems={menuItems}\n        position={OptionsMenuPosition.right}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('open up', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"openUp\"\n        menuItems={menuItems}\n        direction={OptionsMenuDirection.up}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('right aligned + open up', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"rightAlignedOpenUp\"\n        menuItems={menuItems}\n        position={OptionsMenuPosition.right}\n        direction={OptionsMenuDirection.up}\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('expanded', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"expanded\"\n        menuItems={menuItems}\n        isOpen\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('plain', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"plain\"\n        menuItems={menuItems}\n        isPlain\n        toggle={<OptionsMenuToggle>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('text', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"text\"\n        menuItems={menuItems}\n        toggle={\n          <OptionsMenuToggleWithText toggleButtonContents={<React.Fragment>Test</React.Fragment>} toggleText=\"Test\" />\n        }\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('isDisabled', () => {\n    const view = mount(\n      <OptionsMenu\n        id=\"disabled\"\n        menuItems={menuItems}\n        toggle={<OptionsMenuToggle isDisabled>Options Menu</OptionsMenuToggle>}\n      />\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"OptionsMenu.test.js"}