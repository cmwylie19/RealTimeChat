{"version":3,"sources":["../../../../src/components/Tabs/Tab.tsx"],"names":["Tab0","children","eventKey","className","tabContentId","tabContentRef","title","props","Component","href","withForwardedRef","TabContainer","forwardRef","rest","React","Tab"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMA,IAAuC,GAAG,SAA1CA,IAA0C,OAQhC;AAAA,MAPdC,QAOc,QAPdA,QAOc;AAAA,MANdC,QAMc,QANdA,QAMc;AAAA,4BALdC,SAKc;AAAA,MALdA,SAKc,+BALF,EAKE;AAAA,MAJdC,YAIc,QAJdA,YAIc;AAAA,MAHdC,aAGc,QAHdA,aAGc;AAAA,MAFdC,KAEc,QAFdA,KAEc;AAAA,MADXC,KACW;;AACd;AACA,MAAMC,SAAS,GAAID,KAAK,CAACE,IAAN,GAAa,GAAb,GAAmB,QAAtC;AACA,SACE,oBAAC,SAAD,eAAeF,KAAf;AAAsB,IAAA,SAAS,EAAEJ,SAAjC;AAA4C,IAAA,GAAG,EAAEE;AAAjD,MACGJ,QADH,CADF;AAKD,CAhBD;;;AAfEA,EAAAA,Q;AAEAE,EAAAA,S;AAEAM,EAAAA,I;AAEAH,EAAAA,K;AAEAJ,EAAAA,Q;AAEAE,EAAAA,Y;AAEAC,EAAAA,a;;;AAyBF,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,SAAD,EAAoB;AAAA,MACrCG,YADqC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAEhC;AAAA,0BACyB,KAAKJ,KAD9B;AAAA,YACCK,UADD,eACCA,UADD;AAAA,YACgBC,IADhB;;AAEP,eAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED;AAAhB,WAAgCC,IAAhC,EAAP;AACD;AALwC;;AAAA;AAAA,IAChBC,KAAK,CAACN,SADU;;AAAA,kBACrCG,YADqC;AArC3CV,IAAAA,QAqC2C;AAnC3CE,IAAAA,SAmC2C;AAjC3CM,IAAAA,IAiC2C;AA/B3CH,IAAAA,KA+B2C;AA7B3CJ,IAAAA,QA6B2C;AA3B3CE,IAAAA,YA2B2C;AAzB3CC,IAAAA,aAyB2C;AAH3CO,IAAAA,UAG2C;AAAA;;AAO3C,SAAOE,KAAK,CAACF,UAAN,CAAiB,UAACL,KAAD,EAAaF,aAAb;AAAA,WAA+B,oBAAC,YAAD,eAAkBE,KAAlB;AAAyB,MAAA,UAAU,EAAEF;AAArC,OAA/B;AAAA,GAAjB,CAAP;AACD,CARD;;AAUO,IAAMU,GAAG,GAAGL,gBAAgB,CAACV,IAAD,CAA5B","sourcesContent":["import * as React from 'react';\nimport { Omit } from '../../helpers/typeUtils';\n\nexport interface TabProps extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'title'> {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode; \n  /** additional classes added to the Tab */\n  className?: string; \n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs variant=\"nav\"> should have an href. */\n  href?: string; \n  /** Tab title */\n  title: React.ReactNode;\n  /** uniquely identifies the tab */\n  eventKey: number | string; \n  /** child id for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentId?: string | number; \n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.RefObject<any>;\n}\n\nconst Tab0: React.FunctionComponent<TabProps> = ({\n  children,\n  eventKey,\n  className = '',\n  tabContentId,\n  tabContentRef,\n  title,\n  ...props\n}: TabProps) => {\n  // destructuring to prevent console warnings for applying eventKey, and tabContentId to a DOM element and remove title from the DOM element\n  const Component = (props.href ? 'a' : 'button') as any;\n  return (\n    <Component {...props} className={className} ref={tabContentRef}>\n      {children}\n    </Component>\n  );\n}\n\ninterface ForwardedRefProps extends TabProps {\n  forwardRef?: React.Ref<any>;\n}\n\nconst withForwardedRef = (Component: any) => {\n  class TabContainer extends React.Component<ForwardedRefProps> {\n    render() {\n      const { forwardRef, ...rest } = this.props;\n      return <Component ref={forwardRef} {...rest} />;\n    }\n  }\n  return React.forwardRef((props: any, tabContentRef) => <TabContainer {...props} forwardRef={tabContentRef} />);\n};\n\nexport const Tab = withForwardedRef(Tab0);\n"],"file":"Tab.js"}