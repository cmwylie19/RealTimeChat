{"version":3,"sources":["../../../../src/components/Select/SelectToggle.test.tsx"],"names":["describe","test","mockToggle","jest","fn","view","current","document","createElement","find","first","simulate","expect","mock","calls","toBe","map","addEventListener","event","cb","mousedown","target","touchstart","removeEventListener","unmount","toHaveLength","toHaveBeenCalledWith","any","Function","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { SelectToggle } from './SelectToggle';\n\ndescribe('API', () => {\n  test('click on closed', () => {\n    const mockToggle = jest.fn();\n    const view = mount(\n      <SelectToggle id=\"Select Toggle\" onToggle={mockToggle} parentRef={{ current: document.createElement('div') }}>\n        Select\n      </SelectToggle>\n    );\n\n    view\n      .find('button')\n      .first()\n      .simulate('click');\n    expect(mockToggle.mock.calls[0][0]).toBe(true);\n  });\n\n  test('click on opened', () => {\n    const mockToggle = jest.fn();\n    const view = mount(\n      <SelectToggle\n        id=\"Select Toggle\"\n        onToggle={mockToggle}\n        isExpanded\n        parentRef={{ current: document.createElement('div') }}\n      >\n        Select\n      </SelectToggle>\n    );\n\n    view\n      .find('button')\n      .first()\n      .simulate('click');\n    expect(mockToggle.mock.calls[0][0]).toBe(false);\n  });\n\n  test('click on document', () => {\n    const map = {} as any;\n    document.addEventListener = jest.fn((event, cb) => {\n      map[event] = cb;\n    });\n    const mockToggle = jest.fn();\n    mount(\n      <SelectToggle\n        id=\"Select Toggle\"\n        onToggle={mockToggle}\n        isExpanded\n        parentRef={{ current: document.createElement('div') }}\n      >\n        Select\n      </SelectToggle>\n    );\n\n    map.mousedown({ target: document });\n    expect(mockToggle.mock.calls[0][0]).toBe(false);\n  });\n\n  test('touch on document', () => {\n    const map = {} as any;\n    document.addEventListener = jest.fn((event, cb) => {\n      map[event] = cb;\n    });\n    const mockToggle = jest.fn();\n    mount(\n      <SelectToggle\n        id=\"Select Toggle\"\n        onToggle={mockToggle}\n        isExpanded\n        parentRef={{ current: document.createElement('div') }}\n      >\n        Select\n      </SelectToggle>\n    );\n\n    map.touchstart({ target: document });\n    expect(mockToggle.mock.calls[0][0]).toBe(false);\n  });\n\n  test('on click outside has been removed', () => {\n    const map = {} as any;\n    document.addEventListener = jest.fn((event, cb) => {\n      map[event] = cb;\n    });\n    document.removeEventListener = jest.fn((event, cb) => {\n      if (map[event] === cb) { map[event] = () => {}; }\n    });\n    const mockToggle = jest.fn();\n    const view = mount(\n      <SelectToggle\n        id=\"Select Toggle\"\n        onToggle={mockToggle}\n        isExpanded\n        parentRef={{ current: document.createElement('div') }}\n      >\n        Select\n      </SelectToggle>\n    );\n    view.unmount();\n    map.mousedown({ target: document });\n    expect(mockToggle.mock.calls).toHaveLength(0);\n    expect(document.removeEventListener).toHaveBeenCalledWith('mousedown', expect.any(Function));\n  });\n\n  test('on touch outside has been removed', () => {\n    const map = {} as any;\n    document.addEventListener = jest.fn((event, cb) => {\n      map[event] = cb;\n    });\n    document.removeEventListener = jest.fn((event, cb) => {\n      if (map[event] === cb) { map[event] = () => {}; }\n    });\n    const mockToggle = jest.fn();\n    const view = mount(\n      <SelectToggle\n        id=\"Select Toggle\"\n        onToggle={mockToggle}\n        isExpanded\n        parentRef={{ current: document.createElement('div') }}\n      >\n        Select\n      </SelectToggle>\n    );\n    view.unmount();\n    map.touchstart({ target: document });\n    expect(mockToggle.mock.calls).toHaveLength(0);\n    expect(document.removeEventListener).toHaveBeenCalledWith('touchstart', expect.any(Function));\n  });\n});\n\ndescribe('state', () => {\n  test('hover', () => {\n    const view = mount(\n      <SelectToggle id=\"Select Toggle\" isHovered parentRef={{ current: document.createElement('div') }}>\n        Select\n      </SelectToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('active', () => {\n    const view = mount(\n      <SelectToggle id=\"Select Toggle\" isActive parentRef={{ current: document.createElement('div') }}>\n        Select\n      </SelectToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n\n  test('focus', () => {\n    const view = mount(\n      <SelectToggle id=\"Select Toggle\" isFocused parentRef={{ current: document.createElement('div') }}>\n        Select\n      </SelectToggle>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"SelectToggle.test.js"}