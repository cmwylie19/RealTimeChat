{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbItem.test.tsx"],"names":["describe","test","view","expect","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAM;AACjD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD,eAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,6CAAD,EAAgD,YAAM;AACxD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD;AAAgB,MAAA,SAAS,EAAC;AAA1B,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAM;AACjD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD;AAAgB,MAAA,EAAE,EAAC;AAAnB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,qCAAD,EAAwC,YAAM;AAChD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD;AAAgB,MAAA,QAAQ;AAAxB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD;AAAgB,MAAA,EAAE,EAAC;AAAnB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,0CAAD,EAA6C,YAAM;AACrD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,8BAAD;AAAgB,MAAA,MAAM,EAAC;AAAvB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,kDAAD,EAAqD,YAAM;AAC7D,QAAMC,IAAI,GAAG,qBACX,oBAAC,8BAAD,QACE,yCADF,CADW,CAAb;AAKAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAPG,CAAJ;AAQD,CAvCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { shallow } from 'enzyme';\n\ndescribe('BreadcrumbItem component', () => {\n  test('should render default breadcrumbItem', () => {\n    const view = shallow(<BreadcrumbItem>Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbItem with className', () => {\n    const view = shallow(<BreadcrumbItem className=\"Class\">Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbItem with id', () => {\n    const view = shallow(<BreadcrumbItem id=\"Item 1\">Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render active breadcrumbItem', () => {\n    const view = shallow(<BreadcrumbItem isActive>Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render link breadcrumbItem', () => {\n    const view = shallow(<BreadcrumbItem to=\"/somewhere\">Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbItem with target', () => {\n    const view = shallow(<BreadcrumbItem target=\"/somewhere\">Item</BreadcrumbItem>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbItem with custom element', () => {\n    const view = shallow(\n      <BreadcrumbItem>\n        <h1>Header</h1>\n      </BreadcrumbItem>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"BreadcrumbItem.test.js"}