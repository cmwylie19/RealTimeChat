{"version":3,"sources":["../../../esm/components/Progress/Progress.test.js"],"names":["test","view","React","createElement","Progress","value","id","expect","toMatchSnapshot","label","valueText","min","max","describe","Object","keys","ProgressSize","forEach","oneSize","size","ProgressVariant","oneVariant","variant","ProgressMeasureLocation","oneLocation","measureLocation","inside","sm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\nimport { Progress, ProgressSize } from './Progress';\nimport { ProgressVariant, ProgressMeasureLocation } from './ProgressContainer';\ntest('Simple progress', () => {\n  const view = mount(React.createElement(Progress, {\n    value: 33,\n    id: \"progress-simple-example\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('no value specified', () => {\n  const view = mount(React.createElement(Progress, {\n    id: \"no-value\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('additional label', () => {\n  const view = mount(React.createElement(Progress, {\n    id: \"additional-label\",\n    value: 33,\n    label: \"Additional label\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('Progress with aria-valuetext', () => {\n  const view = mount(React.createElement(Progress, {\n    value: 33,\n    id: \"progress-aria-valuetext\",\n    valueText: \"Descriptive text here\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('value lower than minValue', () => {\n  const view = mount(React.createElement(Progress, {\n    value: 33,\n    id: \"lower-min-value\",\n    min: 40\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('value higher than maxValue', () => {\n  const view = mount(React.createElement(Progress, {\n    value: 77,\n    id: \"higher-max-value\",\n    max: 60\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('value scaled with minValue', () => {\n  const view = mount(React.createElement(Progress, {\n    min: 10,\n    value: 50,\n    id: \"scaled-min-value\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('value scaled with maxValue', () => {\n  const view = mount(React.createElement(Progress, {\n    value: 50,\n    id: \"scaled-max-value\",\n    max: 80\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('value scaled between minValue and maxValue', () => {\n  const view = mount(React.createElement(Progress, {\n    min: 10,\n    value: 50,\n    id: \"scaled-range-value\",\n    max: 80\n  }));\n  expect(view).toMatchSnapshot();\n});\ndescribe('Progress size', () => {\n  Object.keys(ProgressSize).forEach(oneSize => {\n    test(oneSize, () => {\n      const view = mount(React.createElement(Progress, {\n        id: `${oneSize}-progress`,\n        value: 33,\n        size: oneSize\n      }));\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\ndescribe('Progress variant', () => {\n  Object.keys(ProgressVariant).forEach(oneVariant => {\n    test(oneVariant, () => {\n      const view = mount(React.createElement(Progress, {\n        id: `${oneVariant}-progress`,\n        value: 33,\n        variant: oneVariant\n      }));\n      expect(view).toMatchSnapshot();\n    });\n  });\n});\ndescribe('Progress measure location', () => {\n  Object.keys(ProgressMeasureLocation).forEach(oneLocation => {\n    test(oneLocation, () => {\n      const view = mount(React.createElement(Progress, {\n        id: `${oneLocation}-progress`,\n        value: 33,\n        measureLocation: oneLocation\n      }));\n      expect(view).toMatchSnapshot();\n    });\n  });\n  test('inside and small should render large', () => {\n    const view = mount(React.createElement(Progress, {\n      id: \"large-progress\",\n      value: 33,\n      measureLocation: ProgressMeasureLocation.inside,\n      size: ProgressSize.sm\n    }));\n    expect(view).toMatchSnapshot();\n  });\n});\n//# sourceMappingURL=Progress.test.js.map"],"file":"Progress.test.js"}