{"version":3,"sources":["../../../esm/layouts/Grid/GridItem.test.js"],"names":["React","test","view","createElement","GridItem","span","expect","props","className","toMatchSnapshot","offset","rowSpan","Object","values","DeviceSizes","forEach","size"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIZC,EAAAA,IAAI,CAAC,iBAAD,EAAoB,MAAM;AAC5B,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDC,MAAAA,IAAI,EAAE;AAD2C,KAA9B,CAAR,CAAb;AAGAC,IAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GALG,CAAJ;AAMAR,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDM,MAAAA,MAAM,EAAE;AADyC,KAA9B,CAAR,CAAb;AAGAJ,IAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GALG,CAAJ;AAMAR,EAAAA,IAAI,CAAC,gBAAD,EAAmB,MAAM;AAC3B,UAAMC,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8B;AACjDO,MAAAA,OAAO,EAAE;AADwC,KAA9B,CAAR,CAAb;AAGAL,IAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GALG,CAAJ;AAMAG,EAAAA,MAAM,CAACC,MAAP,CAAcC,kBAAd,EAA2BC,OAA3B,CAAmCC,IAAI,IAAI;AACzCf,IAAAA,IAAI,CAAE,QAAOe,IAAK,aAAd,EAA4B,MAAM;AACpC,YAAMT,KAAK,GAAG;AACZ,SAACS,IAAD,GAAQ;AADI,OAAd;AAGA,YAAMd,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8BG,KAA9B,CAAR,CAAb;AACAD,MAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,KANG,CAAJ;AAOAR,IAAAA,IAAI,CAAE,QAAOe,IAAK,iBAAd,EAAgC,MAAM;AACxC,YAAMT,KAAK,GAAG;AACZ,SAAE,GAAES,IAAK,QAAT,GAAmB;AADP,OAAd;AAGA,YAAMd,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8BG,KAA9B,CAAR,CAAb;AACAD,MAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,KANG,CAAJ;AAOAR,IAAAA,IAAI,CAAE,QAAOe,IAAK,cAAd,EAA6B,MAAM;AACrC,YAAMT,KAAK,GAAG;AACZ,SAAE,GAAES,IAAK,SAAT,GAAoB;AADR,OAAd;AAGA,YAAMd,IAAI,GAAG,qBAAQF,KAAK,CAACG,aAAN,CAAoBC,kBAApB,EAA8BG,KAA9B,CAAR,CAAb;AACAD,MAAAA,MAAM,CAACJ,IAAI,CAACK,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,KANG,CAAJ;AAOD,GAtBD","sourcesContent":["import * as React from 'react';\nimport { GridItem } from './GridItem';\nimport { shallow } from 'enzyme';\nimport { DeviceSizes } from '../../styles/sizes';\ntest('adds span class', () => {\n  const view = shallow(React.createElement(GridItem, {\n    span: 4\n  }));\n  expect(view.props().className).toMatchSnapshot();\n});\ntest('adds offset class', () => {\n  const view = shallow(React.createElement(GridItem, {\n    offset: 4\n  }));\n  expect(view.props().className).toMatchSnapshot();\n});\ntest('adds row class', () => {\n  const view = shallow(React.createElement(GridItem, {\n    rowSpan: 4\n  }));\n  expect(view.props().className).toMatchSnapshot();\n});\nObject.values(DeviceSizes).forEach(size => {\n  test(`adds ${size} span class`, () => {\n    const props = {\n      [size]: 4\n    };\n    const view = shallow(React.createElement(GridItem, props));\n    expect(view.props().className).toMatchSnapshot();\n  });\n  test(`adds ${size} offset classes`, () => {\n    const props = {\n      [`${size}Offset`]: 1\n    };\n    const view = shallow(React.createElement(GridItem, props));\n    expect(view.props().className).toMatchSnapshot();\n  });\n  test(`adds ${size} row classes`, () => {\n    const props = {\n      [`${size}RowSpan`]: 1\n    };\n    const view = shallow(React.createElement(GridItem, props));\n    expect(view.props().className).toMatchSnapshot();\n  });\n});\n//# sourceMappingURL=GridItem.test.js.map"],"file":"GridItem.test.js"}