{"version":3,"sources":["../../../../src/layouts/Grid/GridItem.test.tsx"],"names":["React","GridItem","shallow","DeviceSizes","test","view","expect","props","className","toMatchSnapshot","Object","values","forEach","size"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEAC,IAAI,CAAC,iBAAD,EAAoB,MAAM;AAC5B,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE;AAAhB,IAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAL,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC9B,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAE;AAAlB,IAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAL,IAAI,CAAC,gBAAD,EAAmB,MAAM;AAC3B,QAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAnB,IAAD,CAApB;AACAI,EAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,CAHG,CAAJ;AAKAC,MAAM,CAACC,MAAP,CAAcR,WAAd,EAA2BS,OAA3B,CAAoCC,IAAD,IAAU;AAC3CT,EAAAA,IAAI,CAAE,QAAOS,IAAK,aAAd,EAA4B,MAAM;AACpC,UAAMN,KAAK,GAAG;AAAE,OAACM,IAAD,GAAQ;AAAV,KAAd;AACA,UAAMR,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD,EAAcK,KAAd,CAAD,CAApB;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAMAL,EAAAA,IAAI,CAAE,QAAOS,IAAK,iBAAd,EAAgC,MAAM;AACxC,UAAMN,KAAK,GAAG;AAAE,OAAE,GAAEM,IAAK,QAAT,GAAmB;AAArB,KAAd;AACA,UAAMR,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD,EAAcK,KAAd,CAAD,CAApB;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAMAL,EAAAA,IAAI,CAAE,QAAOS,IAAK,cAAd,EAA6B,MAAM;AACrC,UAAMN,KAAK,GAAG;AAAE,OAAE,GAAEM,IAAK,SAAT,GAAoB;AAAtB,KAAd;AACA,UAAMR,IAAI,GAAGH,OAAO,CAAC,oBAAC,QAAD,EAAcK,KAAd,CAAD,CAApB;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaC,SAAd,CAAN,CAA+BC,eAA/B;AACD,GAJG,CAAJ;AAKD,CAlBD","sourcesContent":["import * as React from 'react';\nimport { GridItem } from './GridItem';\nimport { shallow } from 'enzyme';\nimport { DeviceSizes } from '../../styles/sizes';\n\ntest('adds span class', () => {\n  const view = shallow(<GridItem span={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\ntest('adds offset class', () => {\n  const view = shallow(<GridItem offset={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\ntest('adds row class', () => {\n  const view = shallow(<GridItem rowSpan={4} />);\n  expect(view.props().className).toMatchSnapshot();\n});\n\nObject.values(DeviceSizes).forEach((size) => {\n  test(`adds ${size} span class`, () => {\n    const props = { [size]: 4 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n\n  test(`adds ${size} offset classes`, () => {\n    const props = { [`${size}Offset`]: 1 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n\n  test(`adds ${size} row classes`, () => {\n    const props = { [`${size}RowSpan`]: 1 };\n    const view = shallow(<GridItem {...props} />);\n    expect(view.props().className).toMatchSnapshot();\n  });\n});\n"],"file":"GridItem.test.js"}