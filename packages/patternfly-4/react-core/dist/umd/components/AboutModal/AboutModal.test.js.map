{"version":3,"sources":["../../../esm/components/AboutModal/AboutModal.test.js"],"names":["React","ReactDOM","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","mockListener","jest","spyOn","document","mockImplementation","node","props","onClose","fn","children","productName","trademark","brandImageSrc","brandImageAlt","logoImageSrc","logoImageAlt","test","view","createElement","AboutModal","update","expect","toBeCalledWith","toHaveBeenCalledTimes","isOpen","event","handler","addEventListener","mock","calls","toBe","keyCode","KEY_CODES","ESCAPE_KEY","toBeCalled","not","first","second","ariaLabelledBy","ariaDescribedBy","noImgAltrops","myMock","global","console","error","JSAboutModal"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { shallow } from 'enzyme';\nimport { AboutModal } from './AboutModal';\nimport { KEY_CODES } from '../../helpers/constants';\nconst mockListener = jest.spyOn(ReactDOM, 'createPortal');\njest.spyOn(document, 'createElement');\njest.spyOn(document, 'addEventListener');\nmockListener.mockImplementation(node => node);\nconst props = {\n  onClose: jest.fn(),\n  children: 'modal content',\n  productName: 'Product Name',\n  trademark: 'Trademark and copyright information here',\n  brandImageSrc: 'brandImg...',\n  brandImageAlt: 'Brand Image',\n  logoImageSrc: 'logoImg...',\n  logoImageAlt: 'AboutModal Logo'\n};\ntest('AboutModal creates a container element once for div', () => {\n  const view = shallow(React.createElement(AboutModal, props, \" Test About Modal \"));\n  view.update();\n  expect(document.createElement).toBeCalledWith('div');\n  expect(document.createElement).toHaveBeenCalledTimes(1);\n});\ntest('About Modal closes with escape', () => {\n  shallow(React.createElement(AboutModal, _extends({}, props, {\n    isOpen: true\n  }), \"Test About Modal\"));\n  const [event, handler] = document.addEventListener.mock.calls[0];\n  expect(event).toBe('keydown');\n  handler({\n    keyCode: KEY_CODES.ESCAPE_KEY\n  });\n  expect(props.onClose).toBeCalled();\n});\ntest('modal does not call onClose for esc key if it is not open', () => {\n  shallow(React.createElement(AboutModal, props));\n  const [event, handler] = document.addEventListener.mock.calls[0];\n  expect(event).toBe('keydown');\n  handler({\n    keyCode: KEY_CODES.ESCAPE_KEY\n  });\n  expect(props.onClose).not.toBeCalled();\n});\ntest('Each modal is given new ariaDescribedById and ariaLabelledbyId', () => {\n  const first = new AboutModal(props);\n  const second = new AboutModal(props);\n  expect(first.ariaLabelledBy).not.toBe(second.ariaLabelledBy);\n  expect(first.ariaDescribedBy).not.toBe(second.ariaDescribedBy);\n});\ntest('Console error is generated when the logoImageSrc is provided without logoImageAlt', () => {\n  const noImgAltrops = {\n    onClose: jest.fn(),\n    children: 'modal content',\n    productName: 'Product Name',\n    trademark: 'Trademark and copyright information here',\n    brandImageSrc: 'brandImg...',\n    logoImageSrc: 'logoImg...'\n  };\n  const myMock = jest.fn();\n  global.console = {\n    error: myMock\n  };\n  const JSAboutModal = AboutModal;\n  shallow(React.createElement(JSAboutModal, noImgAltrops, \" Test About Modal \"));\n  expect(myMock).toBeCalled();\n});\n//# sourceMappingURL=AboutModal.test.js.map"],"file":"AboutModal.test.js"}