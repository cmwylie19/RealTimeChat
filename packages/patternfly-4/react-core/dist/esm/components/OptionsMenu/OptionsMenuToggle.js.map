{"version":3,"sources":["../../../../src/components/OptionsMenu/OptionsMenuToggle.tsx"],"names":["React","DropdownToggle","DropdownContext","OptionsMenuToggle","isPlain","isHovered","isActive","isFocused","isDisabled","isOpen","parentId","toggleTemplate","hideCaret","isSplitButton","type","ariaLabel","props","id","contextId","iconComponent","children","onToggle","onEnter","parentRef"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,aAAhD;AAgCA,OAAO,MAAMC,iBAAkE,GAAG,UAcpD;AAAA,MAdqD;AAC/EC,IAAAA,OAAO,GAAG,KADqE;AAE/EC,IAAAA,SAAS,GAAG,KAFmE;AAG/EC,IAAAA,QAAQ,GAAG,KAHoE;AAI/EC,IAAAA,SAAS,GAAG,KAJmE;AAK/EC,IAAAA,UAAU,GAAG,KALkE;AAM/EC,IAAAA,MAAM,GAAG,KANsE;AAO/EC,IAAAA,QAAQ,GAAG,EAPoE;AAQ/EC,IAAAA,cAAc,GAAG,oBAAC,KAAD,CAAO,QAAP,OAR8D;AAS/EC,IAAAA,SAAS,GAAG,KATmE;AAU/EC,IAAAA,aAAa,GAAG,KAV+D;AAW/EC,IAAAA,IAX+E;AAY/E,kBAAcC,SAAS,GAAG;AAZqD,GAcrD;AAAA,MADvBC,KACuB;;AAC5B,SACE,oBAAC,eAAD,CAAiB,QAAjB,QACG,CAAC;AAAEC,IAAAA,EAAE,EAAEC;AAAN,GAAD,KACC,oBAAC,cAAD,eACM,CAACd,OAAO,IAAIQ,SAAZ,KAA0B;AAAEO,IAAAA,aAAa,EAAE;AAAjB,GADhC,EAEMH,KAFN;AAGE,IAAA,OAAO,EAAEZ,OAHX;AAIE,IAAA,MAAM,EAAEK,MAJV;AAKE,IAAA,UAAU,EAAED,UALd;AAME,IAAA,SAAS,EAAEH,SANb;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,SAAS,EAAEC,SARb;AASE,IAAA,EAAE,EAAEG,QAAQ,GAAI,GAAEA,QAAS,SAAf,GAA2B,GAAEQ,SAAU,SATrD;AAUE,IAAA,YAAY,EAAC,SAVf;AAWE,kBAAYH,SAXd;AAYE,qBAAeN;AAZjB,KAaME,cAAc,GAAG;AAAES,IAAAA,QAAQ,EAAET;AAAZ,GAAH,GAAiC,EAbrD,EAFJ,CADF;AAqBD,CApCM;;AA5BLD,EAAAA,Q;AAEAW,EAAAA,Q;AAEAZ,EAAAA,M;AAEAL,EAAAA,O;AAEAG,EAAAA,S;AAEAF,EAAAA,S;AACAQ,EAAAA,a;AAEAP,EAAAA,Q;AAECE,EAAAA,U;AAEDI,EAAAA,S;AAEA,c;AAEAU,EAAAA,O;AAEAC,EAAAA,S;AAEAZ,EAAAA,c","sourcesContent":["import * as React from 'react';\nimport { DropdownToggle, DropdownContext } from '../Dropdown';\n\nexport interface OptionsMenuToggleProps  extends React.HTMLProps<HTMLButtonElement> {\n  /** Id of the parent Options menu component */\n  parentId?: string;\n  /** Callback for when this Options menu is toggled */\n  onToggle?: (isOpen: boolean) => void;\n  /** Flag to indicate if menu is open */\n  isOpen?: boolean;\n  /** Flag to indicate if the button is plain */\n  isPlain?: boolean;\n  /** Forces display of the hover state of the Options menu */\n  isFocused?: boolean;\n  /** Forces display of the hover state of the Options menu */\n  isHovered?: boolean;\n  isSplitButton?: boolean;\n  /** Forces display of the active state of the Options menu */\n  isActive?: boolean;\n  /** Disables the options menu toggle */\n   isDisabled?: boolean;\n  /** hide the toggle caret */\n  hideCaret?: boolean;\n  /** Provides an accessible name for the button when an icon is used instead of text */\n  'aria-label'?: string;\n  /** Internal function to implement enter click */\n  onEnter?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Internal parent reference */\n  parentRef?: HTMLElement;\n  /** Content to be rendered in the Options menu toggle button */\n  toggleTemplate?: React.ReactNode;\n}\n\nexport const OptionsMenuToggle: React.FunctionComponent<OptionsMenuToggleProps> = ({\n    isPlain = false,\n    isHovered = false,\n    isActive = false,\n    isFocused = false,\n    isDisabled = false,\n    isOpen = false,\n    parentId = '',\n    toggleTemplate = <React.Fragment/>,\n    hideCaret = false,\n    isSplitButton = false,\n    type,\n    'aria-label': ariaLabel = 'Options menu',\n    ...props\n}: OptionsMenuToggleProps) => {\n  return (\n    <DropdownContext.Consumer>\n      {({ id: contextId }) => (\n        <DropdownToggle\n          {...(isPlain || hideCaret) && { iconComponent: null }}\n          {...props}\n          isPlain={isPlain}\n          isOpen={isOpen}\n          isDisabled={isDisabled}\n          isHovered={isHovered}\n          isActive={isActive}\n          isFocused={isFocused}\n          id={parentId ? `${parentId}-toggle` : `${contextId}-toggle`}\n          ariaHasPopup=\"listbox\"\n          aria-label={ariaLabel}\n          aria-expanded={isOpen}\n          {...toggleTemplate ? { children: toggleTemplate} : {}}\n        />\n      )}\n    </DropdownContext.Consumer>\n  );\n};\n"],"file":"OptionsMenuToggle.js"}