{"version":3,"sources":["../../../../src/components/ChartUtils/chart-theme.ts"],"names":["merge","DarkBlueColorTheme","DarkCyanColorTheme","DarkGoldColorTheme","DarkGrayColorTheme","DarkGreenColorTheme","DarkMultiColorOrderedTheme","DarkMultiColorUnorderedTheme","DarkOrangeColorTheme","DarkPurpleColorTheme","LightBlueColorTheme","LightCyanColorTheme","LightGoldColorTheme","LightGrayColorTheme","LightGreenColorTheme","LightMultiColorOrderedTheme","LightMultiColorUnorderedTheme","LightOrangeColorTheme","LightPurpleColorTheme","ChartAxisTheme","ChartBaseTheme","ChartBulletComparativeErrorMeasureTheme","ChartBulletComparativeMeasureTheme","ChartBulletComparativeWarningMeasureTheme","ChartBulletGroupTitleTheme","ChartBulletPrimaryDotMeasureTheme","ChartBulletPrimaryNegativeMeasureTheme","ChartBulletPrimarySegmentedMeasureTheme","ChartBulletTheme","ChartBulletQualitativeRangeTheme","ChartDonutTheme","ChartDonutUtilizationDynamicTheme","ChartDonutUtilizationStaticTheme","ChartDonutThresholdDynamicTheme","ChartDonutThresholdStaticTheme","ChartThemeColor","ChartThemeVariant","ChartThresholdTheme","cloneDeep","getCustomTheme","themeColor","themeVariant","customTheme","getTheme","getAxisTheme","theme","getBulletTheme","getBulletComparativeErrorMeasureTheme","getBulletComparativeMeasureTheme","getBulletComparativeWarningMeasureTheme","getBulletGroupTitleTheme","getBulletPrimaryDotMeasureTheme","getBulletPrimaryNegativeMeasureTheme","getBulletPrimarySegmentedMeasureTheme","getBulletQualitativeRangeTheme","getDonutTheme","getDonutThresholdDynamicTheme","legend","colorScale","pie","getDonutThresholdStaticTheme","invert","staticTheme","reverse","getDonutUtilizationTheme","getDarkThemeColors","blue","cyan","gold","gray","green","multi","multiOrdered","multiUnordered","orange","purple","getLightThemeColors","baseTheme","JSON","parse","stringify","dark","light","getThresholdTheme"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,0BAAT,QAA2C,qDAA3C;AACA,SAASC,4BAAT,QAA6C,uDAA7C;AACA,SAASC,oBAAT,QAAqC,8CAArC;AACA,SAASC,oBAAT,QAAqC,8CAArC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,oBAAT,QAAqC,8CAArC;AACA,SAASC,2BAAT,QAA4C,sDAA5C;AACA,SAASC,6BAAT,QAA8C,wDAA9C;AACA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SAASC,qBAAT,QAAsC,+CAAtC;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,uCAHF,EAIEC,kCAJF,EAKEC,yCALF,EAMEC,0BANF,EAOEC,iCAPF,EAQEC,sCARF,EASEC,uCATF,EAUEC,gBAVF,EAWEC,gCAXF,EAYEC,eAZF,EAaEC,iCAbF,EAcEC,gCAdF,EAeEC,+BAfF,EAgBEC,8BAhBF,EAkBEC,eAlBF,EAmBEC,iBAnBF,EAoBEC,mBApBF,QAqBO,0BArBP;AAsBA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,UAAD,EAAqBC,YAArB,EAA2CC,WAA3C,KAE5B1C,KAAK,CAAC2C,QAAQ,CAACH,UAAD,EAAaC,YAAb,CAAT,EAAqCC,WAArC,CAFA,C,CAIP;;AACA,OAAO,MAAME,YAAY,GAAG,CAACJ,UAAD,EAAqBC,YAArB,KAAoE;AAC9F,QAAMI,KAAK,GAAGN,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BtB,cAA3B,CAA5B;AACA,SAAO0B,KAAP;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACN,UAAD,EAAqBC,YAArB,KAC5BF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2Bb,gBAA3B,CADT,C,CAGP;;AACA,OAAO,MAAMmB,qCAAqC,GAAG,CAACP,UAAD,EAAqBC,YAArB,KACnDF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BpB,uCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,gCAAgC,GAAG,CAACR,UAAD,EAAqBC,YAArB,KAC9CF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BnB,kCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,uCAAuC,GAAG,CAACT,UAAD,EAAqBC,YAArB,KACrDF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BlB,yCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,wBAAwB,GAAG,CAACV,UAAD,EAAqBC,YAArB,KACtCF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BjB,0BAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,+BAA+B,GAAG,CAACX,UAAD,EAAqBC,YAArB,KAC7CF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BhB,iCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,oCAAoC,GAAG,CAACZ,UAAD,EAAqBC,YAArB,KAClDF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2Bf,sCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,qCAAqC,GAAG,CAACb,UAAD,EAAqBC,YAArB,KACnDF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2Bd,uCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM2B,8BAA8B,GAAG,CAACd,UAAD,EAAqBC,YAArB,KAC5CF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BZ,gCAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM0B,aAAa,GAAG,CAACf,UAAD,EAAqBC,YAArB,KAC3BF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BX,eAA3B,CADT,C,CAGP;;AACA,OAAO,MAAM0B,6BAA6B,GAAG,CAAChB,UAAD,EAAqBC,YAArB,KAAoE;AAC/G,QAAMI,KAAK,GAAGN,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BR,+BAA3B,CAA5B,CAD+G,CAG/G;;AACAY,EAAAA,KAAK,CAACY,MAAN,CAAaC,UAAb,GAA0B,CAACb,KAAK,CAACc,GAAN,CAAUD,UAAV,CAAqB,CAArB,CAAD,EAA0B,GAAGzB,+BAA+B,CAACwB,MAAhC,CAAuCC,UAApE,CAA1B,CAJ+G,CAM/G;;AACAb,EAAAA,KAAK,CAACc,GAAN,CAAUD,UAAV,GAAuB,CAACb,KAAK,CAACc,GAAN,CAAUD,UAAV,CAAqB,CAArB,CAAD,EAA0B,GAAGxB,8BAA8B,CAACyB,GAA/B,CAAmCD,UAAhE,CAAvB;AACA,SAAOb,KAAP;AACD,CATM,C,CAWP;;AACA,OAAO,MAAMe,4BAA4B,GAAG,CAACpB,UAAD,EAAqBC,YAArB,EAA2CoB,MAA3C,KACjB;AACzB,QAAMC,WAAW,GAAGxB,SAAS,CAACJ,8BAAD,CAA7B;;AACA,MAAI2B,MAAJ,EAAY;AACVC,IAAAA,WAAW,CAACH,GAAZ,CAAgBD,UAAhB,GAA6BI,WAAW,CAACH,GAAZ,CAAgBD,UAAhB,CAA2BK,OAA3B,EAA7B;AACD;;AACD,SAAOxB,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BqB,WAA3B,CAArB;AACD,CAPM,C,CASP;;AACA,OAAO,MAAME,wBAAwB,GAAG,CAACxB,UAAD,EAAqBC,YAArB,KAAoE;AAC1G,QAAMI,KAAK,GAAGN,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BV,iCAA3B,CAA5B,CAD0G,CAG1G;;AACAc,EAAAA,KAAK,CAACc,GAAN,CAAUD,UAAV,GAAuB,CAACb,KAAK,CAACc,GAAN,CAAUD,UAAV,CAAqB,CAArB,CAAD,EAA0B,GAAG1B,gCAAgC,CAAC2B,GAAjC,CAAqCD,UAAlE,CAAvB;AACAb,EAAAA,KAAK,CAACY,MAAN,CAAaC,UAAb,GAA0B,CAACb,KAAK,CAACY,MAAN,CAAaC,UAAb,CAAwB,CAAxB,CAAD,EACxB,GAAG1B,gCAAgC,CAACyB,MAAjC,CAAwCC,UADnB,CAA1B;AAEA,SAAOb,KAAP;AACD,CARM,C,CAUP;;AACA,OAAO,MAAMoB,kBAAkB,GAAIzB,UAAD,IAAwB;AACxD,UAAQA,UAAR;AACE,SAAKL,eAAe,CAAC+B,IAArB;AACE,aAAOjE,kBAAP;;AACF,SAAKkC,eAAe,CAACgC,IAArB;AACE,aAAOjE,kBAAP;;AACF,SAAKiC,eAAe,CAACiC,IAArB;AACE,aAAOjE,kBAAP;;AACF,SAAKgC,eAAe,CAACkC,IAArB;AACE,aAAOjE,kBAAP;;AACF,SAAK+B,eAAe,CAACmC,KAArB;AACE,aAAOjE,mBAAP;;AACF,SAAK8B,eAAe,CAACoC,KAArB;AACA,SAAKpC,eAAe,CAACqC,YAArB;AACE,aAAOlE,0BAAP;;AACF,SAAK6B,eAAe,CAACsC,cAArB;AACE,aAAOlE,4BAAP;;AACF,SAAK4B,eAAe,CAACuC,MAArB;AACE,aAAOlE,oBAAP;;AACF,SAAK2B,eAAe,CAACwC,MAArB;AACE,aAAOlE,oBAAP;;AACF;AACE,aAAOR,kBAAP;AArBJ;AAuBD,CAxBM,C,CA0BP;;AACA,OAAO,MAAM2E,mBAAmB,GAAIpC,UAAD,IAAwB;AACzD,UAAQA,UAAR;AACE,SAAKL,eAAe,CAAC+B,IAArB;AACE,aAAOxD,mBAAP;;AACF,SAAKyB,eAAe,CAACgC,IAArB;AACE,aAAOxD,mBAAP;;AACF,SAAKwB,eAAe,CAACiC,IAArB;AACE,aAAOxD,mBAAP;;AACF,SAAKuB,eAAe,CAACkC,IAArB;AACE,aAAOxD,mBAAP;;AACF,SAAKsB,eAAe,CAACmC,KAArB;AACE,aAAOxD,oBAAP;;AACF,SAAKqB,eAAe,CAACoC,KAArB;AACA,SAAKpC,eAAe,CAACqC,YAArB;AACE,aAAOzD,2BAAP;;AACF,SAAKoB,eAAe,CAACsC,cAArB;AACE,aAAOzD,6BAAP;;AACF,SAAKmB,eAAe,CAACuC,MAArB;AACE,aAAOzD,qBAAP;;AACF,SAAKkB,eAAe,CAACwC,MAArB;AACE,aAAOzD,qBAAP;;AACF;AACE,aAAOR,mBAAP;AArBJ;AAuBD,CAxBM,C,CA0BP;;AACA,OAAO,MAAMiC,QAAQ,GAAG,CAACH,UAAD,EAAqBC,YAArB,KAAoE;AAC1F;AACA,QAAMoC,SAAS,qBACVC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe5D,cAAf,CAAX,CADU,CAAf;;AAGA,UAAQqB,YAAR;AACE,SAAKL,iBAAiB,CAAC6C,IAAvB;AACE,aAAOjF,KAAK,CAAC6E,SAAD,EAAYZ,kBAAkB,CAACzB,UAAD,CAA9B,CAAZ;;AACF,SAAKJ,iBAAiB,CAAC8C,KAAvB;AACE,aAAOlF,KAAK,CAAC6E,SAAD,EAAYD,mBAAmB,CAACpC,UAAD,CAA/B,CAAZ;;AACF;AACE,aAAOxC,KAAK,CAAC6E,SAAD,EAAYD,mBAAmB,CAACpC,UAAD,CAA/B,CAAZ;AANJ;AAQD,CAbM,C,CAeP;;AACA,OAAO,MAAM2C,iBAAiB,GAAG,CAAC3C,UAAD,EAAqBC,YAArB,KAC/BF,cAAc,CAACC,UAAD,EAAaC,YAAb,EAA2BJ,mBAA3B,CADT","sourcesContent":["import { merge } from 'lodash';\nimport { DarkBlueColorTheme } from '../ChartTheme/themes/dark/blue-color-theme';\nimport { DarkCyanColorTheme } from '../ChartTheme/themes/dark/cyan-color-theme';\nimport { DarkGoldColorTheme } from '../ChartTheme/themes/dark/gold-color-theme';\nimport { DarkGrayColorTheme } from '../ChartTheme/themes/dark/gray-color-theme';\nimport { DarkGreenColorTheme } from '../ChartTheme/themes/dark/green-color-theme';\nimport { DarkMultiColorOrderedTheme } from '../ChartTheme/themes/dark/multi-color-ordered-theme';\nimport { DarkMultiColorUnorderedTheme } from '../ChartTheme/themes/dark/multi-color-unordered-theme';\nimport { DarkOrangeColorTheme } from '../ChartTheme/themes/dark/orange-color-theme';\nimport { DarkPurpleColorTheme } from '../ChartTheme/themes/dark/purple-color-theme';\nimport { LightBlueColorTheme } from '../ChartTheme/themes/light/blue-color-theme';\nimport { LightCyanColorTheme } from '../ChartTheme/themes/light/cyan-color-theme';\nimport { LightGoldColorTheme } from '../ChartTheme/themes/light/gold-color-theme';\nimport { LightGrayColorTheme } from '../ChartTheme/themes/light/gray-color-theme';\nimport { LightGreenColorTheme } from '../ChartTheme/themes/light/green-color-theme';\nimport { LightMultiColorOrderedTheme } from '../ChartTheme/themes/light/multi-color-ordered-theme';\nimport { LightMultiColorUnorderedTheme } from '../ChartTheme/themes/light/multi-color-unordered-theme';\nimport { LightOrangeColorTheme } from '../ChartTheme/themes/light/orange-color-theme';\nimport { LightPurpleColorTheme } from '../ChartTheme/themes/light/purple-color-theme';\nimport {\n  ChartAxisTheme,\n  ChartBaseTheme,\n  ChartBulletComparativeErrorMeasureTheme,\n  ChartBulletComparativeMeasureTheme,\n  ChartBulletComparativeWarningMeasureTheme,\n  ChartBulletGroupTitleTheme,\n  ChartBulletPrimaryDotMeasureTheme,\n  ChartBulletPrimaryNegativeMeasureTheme,\n  ChartBulletPrimarySegmentedMeasureTheme,\n  ChartBulletTheme,\n  ChartBulletQualitativeRangeTheme,\n  ChartDonutTheme,\n  ChartDonutUtilizationDynamicTheme,\n  ChartDonutUtilizationStaticTheme,\n  ChartDonutThresholdDynamicTheme,\n  ChartDonutThresholdStaticTheme,\n  ChartThemeDefinition,\n  ChartThemeColor,\n  ChartThemeVariant,\n  ChartThresholdTheme\n} from '../ChartTheme/ChartTheme';\nimport { cloneDeep } from 'lodash';\n\n// Apply custom properties to base and color themes\nexport const getCustomTheme = (themeColor: string, themeVariant: string, customTheme: ChartThemeDefinition\n): ChartThemeDefinition =>\n  merge(getTheme(themeColor, themeVariant), customTheme);\n\n// Returns axis theme\nexport const getAxisTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartAxisTheme);\n  return theme;\n};\n\n// Returns bullet chart theme\nexport const getBulletTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletTheme);\n\n// Returns comparative error measure theme for bullet chart\nexport const getBulletComparativeErrorMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeErrorMeasureTheme);\n\n// Returns comparative measure theme for bullet chart\nexport const getBulletComparativeMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeMeasureTheme);\n\n// Returns comparative warning measure theme for bullet chart\nexport const getBulletComparativeWarningMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletComparativeWarningMeasureTheme);\n\n// Returns group title theme for bullet chart\nexport const getBulletGroupTitleTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletGroupTitleTheme);\n\n// Returns primary dot measure theme for bullet chart\nexport const getBulletPrimaryDotMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryDotMeasureTheme);\n\n// Returns primary negative measure theme for bullet chart\nexport const getBulletPrimaryNegativeMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryNegativeMeasureTheme);\n\n// Returns primary segmented measure theme for bullet chart\nexport const getBulletPrimarySegmentedMeasureTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletPrimarySegmentedMeasureTheme);\n\n// Returns qualitative range theme for bullet chart\nexport const getBulletQualitativeRangeTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartBulletQualitativeRangeTheme);\n\n// Returns donut theme\nexport const getDonutTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartDonutTheme);\n\n// Returns dynamic donut threshold theme\nexport const getDonutThresholdDynamicTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutThresholdDynamicTheme);\n\n  // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n  theme.legend.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdDynamicTheme.legend.colorScale];\n\n  // Merge the threshold colors in case users want to show the unused data\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdStaticTheme.pie.colorScale];\n  return theme;\n};\n\n// Returns static donut threshold theme\nexport const getDonutThresholdStaticTheme = (themeColor: string, themeVariant: string, invert?: boolean\n): ChartThemeDefinition => {\n  const staticTheme = cloneDeep(ChartDonutThresholdStaticTheme);\n  if (invert) {\n    staticTheme.pie.colorScale = staticTheme.pie.colorScale.reverse();\n  }\n  return getCustomTheme(themeColor, themeVariant, staticTheme);\n};\n\n// Returns donut utilization theme\nexport const getDonutUtilizationTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutUtilizationDynamicTheme);\n\n  // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutUtilizationStaticTheme.pie.colorScale];\n  theme.legend.colorScale = [theme.legend.colorScale[0],\n    ...ChartDonutUtilizationStaticTheme.legend.colorScale];\n  return theme;\n};\n\n// Returns dark theme colors\nexport const getDarkThemeColors = (themeColor: string) => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return DarkBlueColorTheme;\n    case ChartThemeColor.cyan:\n      return DarkCyanColorTheme;\n    case ChartThemeColor.gold:\n      return DarkGoldColorTheme;\n    case ChartThemeColor.gray:\n      return DarkGrayColorTheme;\n    case ChartThemeColor.green:\n      return DarkGreenColorTheme;\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return DarkMultiColorOrderedTheme;\n    case ChartThemeColor.multiUnordered:\n      return DarkMultiColorUnorderedTheme;\n    case ChartThemeColor.orange:\n      return DarkOrangeColorTheme;\n    case ChartThemeColor.purple:\n      return DarkPurpleColorTheme;\n    default:\n      return DarkBlueColorTheme;\n  }\n};\n\n// Returns light theme colors\nexport const getLightThemeColors = (themeColor: string) => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return LightBlueColorTheme;\n    case ChartThemeColor.cyan:\n      return LightCyanColorTheme;\n    case ChartThemeColor.gold:\n      return LightGoldColorTheme;\n    case ChartThemeColor.gray:\n      return LightGrayColorTheme;\n    case ChartThemeColor.green:\n      return LightGreenColorTheme;\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return LightMultiColorOrderedTheme;\n    case ChartThemeColor.multiUnordered:\n      return LightMultiColorUnorderedTheme;\n    case ChartThemeColor.orange:\n      return LightOrangeColorTheme;\n    case ChartThemeColor.purple:\n      return LightPurpleColorTheme;\n    default:\n      return LightBlueColorTheme;\n  }\n};\n\n// Applies theme color and variant to base theme\nexport const getTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition => {\n  // Deep clone\n  const baseTheme = {\n    ...JSON.parse(JSON.stringify(ChartBaseTheme))\n  };\n  switch (themeVariant) {\n    case ChartThemeVariant.dark:\n      return merge(baseTheme, getDarkThemeColors(themeColor));\n    case ChartThemeVariant.light:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n    default:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n  }\n};\n\n// Returns threshold theme\nexport const getThresholdTheme = (themeColor: string, themeVariant: string): ChartThemeDefinition =>\n  getCustomTheme(themeColor, themeVariant, ChartThresholdTheme);\n"],"file":"chart-theme.js"}