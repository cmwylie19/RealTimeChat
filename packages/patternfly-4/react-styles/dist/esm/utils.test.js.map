{"version":3,"sources":["../../src/utils.test.js"],"names":["utils","describe","test","result","isValidStyleDeclaration","expect","toBe","__className","__inject","jest","fn","createStyleDeclaration","toMatchSnapshot","isModifier","styles","modifiers","fooBar","modifer","getModifier","defaultModifier","formatClassName","css","getCSSClasses","style","getClassName"],"mappings":"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","sourcesContent":["import * as utils from './utils';\n\ndescribe('isValidStyleDeclaration', () => {\n  test('returns false for a falsy value', () => {\n    const result = utils.isValidStyleDeclaration(null);\n    expect(result).toBe(false);\n  });\n\n  test('returns false for object without a string __className', () => {\n    const result = utils.isValidStyleDeclaration({ __className: {} });\n    expect(result).toBe(false);\n  });\n\n  test('returns false for object without a function __inject', () => {\n    const result = utils.isValidStyleDeclaration({ __inject: {} });\n    expect(result).toBe(false);\n  });\n  test('returns true for object with a string __className and function __inject', () => {\n    const result = utils.isValidStyleDeclaration({ __inject: jest.fn(), __className: 'class' });\n    expect(result).toBe(true);\n  });\n});\n\ntest('createStyleDeclaration', () => {\n  expect(utils.createStyleDeclaration('  .foo-bar  ', 'css')).toMatchSnapshot();\n});\n\ndescribe('isModifier', () => {\n  test('returns true for class starting with .pf-m-', () => {\n    const result = utils.isModifier('.pf-m-test');\n    expect(result).toBe(true);\n  });\n\n  test('returns false for class not starting with .pf-m-', () => {\n    const result = utils.isModifier('.pf-l-test');\n    expect(result).toBe(false);\n  });\n\n  test('returns false for non string values', () => {\n    const result = utils.isModifier({});\n    expect(result).toBe(false);\n  });\n});\n\ndescribe('getModifier', () => {\n  const styles = {\n    modifiers: {\n      fooBar: {}\n    }\n  };\n\n  test('gets modifer from style object', () => {\n    const modifer = utils.getModifier(styles, 'fooBar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('gets modifer from modifers object', () => {\n    const modifer = utils.getModifier(styles.modifiers, 'fooBar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('gets modifer using dash case lookup', () => {\n    const modifer = utils.getModifier(styles, 'foo-bar');\n    expect(modifer).toBe(styles.modifiers.fooBar);\n  });\n\n  test('returns default modifier if specified modifier is not found', () => {\n    const defaultModifier = {};\n    const modifer = utils.getModifier(styles, 'other', defaultModifier);\n    expect(modifer).toBe(defaultModifier);\n  });\n\n  test('returns null for falsy styleObjects', () => {\n    const modifer = utils.getModifier(null, 'fooBar');\n    expect(modifer).toBe(null);\n  });\n});\n\ndescribe('formatClassName', () => {\n  test('formats component class names', () => {\n    expect(utils.formatClassName('pf-c-foo-bar__baz')).toMatchSnapshot();\n  });\n\n  test('formats layout class names', () => {\n    expect(utils.formatClassName('pf-l-foo-bar__baz')).toMatchSnapshot();\n  });\n\n  test('formats utility class names', () => {\n    expect(utils.formatClassName('pf-u-foo-bar__baz')).toMatchSnapshot();\n  });\n});\n\ntest('getCSSClasses returns classes from css', () => {\n  const css = `\n    .foo,\n    .bar {}\n\n    p.baz {}\n\n    @media(min-width: 0px) {\n      .baz {}\n    }\n  `;\n  expect(utils.getCSSClasses(css)).toMatchSnapshot();\n});\n\ndescribe('getClassName', () => {\n  test('returns self if string', () => {\n    const style = 'foo';\n    expect(utils.getClassName(style)).toBe(style);\n  });\n\n  test('returns empty string if it is not a styleObject', () => {\n    expect(utils.getClassName({})).toBe('');\n  });\n\n  test('returns className from styleObj', () => {\n    const style = utils.createStyleDeclaration('.foo-bar', '');\n    expect(utils.getClassName(style)).toMatchSnapshot();\n  });\n});\n"],"file":"utils.test.js"}