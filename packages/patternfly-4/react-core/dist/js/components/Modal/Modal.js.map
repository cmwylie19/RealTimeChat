{"version":3,"sources":["../../../../src/components/Modal/Modal.tsx"],"names":["Modal","props","event","keyCode","KEY_CODES","ESCAPE_KEY","isOpen","onClose","appendTo","target","hide","getElement","bodyChildren","children","Array","from","child","state","container","setAttribute","removeAttribute","newId","currentId","id","undefined","document","createElement","setState","appendChild","addEventListener","handleEscKeyClick","classList","add","styles","backdropOpen","remove","toggleSiblingsFromScreenReaders","removeChild","removeEventListener","canUseDOM","ReactDOM","createPortal","title","ariaDescribedById","React","Component","className","header","hideTitle","showClose","footer","actions","isFooterLeftAligned","width","isLarge","isSmall","disableFocusTrap","body"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from 'exenv';\n\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\n\nimport { KEY_CODES } from '../../helpers/constants';\nimport { ModalContent } from './ModalContent';\n\nexport interface ModalProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the Modal. */\n  children: React.ReactNode;\n  /** Additional classes added to the Modal */\n  className?: string;\n  /** Flag to show the modal */\n  isOpen?: boolean;\n  /** Complex header (more than just text), supersedes title for header content */\n  header?: React.ReactNode;\n  /** Simple text content of the Modal Header, also used for aria-label on the body */\n  title: string;\n  /** Flag to hide the title */\n  hideTitle?: boolean;\n  /** Flag to show the close button in the header area of the modal */\n  showClose?: boolean;\n  /** Id to use for Modal Box description */\n  ariaDescribedById?: string;\n  /** Custom footer */\n  footer?: React.ReactNode;\n  /** Action buttons to add to the standard Modal Footer, ignored if `footer` is given */\n  actions?: any;\n  /** Flag to indicate that the Footer content is left aligned */\n  isFooterLeftAligned?: boolean;\n  /** A callback for when the close button is clicked */\n  onClose?: () => void;\n  /** Default width of the Modal. */\n  width?: number | string;\n  /** Creates a large version of the Modal */\n  isLarge?: boolean;\n  /** Creates a small version of the Modal */\n  isSmall?: boolean;\n  /** The parent container to append the modal to. Defaults to document.body */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n}\n\ninterface ModalState {\n  container: HTMLElement;\n}\n\nexport class Modal extends React.Component<ModalProps, ModalState> {\n  static currentId = 0;\n  id = '';\n\n  static defaultProps = {\n    className: '',\n    isOpen: false,\n    hideTitle: false,\n    showClose: true,\n    ariaDescribedById: '',\n    actions: [] as any[],\n    isFooterLeftAligned: false,\n    onClose: () => undefined as any,\n    isLarge: false,\n    isSmall: false,\n    appendTo: typeof document !== 'undefined' && document.body || null\n  };\n\n  constructor(props: ModalProps) {\n    super(props);\n    const newId = Modal.currentId++;\n    this.id = `pf-modal-${newId}`;\n\n    this.state = {\n      container: undefined\n    };\n  }\n\n  handleEscKeyClick = (event: KeyboardEvent): void => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n      this.props.onClose();\n    }\n  }\n\n  getElement = (appendTo: HTMLElement | (() => HTMLElement)) => {\n    let target: HTMLElement;\n    if (typeof appendTo === 'function') {\n      target = appendTo();\n    } else {\n      target = appendTo;\n    }\n    return target;\n  }\n\n  toggleSiblingsFromScreenReaders = (hide: boolean) => {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const bodyChildren = target.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.state.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const container = document.createElement('div');\n    this.setState({ container });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n\n  componentDidUpdate() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    const { appendTo, ...props } = this.props;\n    const { container } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <ModalContent {...props} title={this.props.title} id={this.id} ariaDescribedById={this.props.ariaDescribedById}/>,\n      container\n    );\n  }\n}\n"],"file":"Modal.js"}