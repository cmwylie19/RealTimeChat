{"version":3,"sources":["../../../../src/components/ChipGroup/ChipGroupToolbarItem.tsx"],"names":["ChipGroupToolbarItem","categoryName","children","className","props","React","Children","count","HeadingLevel","styles","chipGroup","modifiers","toolbar","chipGroupLabel"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAWO,IAAMA,oBAAwE,GAAG,SAA3EA,oBAA2E,OAKvD;AAAA,+BAJ/BC,YAI+B;AAAA,MAJ/BA,YAI+B,kCAJhB,EAIgB;AAAA,2BAH/BC,QAG+B;AAAA,MAH/BA,QAG+B,8BAHpB,IAGoB;AAAA,4BAF/BC,SAE+B;AAAA,MAF/BA,SAE+B,+BAFnB,EAEmB;AAAA,MAD5BC,KAC4B;;AAC7B,MAAIC,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBL,QAArB,CAAJ,EAAoC;AAClC,WACE,oBAAC,2BAAD,CAAkB,QAAlB,QACG,UAACM,YAAD,EAAuB;AACtB,aACE;AAAI,QAAA,SAAS,EAAE,sBAAIC,sBAAOC,SAAX,EAAsBD,sBAAOE,SAAP,CAAiBC,OAAvC,EAAgDT,SAAhD;AAAf,SAA+EC,KAA/E,GACE,gCACE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE,sBAAIK,sBAAOI,cAAX;AAAzB,SAAsDZ,YAAtD,CADF,EAEE;AAAI,QAAA,SAAS,EAAE,sBAAIQ,sBAAOC,SAAX;AAAf,SAAuCR,QAAvC,CAFF,CADF,CADF;AAQD,KAVH,CADF;AAcD;;AACD,SAAO,IAAP;AACD,CAvBI;;;;AAPLD,EAAAA,Y;AAEAC,EAAAA,Q;AAEAC,EAAAA,S","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ChipGroup/chip-group';\nimport {ChipGroupContext} from './ChipGroup';\n\nexport interface ChipGroupToolbarItemProps extends React.HTMLProps<HTMLUListElement> {\n  /**  Category name text */\n  categoryName?: string;\n  /** Content rendered inside the chip text */\n  children: React.ReactNode;\n  /** Additional classes added to the chip item */\n  className?: string;\n}\n\nexport const ChipGroupToolbarItem: React.FunctionComponent<ChipGroupToolbarItemProps> = ({\n  categoryName = '',\n  children = null,\n  className = '',\n  ...props\n}: ChipGroupToolbarItemProps) => {\n    if (React.Children.count(children)) {\n      return (\n        <ChipGroupContext.Consumer>\n          {(HeadingLevel: any) => {\n            return (\n              <ul className={css(styles.chipGroup, styles.modifiers.toolbar, className)} {...props}>\n                <li>\n                  <HeadingLevel className={css(styles.chipGroupLabel)}>{categoryName}</HeadingLevel>\n                  <ul className={css(styles.chipGroup)}>{children}</ul>\n                </li>\n              </ul>\n            );\n          }}\n        </ChipGroupContext.Consumer>\n      );\n    }\n    return null;\n  };\n"],"file":"ChipGroupToolbarItem.js"}