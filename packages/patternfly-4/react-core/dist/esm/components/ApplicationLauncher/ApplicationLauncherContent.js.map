{"version":3,"sources":["../../../../src/components/ApplicationLauncher/ApplicationLauncherContent.tsx"],"names":["React","css","styles","accessibleStyles","ApplicationLauncherIcon","ApplicationLauncherText","ExternalLinkAltIcon","ApplicationLauncherItemContext","ApplicationLauncherContent","children","isExternal","icon","appLauncherMenuItemExternalIcon","screenReader"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,8BAAT,QAA+C,2BAA/C;AAOA,OAAO,MAAMC,0BAAoF,GAAG,CAAC;AACnGC,EAAAA;AADmG,CAAD,KAGlG,oBAAC,8BAAD,CAAgC,QAAhC,QACG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KACC,0CACGA,IAAI,IAAI,oBAAC,uBAAD,QAA0BA,IAA1B,CADX,EAEGA,IAAI,GAAG,oBAAC,uBAAD,QAA0BF,QAA1B,CAAH,GAAmEA,QAF1E,EAGGC,UAAU,IACT,0CACE;AAAM,EAAA,SAAS,EAAET,GAAG,CAACC,MAAM,CAACU,+BAAR;AAApB,GAA8D,oBAAC,mBAAD,OAA9D,CADF,EAEE;AAAM,EAAA,SAAS,EAAEX,GAAG,CAACE,gBAAgB,CAACU,YAAlB;AAApB,wBAFF,CAJJ,CAFJ,CAHK;;AAHLJ,EAAAA,Q","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItem';\n\nexport interface ApplicationLauncherContentProps {\n  /** Main content to be rendered */\n  children: React.ReactNode;\n}\n\nexport const ApplicationLauncherContent: React.FunctionComponent<ApplicationLauncherContentProps> = ({\n  children\n}: ApplicationLauncherContentProps) => (\n  <ApplicationLauncherItemContext.Consumer>\n    {({ isExternal, icon }) => (\n      <>\n        {icon && <ApplicationLauncherIcon>{icon}</ApplicationLauncherIcon>}\n        {icon ? <ApplicationLauncherText>{children}</ApplicationLauncherText> : children}\n        {isExternal && (\n          <>\n            <span className={css(styles.appLauncherMenuItemExternalIcon)}><ExternalLinkAltIcon /></span>\n            <span className={css(accessibleStyles.screenReader)}>(opens new window)</span>\n          </>\n        )}\n      </>\n    )}\n  </ApplicationLauncherItemContext.Consumer>\n);\n"],"file":"ApplicationLauncherContent.js"}