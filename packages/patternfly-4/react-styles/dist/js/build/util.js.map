{"version":3,"sources":["../../../src/build/util.js"],"names":["packageName","styleSheetToken","cssToJS","cssString","cssOutputPath","useModules","cssRequire","cssImport","cssToJSNew","cssClasses","distinctValues","Set","classDeclaration","modifiersDeclaration","forEach","className","key","cleanClass","replace","trim","push","classSection","length","join","getFullCSS","pathToCSSFile","rawCss","getCSS","minifyCSS","css","stringify","parse","compress","writeCSSFile","destinationPath","contents","path","dirname","then","replacementString","writeCSSJSFile","rootPath","originalPath","getRelativeImportPath","from","to","parsedTo","newImportPath","normalize","dir","base","startsWith","getCSSOutputPath","outDir","resolve","getFormattedCSSOutputPath","name","formattedDir","nodeText","nodeIndex","lastIndexOf","substring"],"mappings":"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","sourcesContent":["import path from 'path';\nimport { readFileSync } from 'fs';\nimport css from 'css';\nimport { outputFileSync, ensureDir } from 'fs-extra';\nimport relative from 'relative';\nimport { getCSSClasses, isModifier, formatClassName } from '../utils';\n\nexport const packageName = '@patternfly/react-styles';\nexport const styleSheetToken = 'StyleSheet';\n\nexport function cssToJS(cssString, cssOutputPath = '', useModules = false) {\n  let cssRequire = '';\n  let cssImport = '';\n  if (cssOutputPath) {\n    cssRequire = `require('${cssOutputPath}');`;\n    cssImport = `import '${cssOutputPath}';`;\n  }\n  if (useModules) {\n    return `import { ${styleSheetToken} } from '${packageName}';\n${cssImport}\n\nexport default ${styleSheetToken}.parse(\\`${cssString}\\`);\n`;\n  }\n\n  return `const { ${styleSheetToken} } = require('${packageName}');\n${cssRequire}\n\nmodule.exports = ${styleSheetToken}.parse(\\`${cssString}\\`);\n`;\n}\n\nexport function cssToJSNew(cssString, cssOutputPath = '', useModules = false) {\n  let cssRequire = '';\n  let cssImport = '';\n  if (cssOutputPath) {\n    cssRequire = `require('${cssOutputPath}');`;\n    cssImport = `import '${cssOutputPath}';`;\n  }\n\n  const cssClasses = getCSSClasses(cssString);\n  const distinctValues = [...new Set(cssClasses)];\n  const classDeclaration = [];\n  const modifiersDeclaration = [];\n\n  distinctValues.forEach(className => {\n    const key = formatClassName(className);\n    const cleanClass = className.replace('.', '').trim();\n    if (isModifier(className)) {\n      modifiersDeclaration.push(`'${key}': '${cleanClass}'`);\n    } else {\n      classDeclaration.push(`${key}: '${cleanClass}'`);\n    }\n  });\n  const classSection = classDeclaration.length > 0 ? `${classDeclaration.join(',\\n  ')},` : '';\n\n  if (useModules) {\n    return `${cssImport}\n\nexport default {\n  ${classSection}\n  modifiers: {\n    ${modifiersDeclaration.join(',\\n    ')}\n  }\n}\n`;\n  }\n\n  return `${cssRequire}\n\nmodule.exports = {\n  ${classSection}\n  modifiers: {\n    ${modifiersDeclaration.join(',\\n    ')}\n  }\n}\n\n`;\n}\n\nexport function getFullCSS(pathToCSSFile) {\n  const rawCss = readFileSync(pathToCSSFile, 'utf8').replace('@charset \"UTF-8\";', '');\n  return rawCss;\n}\n\nexport function getCSS(pathToCSSFile) {\n  const rawCss = readFileSync(pathToCSSFile, 'utf8').replace('@charset \"UTF-8\";', '');\n  return minifyCSS(rawCss);\n}\n\nexport function minifyCSS(cssString) {\n  return css.stringify(css.parse(cssString.replace('@charset \"UTF-8\";', '')), {\n    compress: true\n  });\n}\n\nexport function writeCSSFile(destinationPath, contents) {\n  ensureDir(path.dirname(destinationPath)).then(() => {\n    const replacementString = contents.replace(/..\\/..\\/assets/g, '../../../../../styles/assets');\n    outputFileSync(destinationPath, replacementString);\n  });\n}\n\nexport function writeCSSJSFile(rootPath, originalPath, destinationPath, contents) {\n  outputFileSync(destinationPath, contents);\n}\n\nexport function getRelativeImportPath(from, to) {\n  const parsedTo = path.parse(to);\n  const newImportPath = path.normalize(path.join(relative(from, parsedTo.dir), parsedTo.base));\n  return newImportPath.startsWith('.') ? newImportPath : `./${newImportPath}`;\n}\n\nexport function getCSSOutputPath(outDir, rootPath, pathToCSSFile) {\n  return path.join(path.resolve(rootPath, outDir), getFormattedCSSOutputPath(pathToCSSFile));\n}\n\nfunction getFormattedCSSOutputPath(pathToCSSFile) {\n  const { dir, name } = path.parse(pathToCSSFile);\n  let formattedDir = dir;\n  const nodeText = 'node_modules';\n  const nodeIndex = formattedDir.lastIndexOf(nodeText);\n  if (nodeIndex !== -1) {\n    formattedDir = formattedDir.substring(nodeIndex + nodeText.length);\n  }\n  return path.join(formattedDir, `${name}.css`);\n}\n"],"file":"util.js"}