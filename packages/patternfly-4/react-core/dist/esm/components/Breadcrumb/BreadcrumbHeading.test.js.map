{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbHeading.test.tsx"],"names":["React","BreadcrumbHeading","shallow","describe","test","view","expect","toMatchSnapshot"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEAC,QAAQ,CAAC,6BAAD,EAAgC,MAAM;AAC5CC,EAAAA,IAAI,CAAC,yCAAD,EAA4C,MAAM;AACpD,UAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,iBAAD,eAAD,CAApB;AACAI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC;AAA7B,cAAD,CAApB;AACAI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC;AAAtB,cAAD,CAApB;AACAI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,oCAAD,EAAuC,MAAM;AAC/C,UAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC;AAAtB,cAAD,CAApB;AACAI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,6CAAD,EAAgD,MAAM;AACxD,UAAMC,IAAI,GAAGH,OAAO,CAClB,oBAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,MAAM,EAAC;AAArC,cADkB,CAApB;AAKAI,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAPG,CAAJ;AAQD,CA7BO,CAAR","sourcesContent":["import * as React from 'react';\nimport { BreadcrumbHeading } from './BreadcrumbHeading';\nimport { shallow } from 'enzyme';\n\ndescribe('BreadcrumbHeading component', () => {\n  test('should render default breadcrumbHeading', () => {\n    const view = shallow(<BreadcrumbHeading>Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should pass classname', () => {\n    const view = shallow(<BreadcrumbHeading className=\"Class\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should pass custom id', () => {\n    const view = shallow(<BreadcrumbHeading id=\"Id\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render link breadcrumbTitle', () => {\n    const view = shallow(<BreadcrumbHeading to=\"/somewhere\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbHeading with target', () => {\n    const view = shallow(\n      <BreadcrumbHeading to=\"#here\" target=\"_blank\">\n        Item\n      </BreadcrumbHeading>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"BreadcrumbHeading.test.js"}