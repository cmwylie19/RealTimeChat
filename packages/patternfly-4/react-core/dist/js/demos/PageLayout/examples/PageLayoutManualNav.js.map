{"version":3,"sources":["../../../../../src/demos/PageLayout/examples/PageLayoutManualNav.js"],"names":["PageLayoutManualNav","props","isDropdownOpen","setState","event","state","isKebabDropdownOpen","result","activeItem","itemId","isNavOpenDesktop","isNavOpenMobile","mobileView","windowSize","isMobileView","PageNav","onNavSelect","kebabDropdownItems","userDropdownItems","PageToolbar","accessibleStyles","screenReader","visibleOnLg","ButtonVariant","plain","hiddenOnLg","spacingStyles","mr_0","onKebabDropdownSelect","onKebabDropdownToggle","visibleOnMd","onDropdownSelect","onDropdownToggle","Header","imgBrand","imgAvatar","onNavToggleMobile","onNavToggleDesktop","Sidebar","pageId","PageSkipToContent","onPageResize","PageSectionVariants","light","Array","apply","map","x","i","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownSeparator,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem\n} from '@patternfly/react-core';\n// make sure you've installed @patternfly/patternfly\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport spacingStyles from '@patternfly/react-styles/css/utilities/Spacing/spacing';\nimport { css } from '@patternfly/react-styles';\nimport { BellIcon, CogIcon } from '@patternfly/react-icons';\nimport imgBrand from './imgBrand.png';\nimport imgAvatar from './imgAvatar.svg';\n\nclass PageLayoutManualNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isMobileView: false,\n      isNavOpenDesktop: true,\n      isNavOpenMobile: false\n    };\n  }\n\n  onDropdownToggle = isDropdownOpen => {\n    this.setState({\n      isDropdownOpen\n    });\n  }\n\n  onDropdownSelect = event => {\n    this.setState({\n      isDropdownOpen: !this.state.isDropdownOpen\n    });\n  }\n\n  onKebabDropdownToggle = isKebabDropdownOpen => {\n    this.setState({\n      isKebabDropdownOpen\n    });\n  }\n\n  onKebabDropdownSelect = event => {\n    this.setState({\n      isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n    });\n  }\n\n  onNavSelect = result => {\n    this.setState({\n      activeItem: result.itemId\n    });\n  }\n\n  onNavToggleDesktop = () => {\n    this.setState({\n      isNavOpenDesktop: !this.state.isNavOpenDesktop\n    });\n  }\n\n  onNavToggleMobile = () => {\n    this.setState({\n      isNavOpenMobile: !this.state.isNavOpenMobile\n    });\n  }\n\n  onPageResize = ({ mobileView, windowSize }) => {\n    this.setState({\n      isMobileView: mobileView\n    });\n  }\n\n  render() {\n    const {\n      isDropdownOpen,\n      isKebabDropdownOpen,\n      activeItem,\n      isNavOpenDesktop,\n      isNavOpenMobile,\n      isMobileView\n    } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" theme=\"dark\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0}>\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1}>\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2}>\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3}>\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4}>\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <BellIcon /> Notifications\n      </DropdownItem>,\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownItem>Link</DropdownItem>,\n      <DropdownItem component=\"button\">Action</DropdownItem>,\n      <DropdownItem isDisabled>Disabled Link</DropdownItem>,\n      <DropdownItem isDisabled component=\"button\">\n        Disabled Action\n      </DropdownItem>,\n      <DropdownSeparator />,\n      <DropdownItem>Separated Link</DropdownItem>,\n      <DropdownItem component=\"button\">Separated Action</DropdownItem>\n    ];\n    const PageToolbar = (\n      <Toolbar>\n        <ToolbarGroup className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnLg)}>\n          <ToolbarItem>\n            <Button id=\"default-example-uid-01\" aria-label=\"Notifications actions\" variant={ButtonVariant.plain}>\n              <BellIcon />\n            </Button>\n          </ToolbarItem>\n          <ToolbarItem>\n            <Button id=\"default-example-uid-02\" aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </ToolbarItem>\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <ToolbarItem className={css(accessibleStyles.hiddenOnLg, spacingStyles.mr_0)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </ToolbarItem>\n          <ToolbarItem className={css(accessibleStyles.screenReader, accessibleStyles.visibleOnMd)}>\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>Kyle Baker</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        toolbar={PageToolbar}\n        avatar={<Avatar src={imgAvatar} alt=\"Avatar image\" />}\n        showNavToggle\n        onNavToggle={isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop}\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop} theme=\"dark\" />;\n    const pageId = 'main-content-page-layout-manual-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          onPageResize={this.onPageResize}\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main Title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery gutter=\"md\">\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageLayoutManualNav;\n"],"file":"PageLayoutManualNav.js"}