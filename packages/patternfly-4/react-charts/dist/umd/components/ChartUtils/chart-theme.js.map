{"version":3,"sources":["../../../esm/components/ChartUtils/chart-theme.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getCustomTheme","themeColor","themeVariant","customTheme","getTheme","getAxisTheme","theme","ChartAxisTheme","getBulletTheme","ChartBulletTheme","getBulletComparativeErrorMeasureTheme","ChartBulletComparativeErrorMeasureTheme","getBulletComparativeMeasureTheme","ChartBulletComparativeMeasureTheme","getBulletComparativeWarningMeasureTheme","ChartBulletComparativeWarningMeasureTheme","getBulletGroupTitleTheme","ChartBulletGroupTitleTheme","getBulletPrimaryDotMeasureTheme","ChartBulletPrimaryDotMeasureTheme","getBulletPrimaryNegativeMeasureTheme","ChartBulletPrimaryNegativeMeasureTheme","getBulletPrimarySegmentedMeasureTheme","ChartBulletPrimarySegmentedMeasureTheme","getBulletQualitativeRangeTheme","ChartBulletQualitativeRangeTheme","getDonutTheme","ChartDonutTheme","getDonutThresholdDynamicTheme","ChartDonutThresholdDynamicTheme","legend","colorScale","pie","ChartDonutThresholdStaticTheme","getDonutThresholdStaticTheme","invert","staticTheme","reverse","getDonutUtilizationTheme","ChartDonutUtilizationDynamicTheme","ChartDonutUtilizationStaticTheme","getDarkThemeColors","ChartThemeColor","blue","DarkBlueColorTheme","cyan","DarkCyanColorTheme","gold","DarkGoldColorTheme","gray","DarkGrayColorTheme","green","DarkGreenColorTheme","multi","multiOrdered","DarkMultiColorOrderedTheme","multiUnordered","DarkMultiColorUnorderedTheme","orange","DarkOrangeColorTheme","purple","DarkPurpleColorTheme","getLightThemeColors","LightBlueColorTheme","LightCyanColorTheme","LightGoldColorTheme","LightGrayColorTheme","LightGreenColorTheme","LightMultiColorOrderedTheme","LightMultiColorUnorderedTheme","LightOrangeColorTheme","LightPurpleColorTheme","baseTheme","JSON","parse","stringify","ChartBaseTheme","ChartThemeVariant","dark","light","getThresholdTheme","ChartThresholdTheme"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { DarkBlueColorTheme } from '../ChartTheme/themes/dark/blue-color-theme';\nimport { DarkCyanColorTheme } from '../ChartTheme/themes/dark/cyan-color-theme';\nimport { DarkGoldColorTheme } from '../ChartTheme/themes/dark/gold-color-theme';\nimport { DarkGrayColorTheme } from '../ChartTheme/themes/dark/gray-color-theme';\nimport { DarkGreenColorTheme } from '../ChartTheme/themes/dark/green-color-theme';\nimport { DarkMultiColorOrderedTheme } from '../ChartTheme/themes/dark/multi-color-ordered-theme';\nimport { DarkMultiColorUnorderedTheme } from '../ChartTheme/themes/dark/multi-color-unordered-theme';\nimport { DarkOrangeColorTheme } from '../ChartTheme/themes/dark/orange-color-theme';\nimport { DarkPurpleColorTheme } from '../ChartTheme/themes/dark/purple-color-theme';\nimport { LightBlueColorTheme } from '../ChartTheme/themes/light/blue-color-theme';\nimport { LightCyanColorTheme } from '../ChartTheme/themes/light/cyan-color-theme';\nimport { LightGoldColorTheme } from '../ChartTheme/themes/light/gold-color-theme';\nimport { LightGrayColorTheme } from '../ChartTheme/themes/light/gray-color-theme';\nimport { LightGreenColorTheme } from '../ChartTheme/themes/light/green-color-theme';\nimport { LightMultiColorOrderedTheme } from '../ChartTheme/themes/light/multi-color-ordered-theme';\nimport { LightMultiColorUnorderedTheme } from '../ChartTheme/themes/light/multi-color-unordered-theme';\nimport { LightOrangeColorTheme } from '../ChartTheme/themes/light/orange-color-theme';\nimport { LightPurpleColorTheme } from '../ChartTheme/themes/light/purple-color-theme';\nimport { ChartAxisTheme, ChartBaseTheme, ChartBulletComparativeErrorMeasureTheme, ChartBulletComparativeMeasureTheme, ChartBulletComparativeWarningMeasureTheme, ChartBulletGroupTitleTheme, ChartBulletPrimaryDotMeasureTheme, ChartBulletPrimaryNegativeMeasureTheme, ChartBulletPrimarySegmentedMeasureTheme, ChartBulletTheme, ChartBulletQualitativeRangeTheme, ChartDonutTheme, ChartDonutUtilizationDynamicTheme, ChartDonutUtilizationStaticTheme, ChartDonutThresholdDynamicTheme, ChartDonutThresholdStaticTheme, ChartThemeColor, ChartThemeVariant, ChartThresholdTheme } from '../ChartTheme/ChartTheme';\nimport { cloneDeep } from 'lodash'; // Apply custom properties to base and color themes\n\nexport const getCustomTheme = (themeColor, themeVariant, customTheme) => merge(getTheme(themeColor, themeVariant), customTheme); // Returns axis theme\n\nexport const getAxisTheme = (themeColor, themeVariant) => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartAxisTheme);\n  return theme;\n}; // Returns bullet chart theme\n\nexport const getBulletTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletTheme); // Returns comparative error measure theme for bullet chart\n\nexport const getBulletComparativeErrorMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletComparativeErrorMeasureTheme); // Returns comparative measure theme for bullet chart\n\nexport const getBulletComparativeMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletComparativeMeasureTheme); // Returns comparative warning measure theme for bullet chart\n\nexport const getBulletComparativeWarningMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletComparativeWarningMeasureTheme); // Returns group title theme for bullet chart\n\nexport const getBulletGroupTitleTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletGroupTitleTheme); // Returns primary dot measure theme for bullet chart\n\nexport const getBulletPrimaryDotMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryDotMeasureTheme); // Returns primary negative measure theme for bullet chart\n\nexport const getBulletPrimaryNegativeMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletPrimaryNegativeMeasureTheme); // Returns primary segmented measure theme for bullet chart\n\nexport const getBulletPrimarySegmentedMeasureTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletPrimarySegmentedMeasureTheme); // Returns qualitative range theme for bullet chart\n\nexport const getBulletQualitativeRangeTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartBulletQualitativeRangeTheme); // Returns donut theme\n\nexport const getDonutTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartDonutTheme); // Returns dynamic donut threshold theme\n\nexport const getDonutThresholdDynamicTheme = (themeColor, themeVariant) => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutThresholdDynamicTheme); // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n\n  theme.legend.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdDynamicTheme.legend.colorScale]; // Merge the threshold colors in case users want to show the unused data\n\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutThresholdStaticTheme.pie.colorScale];\n  return theme;\n}; // Returns static donut threshold theme\n\nexport const getDonutThresholdStaticTheme = (themeColor, themeVariant, invert) => {\n  const staticTheme = cloneDeep(ChartDonutThresholdStaticTheme);\n\n  if (invert) {\n    staticTheme.pie.colorScale = staticTheme.pie.colorScale.reverse();\n  }\n\n  return getCustomTheme(themeColor, themeVariant, staticTheme);\n}; // Returns donut utilization theme\n\nexport const getDonutUtilizationTheme = (themeColor, themeVariant) => {\n  const theme = getCustomTheme(themeColor, themeVariant, ChartDonutUtilizationDynamicTheme); // Merge just the first color of dynamic (blue, green, etc.) with static (grey) for expected colorScale\n\n  theme.pie.colorScale = [theme.pie.colorScale[0], ...ChartDonutUtilizationStaticTheme.pie.colorScale];\n  theme.legend.colorScale = [theme.legend.colorScale[0], ...ChartDonutUtilizationStaticTheme.legend.colorScale];\n  return theme;\n}; // Returns dark theme colors\n\nexport const getDarkThemeColors = themeColor => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return DarkBlueColorTheme;\n\n    case ChartThemeColor.cyan:\n      return DarkCyanColorTheme;\n\n    case ChartThemeColor.gold:\n      return DarkGoldColorTheme;\n\n    case ChartThemeColor.gray:\n      return DarkGrayColorTheme;\n\n    case ChartThemeColor.green:\n      return DarkGreenColorTheme;\n\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return DarkMultiColorOrderedTheme;\n\n    case ChartThemeColor.multiUnordered:\n      return DarkMultiColorUnorderedTheme;\n\n    case ChartThemeColor.orange:\n      return DarkOrangeColorTheme;\n\n    case ChartThemeColor.purple:\n      return DarkPurpleColorTheme;\n\n    default:\n      return DarkBlueColorTheme;\n  }\n}; // Returns light theme colors\n\nexport const getLightThemeColors = themeColor => {\n  switch (themeColor) {\n    case ChartThemeColor.blue:\n      return LightBlueColorTheme;\n\n    case ChartThemeColor.cyan:\n      return LightCyanColorTheme;\n\n    case ChartThemeColor.gold:\n      return LightGoldColorTheme;\n\n    case ChartThemeColor.gray:\n      return LightGrayColorTheme;\n\n    case ChartThemeColor.green:\n      return LightGreenColorTheme;\n\n    case ChartThemeColor.multi:\n    case ChartThemeColor.multiOrdered:\n      return LightMultiColorOrderedTheme;\n\n    case ChartThemeColor.multiUnordered:\n      return LightMultiColorUnorderedTheme;\n\n    case ChartThemeColor.orange:\n      return LightOrangeColorTheme;\n\n    case ChartThemeColor.purple:\n      return LightPurpleColorTheme;\n\n    default:\n      return LightBlueColorTheme;\n  }\n}; // Applies theme color and variant to base theme\n\nexport const getTheme = (themeColor, themeVariant) => {\n  // Deep clone\n  const baseTheme = _objectSpread({}, JSON.parse(JSON.stringify(ChartBaseTheme)));\n\n  switch (themeVariant) {\n    case ChartThemeVariant.dark:\n      return merge(baseTheme, getDarkThemeColors(themeColor));\n\n    case ChartThemeVariant.light:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n\n    default:\n      return merge(baseTheme, getLightThemeColors(themeColor));\n  }\n}; // Returns threshold theme\n\nexport const getThresholdTheme = (themeColor, themeVariant) => getCustomTheme(themeColor, themeVariant, ChartThresholdTheme);\n//# sourceMappingURL=chart-theme.js.map"],"file":"chart-theme.js"}