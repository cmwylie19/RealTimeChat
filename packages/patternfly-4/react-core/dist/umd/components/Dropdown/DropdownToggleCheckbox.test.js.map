{"version":3,"sources":["../../../esm/components/Dropdown/DropdownToggleCheckbox.test.js"],"names":["React","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","onChange","jest","fn","isChecked","test","view","createElement","DropdownToggleCheckbox","id","expect","toMatchSnapshot","isDisabled","label","className","newValue","event","checked","find","simulate","mock","calls","toBe","toMatchObject"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { DropdownToggleCheckbox } from './DropdownToggleCheckbox';\nconst props = {\n  onChange: jest.fn(),\n  isChecked: false\n};\ntest('controlled', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    isChecked: true,\n    id: \"check\",\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('uncontrolled', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    id: \"check\",\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('with text', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    id: \"check\",\n    isDisabled: true,\n    \"aria-label\": \"check\"\n  }, \"Some text\"));\n  expect(view).toMatchSnapshot();\n});\ntest('isDisabled', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    id: \"check\",\n    isDisabled: true,\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('3rd state', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    id: \"check\",\n    isChecked: null,\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('passing class', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    label: \"label\",\n    className: \"class-123\",\n    id: \"check\",\n    isChecked: true,\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('passing HTML attribute', () => {\n  const view = shallow(React.createElement(DropdownToggleCheckbox, {\n    label: \"label\",\n    \"aria-labelledby\": \"labelId\",\n    id: \"check\",\n    isChecked: true,\n    \"aria-label\": \"check\"\n  }));\n  expect(view).toMatchSnapshot();\n});\ntest('checkbox passes value and event to onChange handler', () => {\n  const newValue = true;\n  const event = {\n    target: {\n      checked: newValue\n    }\n  };\n  const view = mount(React.createElement(DropdownToggleCheckbox, _extends({\n    id: \"check\"\n  }, props, {\n    \"aria-label\": \"check\"\n  })));\n  view.find('input').simulate('change', event);\n  expect(props.onChange.mock.calls[0][0]).toBe(newValue);\n  expect(props.onChange.mock.calls[0][1]).toMatchObject(event);\n});\n//# sourceMappingURL=DropdownToggleCheckbox.test.js.map"],"file":"DropdownToggleCheckbox.test.js"}