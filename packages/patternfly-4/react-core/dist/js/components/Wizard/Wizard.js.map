{"version":3,"sources":["../../../../src/components/Wizard/Wizard.tsx"],"names":["FocusTrap","require","Wizard","props","event","keyCode","KEY_CODES","ESCAPE_KEY","state","isNavOpen","setState","isOpen","onClose","hide","bodyChildren","document","body","children","Array","from","child","container","setAttribute","removeAttribute","onNext","onSave","currentStep","flattenedSteps","getFlattenedSteps","maxSteps","length","newStep","prevId","id","prevName","name","onBack","adjustedStep","step","onGoToStep","stepId","i","stepName","steps","childStep","push","j","Object","assign","canJumpTo","newId","currentId","isModal","isInPage","title","console","warn","titleId","descriptionId","startAtStep","Number","isInteger","appendChild","toggleSiblingsFromScreenReaders","addEventListener","handleKeyClicks","removeChild","removeEventListener","canUseDOM","createElement","isFullHeight","isFullWidth","width","height","description","className","nextButtonText","backButtonText","cancelButtonText","ariaLabelCloseButton","ariaLabelNav","hasBodyPadding","footer","isCompactNav","rest","activeStep","computedSteps","initSteps","firstStep","isValid","enableNext","undefined","setFullWidth","setFullHeight","nav","isWizardNavOpen","map","index","isFinishedStep","enabled","navItemStep","hasActiveChild","canJumpToParent","subStep","getFlattenedStepsIndex","goToStep","indexChild","context","goToStepById","goToStepByName","wizard","styles","modifiers","inPage","fullWidth","fullHeight","role","ReactDOM","createPortal","clickOutsideDeactivates","React","Component","component","hideCancelButton","hideBackButton"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from 'exenv';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { Backdrop } from '../Backdrop';\nimport { Bullseye } from '../../layouts/Bullseye';\nimport { WizardHeader } from './WizardHeader';\nimport { WizardFooterInternal } from './WizardFooterInternal';\nimport { WizardToggle } from './WizardToggle';\nimport { WizardNav } from './WizardNav';\nimport { WizardNavItem } from './WizardNavItem';\nimport { WizardContextProvider } from './WizardContext';\n// Can't use ES6 imports :(\n// The types for it are also wrong, we should probably ditch this dependency.\n// tslint:disable-next-line\nconst FocusTrap: any = require('focus-trap-react');\n\nexport interface WizardStep {\n  /** Optional identifier */\n  id?: string | number;\n  /** The name of the step */\n  name: string;\n  /** The component to render in the main body */\n  component?: any;\n  /** Setting to true hides the side nav and footer */\n  isFinishedStep?: boolean;\n  /** Enables or disables the step in the navigation. Enabled by default. */\n  canJumpTo?: boolean;\n  /** Sub steps */\n  steps?: WizardStep[];\n  /** (Unused if footer is controlled) Can change the Next button text. If nextButtonText is also set for the Wizard, this step specific one overrides it. */\n  nextButtonText?: string;\n  /** (Unused if footer is controlled) The condition needed to enable the Next button */\n  enableNext?: boolean;\n  /** (Unused if footer is controlled) True to hide the Cancel button */\n  hideCancelButton?: boolean;\n  /** (Unused if footer is controlled) True to hide the Back button */\n  hideBackButton?: boolean;\n}\n\nexport type WizardStepFunctionType = (newStep: { id?: string | number; name: string; }, prevStep: { prevId?: string | number; prevName: string; }) => void;\n\nexport interface WizardProps extends React.HTMLProps<HTMLDivElement> {\n  /** True to show the wizard (not applicable for isInPage)*/\n  isOpen?: boolean;\n  /** True to show the wizard without the modal */\n  isInPage?: boolean;\n  /** If true makes the navigation more compact */\n  isCompactNav?: boolean;\n  /** True to set full height wizard */\n  isFullHeight?: boolean;\n  /** True to set full width wizard */\n  isFullWidth?: boolean;\n  /** Custom width of the wizard */\n  width?: number | string;\n  /** Custom height of the wizard */\n  height?: number | string;\n  /** The wizard title (required unless isInPage is used) */\n  title?: string;\n  /** The wizard description */\n  description?: string;\n  /** Callback function to close the wizard */\n  onClose?: () => void;\n  /** Callback function when a step in the nav is clicked */\n  onGoToStep?: WizardStepFunctionType;\n  /** Additional classes spread to the Wizard */\n  className?: string;\n  /** The wizard steps configuration object */\n  steps: WizardStep[];\n  /** The current step the wizard is on (1 or higher) */\n  startAtStep?: number;\n  /** aria-label for the Nav */\n  ariaLabelNav?: string;\n  /** Can remove the default padding around the main body content by setting this to false */\n  hasBodyPadding?: boolean;\n  /** (Use to control the footer) Passing in a footer component lets you control the buttons yourself */\n  footer?: React.ReactNode;\n  /** (Unused if footer is controlled) Callback function to save at the end of the wizard, if not specified uses onClose */\n  onSave?: () => void;\n  /** (Unused if footer is controlled) Callback function after Next button is clicked */\n  onNext?: WizardStepFunctionType;\n  /** (Unused if footer is controlled) Callback function after Back button is clicked */\n  onBack?: WizardStepFunctionType;\n  /** (Unused if footer is controlled) The Next button text */\n  nextButtonText?: string;\n  /** (Unused if footer is controlled) The Back button text */\n  backButtonText?: string;\n  /** (Unused if footer is controlled) The Cancel button text */\n  cancelButtonText?: string;\n  /** (Unused if footer is controlled) aria-label for the close button */\n  ariaLabelCloseButton?: string;\n}\n\ninterface WizardState {\n  currentStep: number;\n  isNavOpen: boolean;\n}\n\nexport class Wizard extends React.Component<WizardProps, WizardState> {\n  private static currentId = 0;\n  static defaultProps = {\n    isOpen: false,\n    isInPage: false,\n    isCompactNav: false,\n    isFullHeight: false,\n    isFullWidth: false,\n    title: '',\n    description: '',\n    className: '',\n    startAtStep: 1,\n    nextButtonText: 'Next',\n    backButtonText: 'Back',\n    cancelButtonText: 'Cancel',\n    ariaLabelCloseButton: 'Close',\n    ariaLabelNav: 'Steps',\n    hasBodyPadding: true,\n    onBack: null as WizardStepFunctionType,\n    onNext: null as WizardStepFunctionType,\n    onGoToStep: null as WizardStepFunctionType,\n    width: null as string,\n    height: null as string,\n    footer: null as React.ReactNode,\n    onClose: () => undefined as any\n  };\n  private container: HTMLDivElement;\n  private titleId: string;\n  private descriptionId: string;\n  private isModal: boolean;\n\n  constructor(props: WizardProps) {\n    super(props);\n    const newId = Wizard.currentId++;\n    this.isModal = !props.isInPage;\n    if (this.isModal) {\n      if (!props.title) {\n        console.warn('Title is required for modals!');\n      }\n      this.titleId = `pf-wizard-title-${newId}`;\n      this.descriptionId = `pf-wizard-description-${newId}`;\n    }\n\n    this.state = {\n      currentStep: this.props.startAtStep && Number.isInteger(this.props.startAtStep) ? this.props.startAtStep : 1,\n      isNavOpen: false\n    };\n  }\n\n  private handleKeyClicks = (event: KeyboardEvent): void => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY) {\n      if (this.state.isNavOpen) {\n        this.setState({ isNavOpen: !this.state.isNavOpen });\n      } else if (this.props.isOpen) {\n        this.props.onClose();\n      }\n    }\n  }\n\n  private toggleSiblingsFromScreenReaders = (hide: boolean): void => {\n    const bodyChildren = document.body.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  }\n\n  private onNext = (): void => {\n    const { onNext, onClose, onSave } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const maxSteps = flattenedSteps.length;\n    if (currentStep >= maxSteps) {\n      // Hit the save button at the end of the wizard\n      if (onSave) {\n        return onSave();\n      }\n      return onClose();\n    } else {\n      const newStep = currentStep + 1;\n      this.setState({\n        currentStep: newStep\n      });\n      const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];\n      const { id, name } = flattenedSteps[newStep - 1];\n      return onNext && onNext({ id, name }, { prevId, prevName });\n    }\n  }\n\n  private onBack = (): void => {\n    const { onBack } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    if (flattenedSteps.length < currentStep) {\n      // Previous step was removed, just update the currentStep state\n      const adjustedStep = flattenedSteps.length;\n      this.setState({\n        currentStep: adjustedStep\n      });\n    } else {\n      const newStep = currentStep - 1 <= 0 ? 0 : currentStep - 1;\n      this.setState({\n        currentStep: newStep\n      });\n      const { id: prevId, name: prevName } = flattenedSteps[newStep];\n      const { id, name } = flattenedSteps[newStep - 1];\n      return onBack && onBack({ id, name }, { prevId, prevName });\n    }\n  }\n\n  private goToStep = (step: number): void => {\n    const { onGoToStep } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const maxSteps = flattenedSteps.length;\n    if (step < 1) {\n      step = 1;\n    } else if (step > maxSteps) {\n      step = maxSteps;\n    }\n    this.setState({ currentStep: step, isNavOpen: false });\n    const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];\n    const { id, name } = flattenedSteps[step - 1];\n    return onGoToStep && onGoToStep({ id, name }, { prevId, prevName });\n  }\n\n  private goToStepById = (stepId: number | string): void => {\n    const flattenedSteps = this.getFlattenedSteps();\n    let step;\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].id === stepId) {\n        step = i + 1;\n        break;\n      }\n    }\n    if (step) {\n      this.setState({ currentStep: step });\n    }\n  }\n\n  private goToStepByName = (stepName: string): void => {\n    const flattenedSteps = this.getFlattenedSteps();\n    let step;\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].name === stepName) {\n        step = i + 1;\n        break;\n      }\n    }\n    if (step) {\n      this.setState({ currentStep: step });\n    }\n  }\n\n  private getFlattenedSteps = (): WizardStep[] => {\n    const { steps } = this.props;\n    const flattenedSteps: WizardStep[] = [];\n    for (const step of steps) {\n      if (step.steps) {\n        for (const childStep of step.steps) {\n          flattenedSteps.push(childStep);\n        }\n      } else {\n        flattenedSteps.push(step);\n      }\n    }\n    return flattenedSteps;\n  }\n\n  private getFlattenedStepsIndex = (flattenedSteps: WizardStep[], stepName: string): number => {\n    for (let i = 0; i < flattenedSteps.length; i++) {\n      if (flattenedSteps[i].name === stepName) {\n        return i + 1;\n      }\n    }\n\n    return 0;\n  }\n\n  private initSteps = (steps: WizardStep[]): WizardStep[] => {\n    // Set default Step values\n    for (let i = 0; i < steps.length; i++) {\n      if (steps[i].steps) {\n        for (let j = 0; j < steps[i].steps.length; j++) {\n          steps[i].steps[j] = Object.assign({ canJumpTo: true }, steps[i].steps[j]);\n        }\n      }\n      steps[i] = Object.assign({ canJumpTo: true }, steps[i]);\n    }\n    return steps;\n  }\n\n  componentDidMount() {\n    if (this.isModal) {\n      if (this.container) {\n        document.body.appendChild(this.container);\n      }\n      this.toggleSiblingsFromScreenReaders(true);\n      document.addEventListener('keydown', this.handleKeyClicks, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isModal) {\n      if (this.container) {\n        document.body.removeChild(this.container);\n      }\n      this.toggleSiblingsFromScreenReaders(false);\n      document.removeEventListener('keydown', this.handleKeyClicks, false);\n    }\n  }\n\n  render() {\n    if (this.isModal) {\n      if (!canUseDOM) {\n        return null;\n      }\n      if (!this.container) {\n        this.container = document.createElement('div');\n      }\n    }\n    const {\n      isOpen,\n      isInPage,\n      isFullHeight,\n      isFullWidth,\n      width,\n      height,\n      title,\n      description,\n      onClose,\n      onSave,\n      onBack,\n      onNext,\n      onGoToStep,\n      className,\n      steps,\n      startAtStep,\n      nextButtonText = 'Next',\n      backButtonText = 'Back',\n      cancelButtonText = 'Cancel',\n      ariaLabelCloseButton = 'Close',\n      ariaLabelNav,\n      hasBodyPadding,\n      footer,\n      isCompactNav,\n      ...rest\n    } = this.props;\n    const { currentStep } = this.state;\n    const flattenedSteps = this.getFlattenedSteps();\n    const adjustedStep = flattenedSteps.length < currentStep ? flattenedSteps.length : currentStep;\n    const activeStep = flattenedSteps[adjustedStep - 1];\n    const computedSteps: WizardStep[] = this.initSteps(steps);\n    const firstStep = activeStep === flattenedSteps[0];\n    const isValid = activeStep.enableNext !== undefined ? activeStep.enableNext : true;\n    const setFullWidth = isFullWidth || width;\n    const setFullHeight = isFullHeight || height;\n\n    const nav = (isWizardNavOpen: boolean) => (\n      <WizardNav isOpen={isWizardNavOpen} ariaLabel={ariaLabelNav}>\n        {computedSteps.map((step, index) => {\n          if (step.isFinishedStep) {\n            // Don't show finished step in the side nav\n            return;\n          }\n          let enabled;\n          let navItemStep;\n          if (step.steps) {\n            let hasActiveChild = false;\n            let canJumpToParent = false;\n            for (const subStep of step.steps) {\n              if (activeStep.name === subStep.name) {\n                // one of the children matches\n                hasActiveChild = true;\n              }\n              if (subStep.canJumpTo) {\n                canJumpToParent = true;\n              }\n            }\n            navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.steps[0].name);\n            return (\n              <WizardNavItem\n                key={index}\n                text={step.name}\n                isCurrent={hasActiveChild}\n                isDisabled={!canJumpToParent}\n                step={navItemStep}\n                onNavItemClick={this.goToStep}\n              >\n                <WizardNav returnList>\n                  {step.steps.map((childStep: WizardStep, indexChild: number) => {\n                    if (childStep.isFinishedStep) {\n                      // Don't show finished step in the side nav\n                      return;\n                    }\n                    navItemStep = this.getFlattenedStepsIndex(flattenedSteps, childStep.name);\n                    enabled = childStep.canJumpTo;\n                    return (\n                      <WizardNavItem\n                        key={`child_${indexChild}`}\n                        text={childStep.name}\n                        isCurrent={activeStep.name === childStep.name}\n                        isDisabled={!enabled}\n                        step={navItemStep}\n                        onNavItemClick={this.goToStep} />\n                    );\n                  })}\n                </WizardNav>\n              </WizardNavItem>\n            );\n          }\n          navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.name);\n          enabled = step.canJumpTo;\n          return (\n            <WizardNavItem\n              key={index}\n              text={step.name}\n              isCurrent={activeStep.name === step.name}\n              isDisabled={!enabled}\n              step={navItemStep}\n              onNavItemClick={this.goToStep} />\n          );\n        })}\n      </WizardNav>\n    );\n\n    const context = {\n      goToStepById: this.goToStepById,\n      goToStepByName: this.goToStepByName,\n      onNext: this.onNext,\n      onBack: this.onBack,\n      onClose,\n      activeStep\n    };\n\n    if (this.isModal && !isOpen) {\n      return null;\n    }\n\n    const wizard = (\n        <WizardContextProvider value={context}>\n          <div {...rest}\n               className={css(\n                 styles.wizard,\n                 !this.isModal && styles.modifiers.inPage,\n                 isCompactNav && 'pf-m-compact-nav',\n                 activeStep.isFinishedStep && 'pf-m-finished',\n                 setFullWidth && styles.modifiers.fullWidth,\n                 setFullHeight && styles.modifiers.fullHeight,\n                 className)}\n               {\n                 ...(this.isModal && {\n                   role: 'dialog',\n                   'aria-modal': 'true',\n                   'aria-labelledby': this.titleId,\n                   'aria-describedby': description ? this.descriptionId : undefined\n                 })\n               }\n          >\n            {\n              this.isModal && (\n                <WizardHeader\n                  titleId={this.titleId}\n                  descriptionId={this.descriptionId}\n                  onClose={onClose}\n                  title={title}\n                  description={description}\n                  ariaLabelCloseButton={ariaLabelCloseButton}\n                />\n              )\n            }\n            <WizardToggle\n              isNavOpen={this.state.isNavOpen}\n              onNavToggle={(isNavOpen) => this.setState({ isNavOpen })}\n              nav={nav}\n              steps={steps}\n              activeStep={activeStep}\n              hasBodyPadding={hasBodyPadding}\n            >\n              {footer || (\n                <WizardFooterInternal\n                  onNext={this.onNext}\n                  onBack={this.onBack}\n                  onClose={onClose}\n                  isValid={isValid}\n                  firstStep={firstStep}\n                  activeStep={activeStep}\n                  nextButtonText={activeStep.nextButtonText || nextButtonText}\n                  backButtonText={backButtonText}\n                  cancelButtonText={cancelButtonText}\n                />\n              )}\n            </WizardToggle>\n          </div>\n        </WizardContextProvider>\n    );\n\n    return this.isModal ? ReactDOM.createPortal(\n        <FocusTrap focusTrapOptions={{ clickOutsideDeactivates: true }}>\n          <Backdrop>\n            <Bullseye>\n              {wizard}\n            </Bullseye>\n          </Backdrop>\n        </FocusTrap>,\n        this.container\n      ) : wizard;\n  }\n}\n"],"file":"Wizard.js"}