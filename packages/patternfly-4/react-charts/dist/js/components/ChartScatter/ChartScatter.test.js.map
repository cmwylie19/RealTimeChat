{"version":3,"sources":["../../../../src/components/ChartScatter/ChartScatter.test.tsx"],"names":["Object","values","forEach","isRead","test","view","expect","toMatchSnapshot","y","x"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEAA,MAAM,CAACC,MAAP,CAAc,CAAC,IAAD,EAAO,KAAP,CAAd,EAA6BC,OAA7B,CAAqC,UAACC,MAAD,EAAY;AAC/CC,EAAAA,IAAI,CAAC,cAAD,EAAiB,YAAM;AACzB,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,0BAAD,OAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAID,CALD;AAOAH,IAAI,CAAC,wBAAD,EAA2B,YAAM;AACnC,MAAMC,IAAI,GAAG,qBACX,oBAAC,YAAD;AAAO,IAAA,SAAS,EAAE;AAAEG,MAAAA,CAAC,EAAE;AAAL,KAAlB;AAA4B,IAAA,MAAM,EAAE,GAApC;AAAyC,IAAA,KAAK,EAAE;AAAhD,KACE,oBAAC,sBAAD,QACE,oBAAC,0BAAD;AAAc,IAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAiB;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjB,EAAiC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjC,EAAiD;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjD;AAApB,IADF,EAEE,oBAAC,0BAAD;AAAc,IAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAiB;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjB,EAAiC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjC,EAAiD;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjD;AAApB,IAFF,EAGE,oBAAC,0BAAD;AAAc,IAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAiB;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjB,EAAiC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjC,EAAiD;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjD;AAApB,IAHF,EAIE,oBAAC,0BAAD;AAAc,IAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAD,EAAiB;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjB,EAAiC;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjC,EAAiD;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQD,MAAAA,CAAC,EAAE;AAAX,KAAjD;AAApB,IAJF,CADF,CADW,CAAb;AAUAF,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAZG,CAAJ","sourcesContent":["import * as React from 'react';\nimport { shallow } from 'enzyme';\nimport { Chart } from '../Chart/Chart';\nimport { ChartGroup } from '../ChartGroup/ChartGroup';\nimport { ChartScatter } from './ChartScatter';\n\nObject.values([true, false]).forEach((isRead) => {\n  test('ChartScatter', () => {\n    const view = shallow(<ChartScatter />);\n    expect(view).toMatchSnapshot();\n  });\n});\n\ntest('renders component data', () => {\n  const view = shallow(\n    <Chart minDomain={{ y: 0 }} height={200} width={200}>\n      <ChartGroup>\n        <ChartScatter data={[{ x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }, { x: 4, y: 4 }]} />\n        <ChartScatter data={[{ x: 2, y: 2 }, { x: 3, y: 3 }, { x: 4, y: 4 }, { x: 5, y: 5 }]} />\n        <ChartScatter data={[{ x: 3, y: 3 }, { x: 4, y: 4 }, { x: 5, y: 5 }, { x: 6, y: 6 }]} />\n        <ChartScatter data={[{ x: 4, y: 4 }, { x: 5, y: 5 }, { x: 6, y: 6 }, { x: 7, y: 7 }]} />\n      </ChartGroup>\n    </Chart>\n  );\n  expect(view).toMatchSnapshot();\n});\n"],"file":"ChartScatter.test.js"}