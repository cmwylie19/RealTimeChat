{"version":3,"sources":["../../../../src/components/Card/CardFooter.test.tsx"],"names":["test","view","expect","toMatchSnapshot","prop","testId","toBe","component","type","Component"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,IAAI,CAAC,qCAAD,EAAwC,YAAM;AAChD,MAAMC,IAAI,GAAG,qBAAQ,gCAAC,sBAAD,OAAR,CAAb;AACAC,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,wCAAD,EAA2C,YAAM;AACnD,MAAMC,IAAI,GAAG,qBAAQ,gCAAC,sBAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,IAAR,CAAb;AACAC,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,WAAV,CAAD,CAAN,CAA+BD,eAA/B;AACD,CAHG,CAAJ;AAKAH,IAAI,CAAC,4CAAD,EAA+C,YAAM;AACvD,MAAMK,MAAM,GAAG,aAAf;AACA,MAAMJ,IAAI,GAAG,qBAAQ,gCAAC,sBAAD;AAAY,mBAAaI;AAAzB,IAAR,CAAb;AACAH,EAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,aAAV,CAAD,CAAN,CAAiCE,IAAjC,CAAsCD,MAAtC;AACD,CAJG,CAAJ;AAMAL,IAAI,CAAC,6CAAD,EAAgD,YAAM;AACxD,MAAMO,SAAS,GAAG,KAAlB;AACA,MAAMN,IAAI,GAAG,qBAAQ,gCAAC,sBAAD;AAAY,IAAA,SAAS,EAAEM;AAAvB,IAAR,CAAb;AACAL,EAAAA,MAAM,CAACD,IAAI,CAACO,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBC,SAAzB;AACD,CAJG,CAAJ;AAMAP,IAAI,CAAC,sDAAD,EAAyD,YAAM;AACjE,MAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAM,wDAAN;AAAA,GAAlB;;AACA,MAAMR,IAAI,GAAG,qBAAQ,gCAAC,sBAAD;AAAY,IAAA,SAAS,EAAEQ;AAAvB,IAAR,CAAb;AACAP,EAAAA,MAAM,CAACD,IAAI,CAACO,IAAL,EAAD,CAAN,CAAoBF,IAApB,CAAyBG,SAAzB;AACD,CAJG,CAAJ","sourcesContent":["import React from 'react';\nimport { CardFooter } from './CardFooter';\nimport { shallow } from 'enzyme';\n\ntest('renders with PatternFly Core styles', () => {\n  const view = shallow(<CardFooter />);\n  expect(view).toMatchSnapshot();\n});\n\ntest('className is added to the root element', () => {\n  const view = shallow(<CardFooter className=\"extra-class\" />);\n  expect(view.prop('className')).toMatchSnapshot();\n});\n\ntest('extra props are spread to the root element', () => {\n  const testId = 'card-footer';\n  const view = shallow(<CardFooter data-testid={testId} />);\n  expect(view.prop('data-testid')).toBe(testId);\n});\n\ntest('allows passing in a string as the component', () => {\n  const component = 'div';\n  const view = shallow(<CardFooter component={component} />);\n  expect(view.type()).toBe(component);\n});\n\ntest('allows passing in a React Component as the component', () => {\n  const Component = () => <div>im a div</div>;\n  const view = shallow(<CardFooter component={Component} />);\n  expect(view.type()).toBe(Component);\n});\n"],"file":"CardFooter.test.js"}