{"version":3,"sources":["../../../src/test-helpers/MockedTableChanges.js"],"names":["React","Component","PropTypes","TableContext","TableHeader","withContext","context","contextType","WrappedComponent","WithContext","getChildContext","render","props","children","propTypes","node","defaultProps","childContextTypes","TableProvider","columns","renderers","header","wrapper","row","cell","any","MockedTableChanges","updateFunc","updateHeaderData","func","array","undefined"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG,EAAZ;AAAgBC,EAAAA,WAAW,GAAG;AAA9B,CAAD,KAAwCC,gBAAgB,IAAI;AACrF,QAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAClCS,IAAAA,eAAe,GAAG;AAChB,aAAOJ,OAAP;AACD;;AAEDK,IAAAA,MAAM,GAAG;AACP,aAAO,oBAAC,gBAAD,QAAmB,KAAKC,KAAL,CAAWC,QAA9B,CAAP;AACD;;AAPiC;;AASpCJ,EAAAA,WAAW,CAACK,SAAZ,GAAwB;AACtBD,IAAAA,QAAQ,EAAEX,SAAS,CAACa;AADE,GAAxB;AAGAN,EAAAA,WAAW,CAACO,YAAZ,GAA2B;AACzBH,IAAAA,QAAQ,EAAE;AADe,GAA3B;AAGAJ,EAAAA,WAAW,CAACD,gBAAZ,GAA+BA,gBAA/B;AACAC,EAAAA,WAAW,CAACQ,iBAAZ,GAAgCV,WAAhC;AAEA,SAAOE,WAAP;AACD,CApBM;AAsBP,OAAO,MAAMS,aAAa,GAAGb,WAAW,CAAC;AACvCC,EAAAA,OAAO,EAAE;AACPa,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,GAAG,EAAE,IAFC;AAGNC,QAAAA,IAAI,EAAE;AAHA;AADC;AAFJ,GAD8B;AAWvCjB,EAAAA,WAAW,EAAE;AAAEY,IAAAA,OAAO,EAAEjB,SAAS,CAACuB,GAArB;AAA0BL,IAAAA,SAAS,EAAElB,SAAS,CAACuB;AAA/C;AAX0B,CAAD,CAAX,CAY1B,OAZ0B,CAAtB;;AAcP,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcR,EAAAA;AAAd,CAAD,KACzB,oBAAC,YAAD,CAAc,QAAd;AAAuB,EAAA,KAAK,EAAE;AAAES,IAAAA,gBAAgB,EAAED;AAApB;AAA9B,GACE,oBAAC,aAAD,QACE,oBAAC,WAAD;AAAa,EAAA,UAAU,EAAER;AAAzB,EADF,CADF,CADF;;AAQAO,kBAAkB,CAACZ,SAAnB,GAA+B;AAC7Ba,EAAAA,UAAU,EAAEzB,SAAS,CAAC2B,IADO;AAE7BV,EAAAA,OAAO,EAAEjB,SAAS,CAAC4B;AAFU,CAA/B;AAKAJ,kBAAkB,CAACV,YAAnB,GAAkC;AAChCW,EAAAA,UAAU,EAAE,MAAMI,SADc;AAEhCZ,EAAAA,OAAO,EAAE;AAFuB,CAAlC;AAKA,eAAeO,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableContext } from '../components/Table/Table';\nimport { TableHeader } from '../components/Table';\n\nexport const withContext = ({ context = {}, contextType = {} }) => WrappedComponent => {\n  class WithContext extends Component {\n    getChildContext() {\n      return context;\n    }\n\n    render() {\n      return <WrappedComponent>{this.props.children}</WrappedComponent>;\n    }\n  }\n  WithContext.propTypes = {\n    children: PropTypes.node\n  };\n  WithContext.defaultProps = {\n    children: null\n  };\n  WithContext.WrappedComponent = WrappedComponent;\n  WithContext.childContextTypes = contextType;\n\n  return WithContext;\n};\n\nexport const TableProvider = withContext({\n  context: {\n    columns: [],\n    renderers: {\n      header: {\n        wrapper: 'thead',\n        row: 'tr',\n        cell: 'th'\n      }\n    }\n  },\n  contextType: { columns: PropTypes.any, renderers: PropTypes.any }\n})('table');\n\nconst MockedTableChanges = ({ updateFunc, columns }) => (\n  <TableContext.Provider value={{ updateHeaderData: updateFunc }}>\n    <TableProvider>\n      <TableHeader headerRows={columns} />\n    </TableProvider>\n  </TableContext.Provider>\n);\n\nMockedTableChanges.propTypes = {\n  updateFunc: PropTypes.func,\n  columns: PropTypes.array\n};\n\nMockedTableChanges.defaultProps = {\n  updateFunc: () => undefined,\n  columns: []\n};\n\nexport default MockedTableChanges;\n"],"file":"MockedTableChanges.js"}