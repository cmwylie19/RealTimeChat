{"version":3,"sources":["../../../../src/components/Modal/Modal.test.tsx"],"names":["jest","spyOn","document","body","props","title","onClose","fn","isOpen","children","test","view","update","expect","createElement","toBeCalledWith","toHaveBeenCalledTimes","mock","addEventListener","calls","event","handler","toBe","keyCode","KEY_CODES","ESCAPE_KEY","toBeCalled","not","first","second","instance","id","className","toContain","styles","backdropOpen","setProps","exists","toBeTruthy","showClose","toBeFalsy"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { css } from '../../../../react-styles/dist/js';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\n\nimport { Modal } from './Modal';\n\njest.spyOn(document, 'createElement');\njest.spyOn(document.body, 'addEventListener');\n\nconst props = {\n  title: 'Modal',\n  onClose: jest.fn(),\n  isOpen: false,\n  children: 'modal content'\n};\n\ntest('Modal creates a container element once for div', () => {\n  const view = shallow(<Modal {...props} />);\n  view.update();\n  expect(document.createElement).toBeCalledWith('div');\n  expect(document.createElement).toHaveBeenCalledTimes(1);\n});\n\ntest('modal closes with escape', () => {\n  shallow(<Modal {...props} isOpen appendTo={document.body} />);\n  const mock: any = (document.body.addEventListener as any).mock;\n  const [event, handler] = mock.calls[0];\n  expect(event).toBe('keydown');\n  handler({ keyCode: KEY_CODES.ESCAPE_KEY });\n  expect(props.onClose).toBeCalled();\n});\n\ntest('modal does not call onClose for esc key if it is not open', () => {\n  shallow(<Modal {...props} />);\n  const mock: any = (document.body.addEventListener as any).mock;\n  const [event, handler] = mock.calls[0];\n  expect(event).toBe('keydown');\n  handler({ keyCode: KEY_CODES.ESCAPE_KEY });\n  expect(props.onClose).not.toBeCalled();\n});\n\ntest('Each modal is given a new id', () => {\n  const first = shallow(<Modal {...props} />);\n  const second = shallow(<Modal {...props} />);\n  expect((first.instance() as any).id).not.toBe((second.instance() as any).id);\n});\n\ntest('modal removes body backdropOpen class when removed', () => {\n  const view = shallow(<Modal {...props} isOpen />);\n  view.update();\n  expect(document.body.className).toContain(css(styles.backdropOpen));\n  view.setProps({ isOpen: false });\n  view.update();\n  expect(document.body.className).not.toContain(css(styles.backdropOpen));\n});\n\ntest('modal shows/hides the close button based on showClose (default true)', () => {\n  const view = mount(<Modal {...props} isOpen />);\n  view.update();\n  expect(view.exists('.pf-c-modal-box .pf-c-button')).toBeTruthy();\n  view.setProps({ showClose: false });\n  view.update();\n  expect(view.exists('.pf-c-modal-box .pf-c-button')).toBeFalsy();\n});\n"],"file":"Modal.test.js"}