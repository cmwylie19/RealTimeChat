{"version":3,"sources":["../../../../src/helpers/GenerateId/GenerateId.js"],"names":["React","PropTypes","currentId","propTypes","prefix","string","children","func","isRequired","GenerateId","Component","props","render","id"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAEA,MAAMC,SAAS,GAAG;AAChB;AACAC,EAAAA,MAAM,EAAEH,SAAS,CAACI,MAFF;;AAGhB;AACAC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC;AAJT,CAAlB;;AAOA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAAA;AAAA;;AAAA,gCAKjC,GAAE,KAAKC,KAAL,CAAWP,MAAO,GAAEF,SAAS,EAAG,EALD;AAAA;;AAOvCU,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKD,KAAL,CAAWL,QAAX,CAAoB,KAAKO,EAAzB,CAAP;AACD;;AATsC;;gBAAnCJ,U,kBACkB;AACpBL,EAAAA,MAAM,EAAE;AADY,C;;gBADlBK,U,eAIeN,S;;AAQrB,eAAeM,UAAf","sourcesContent":["/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n *\n * Component.propTypes = {\n *  id: PropTypes.string\n * }\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nlet currentId = 0;\n\nconst propTypes = {\n  /** String to prefix the random id with */\n  prefix: PropTypes.string,\n  /** Component to be rendered with the generated id */\n  children: PropTypes.func.isRequired\n};\n\nclass GenerateId extends React.Component {\n  static defaultProps = {\n    prefix: 'pf-random-id-'\n  };\n  static propTypes = propTypes;\n  id = `${this.props.prefix}${currentId++}`;\n\n  render() {\n    return this.props.children(this.id);\n  }\n}\n\nexport default GenerateId;\n"],"file":"GenerateId.js"}