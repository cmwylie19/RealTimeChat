{"version":3,"sources":["../../../../src/components/Table/SortColumn.tsx"],"names":["SortColumn","children","className","isSortedBy","onSort","sortDirection","props","SortedByIcon","SortByDirection","asc","LongArrowAltUpIcon","LongArrowAltDownIcon","ArrowsAltVIcon","event","styles","tableSortIndicator"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAUO,IAAMA,UAAoD,GAAG,SAAvDA,UAAuD,OAO5C;AAAA,2BANtBC,QAMsB;AAAA,MANtBA,QAMsB,8BANX,IAMW;AAAA,4BALtBC,SAKsB;AAAA,MALtBA,SAKsB,+BALV,EAKU;AAAA,6BAJtBC,UAIsB;AAAA,MAJtBA,UAIsB,gCAJT,KAIS;AAAA,yBAHtBC,MAGsB;AAAA,MAHtBA,MAGsB,4BAHb,IAGa;AAAA,gCAFtBC,aAEsB;AAAA,MAFtBA,aAEsB,mCAFN,EAEM;AAAA,MADnBC,KACmB;;AACtB,MAAIC,YAAJ;;AACA,MAAIJ,UAAJ,EAAgB;AACdI,IAAAA,YAAY,GAAGF,aAAa,KAAKG,uBAAgBC,GAAlC,GAAwCC,8BAAxC,GAA6DC,gCAA5E;AACD,GAFD,MAEO;AACLJ,IAAAA,YAAY,GAAGK,0BAAf;AACD;;AACD,SACE,2CAAYN,KAAZ;AAAmB,IAAA,SAAS,EAAE,sBAAIJ,SAAJ,CAA9B;AAA8C,IAAA,OAAO,EAAE,iBAACW,KAAD;AAAA,aAAWT,MAAM,IAAIA,MAAM,CAACS,KAAD,CAA3B;AAAA;AAAvD,MACGZ,QADH,EAEE;AAAM,IAAA,SAAS,EAAE,sBAAIa,kBAAOC,kBAAX;AAAjB,KACE,oBAAC,YAAD,OADF,CAFF,CADF;AAQD,CAtBM;;;;AAPLd,EAAAA,Q;AACAC,EAAAA,S;AACAC,EAAAA,U;AACAC,EAAAA,M;AACAC,EAAAA,a","sourcesContent":["import * as React from 'react';\nimport { LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortByDirection } from './Table';\n\nexport interface SortColumnProps extends React.HTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode;\n  className?: string;\n  isSortedBy?: boolean;\n  onSort?: Function;\n  sortDirection?: string;\n}\n\nexport const SortColumn: React.FunctionComponent<SortColumnProps> = ({\n  children = null,\n  className = '',\n  isSortedBy = false,\n  onSort = null,\n  sortDirection = '',\n  ...props\n}: SortColumnProps ) => {\n  let SortedByIcon;\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n  return (\n    <button {...props} className={css(className)} onClick={(event) => onSort && onSort(event)}>\n      {children}\n      <span className={css(styles.tableSortIndicator)}>\n        <SortedByIcon />\n      </span>\n    </button>\n  );\n};\n"],"file":"SortColumn.js"}