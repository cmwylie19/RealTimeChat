{"version":3,"sources":["../../../../src/components/ChartPoint/path-helpers.ts"],"names":["PathHelpers","circle","x","y","size","square","baseSize","x0","y1","distance","diamond","length","Math","sqrt","triangleDown","height","x1","y0","triangleUp","plus","minus","lineHeight","star","angle","PI","range","starCoords","map","index","sin","cos","join","dash","padding","threshold"],"mappings":"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","sourcesContent":["export const PathHelpers = {\n  circle(x: number, y: number, size: number) {\n    return `M ${x}, ${y}\n      m ${-size}, 0\n      a ${size}, ${size} 0 1,0 ${size * 2},0\n      a ${size}, ${size} 0 1,0 ${-size * 2},0`;\n  },\n\n  square(x: number, y: number, size: number) {\n    const baseSize = 0.87 * size;\n    const x0 = x - baseSize;\n    const y1 = y + baseSize;\n    const distance = x + baseSize - x0;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${distance}\n      h-${distance}\n      z`;\n  },\n\n  diamond(x: number, y: number, size: number) {\n    const baseSize = 0.87 * size;\n    const length = Math.sqrt(2 * (baseSize * baseSize));\n    return `M ${x}, ${y + length}\n      l ${length}, -${length}\n      l -${length}, -${length}\n      l -${length}, ${length}\n      l ${length}, ${length}\n      z`;\n  },\n\n  triangleDown(x: number, y: number, size: number) {\n    const height = (size / 2) * Math.sqrt(3);\n    const x0 = x - size;\n    const x1 = x + size;\n    const y0 = y - size;\n    const y1 = y + height;\n    return `M ${x0}, ${y0}\n      L ${x1}, ${y0}\n      L ${x}, ${y1}\n      z`;\n  },\n\n  triangleUp(x: number, y: number, size: number) {\n    const height = (size / 2) * Math.sqrt(3);\n    const x0 = x - size;\n    const x1 = x + size;\n    const y0 = y - height;\n    const y1 = y + size;\n    return `M ${x0}, ${y1}\n      L ${x1}, ${y1}\n      L ${x}, ${y0}\n      z`;\n  },\n\n  plus(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const distance = baseSize / 1.5;\n    return `\n      M ${x - distance / 2}, ${y + baseSize}\n      v-${distance}\n      h-${distance}\n      v-${distance}\n      h${distance}\n      v-${distance}\n      h${distance}\n      v${distance}\n      h${distance}\n      v${distance}\n      h-${distance}\n      v${distance}\n      z`;\n  },\n\n  minus(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = x + baseSize - x0;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  },\n\n  star(x: number, y: number, size: number) {\n    const baseSize = 1.35 * size;\n    const angle = Math.PI / 5;\n    const range = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const starCoords = range.map((index) => {\n      const length = index % 2 === 0 ? baseSize : baseSize / 2;\n      return `${length * Math.sin(angle * (index + 1)) + x},\n        ${length * Math.cos(angle * (index + 1)) + y}`;\n    });\n    return `M ${starCoords.join('L')} z`;\n  },\n\n  dash(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = (x + baseSize - x0) * 0.3;\n    const padding = distance / 3;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance * 2 + padding * 2}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  },\n\n  threshold(x: number, y: number, size: number) {\n    const baseSize = 1.1 * size;\n    const lineHeight = baseSize - baseSize * 0.3;\n    const x0 = x - baseSize;\n    const y1 = y + lineHeight / 2;\n    const distance = (x + baseSize - x0) * 0.5;\n    const padding = distance / 3;\n    return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n  }\n};\n"],"file":"path-helpers.js"}