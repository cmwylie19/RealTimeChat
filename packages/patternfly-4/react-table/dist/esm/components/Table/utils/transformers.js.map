{"version":3,"sources":["../../../../../src/components/Table/utils/transformers.tsx"],"names":["selectable","sortable","cellActions","cellWidth","cellHeightAuto","wrappable","textCenter","collapsible","expandedRow","expandable","compoundExpand","headerCol","classNames","Visibility","emptyTD","scope","component","scopeColTransformer","emptyCol","label","parentId","_value","rowData","parent","mapProps","_label","property","props"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,QAAqD,0BAArD;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,yBAAvC;;AAIA,MAAMC,OAAO,GAAG,OAAO;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAP,CAAhB;;AAKA,MAAMC,mBAAmB,GAAG,OAAO;AACjCF,EAAAA,KAAK,EAAE;AAD0B,CAAP,CAA5B;;AAIA,MAAMG,QAAQ,GAAIC,KAAD,sBACXA,KAAK,GAAG,EAAH,GAAQ;AAAEJ,EAAAA,KAAK,EAAE;AAAT,CADF,CAAjB;;AAIA,MAAMK,QAAQ,GAAG,CAACC,MAAD,EAA8B;AAAEC,EAAAA;AAAF,CAA9B,MAAuD;AACtEF,EAAAA,QAAQ,EAAEE,OAAO,CAACC;AADoD,CAAvD,CAAjB;;AAIA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAA8B;AAAEC,EAAAA,QAAF;AAAYJ,EAAAA;AAAZ,CAA9B,uBACXA,OAAO,CAACI,QAAD,CAAP,IAAqBJ,OAAO,CAACI,QAAD,CAAP,CAAkBC,KAD5B,CAAjB;;AAIA,SAASb,OAAT,EAAkBG,mBAAlB,EAAuCC,QAAvC,EAAiDE,QAAjD,EAA2DI,QAA3D","sourcesContent":["export { selectable } from './decorators/selectable';\nexport { sortable } from './decorators/sortable';\nexport { cellActions } from './decorators/cellActions';\nexport { cellWidth } from './decorators/cellWidth';\nexport { cellHeightAuto } from './decorators/cellHeightAuto';\nexport { wrappable } from './decorators/wrappable';\nexport { textCenter } from './decorators/textCenter';\nexport { collapsible, expandedRow, expandable } from './decorators/collapsible';\nexport { compoundExpand } from './decorators/compoundExpand';\nexport { headerCol } from './decorators/headerCol';\nexport { classNames, Visibility } from './decorators/classNames';\n\nimport { IFormatterValueType, IExtra } from '../Table';\n\nconst emptyTD = () => ({\n  scope: '',\n  component: 'td'\n});\n\nconst scopeColTransformer = () => ({\n  scope: 'col'\n});\n\nconst emptyCol = (label: IFormatterValueType) => ({\n  ...(label ? {} : { scope: '' })\n});\n\nconst parentId = (_value: IFormatterValueType, { rowData }: IExtra) => ({\n  parentId: rowData.parent\n});\n\nconst mapProps = (_label: IFormatterValueType, { property, rowData }: IExtra) => ({\n  ...(rowData[property] && rowData[property].props)\n});\n\nexport { emptyTD, scopeColTransformer, emptyCol, parentId, mapProps };\n"],"file":"transformers.js"}