{"version":3,"sources":["../../../../src/components/TopologySideBar/TopologySideBar.test.tsx"],"names":["describe","test","view","expect","toMatchSnapshot","find","length","toBe","mockClose","jest","fn","simulate","toBeCalled"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAM;AACtD,QAAMC,IAAI,GAAG,mBACX,oBAAC,sBAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAA2C,MAAA,IAAI,MAA/C;AAAgD,MAAA,MAAM,EAAE;AAAM,QAAA,EAAE,EAAC;AAAT;AAAxD,OACE;AAAK,MAAA,EAAE,EAAC;AAAR,MADF,CADW,CAAb;AAKAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,+CAAV,EAA2DC,MAA5D,CAAN,CAA0EC,IAA1E,CAA+E,CAA/E;AACD,GARG,CAAJ;AAUAN,EAAAA,IAAI,CAAC,oDAAD,EAAuD,YAAM;AAC/D,QAAMO,SAAS,GAAGC,IAAI,CAACC,EAAL,EAAlB;AACA,QAAMR,IAAI,GAAG,mBACX,oBAAC,sBAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAA2C,MAAA,IAAI,MAA/C;AAAgD,MAAA,OAAO,EAAEM;AAAzD,YAEE;AAAK,MAAA,EAAE,EAAC;AAAR,MAFF,CADW,CAAb;AAMAL,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAU,sCAAV,EAAkDM,QAAlD,CAA2D,OAA3D;AACAR,IAAAA,MAAM,CAACK,SAAD,CAAN,CAAkBI,UAAlB;AACD,GAXG,CAAJ;AAaAX,EAAAA,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC9C,QAAMC,IAAI,GAAG,mBACX,oBAAC,sBAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAA2C,MAAA,IAAI,EAAE,KAAjD;AAAwD,MAAA,MAAM,EAAE;AAAM,QAAA,EAAE,EAAC;AAAT;AAAhE,YAEE;AAAK,MAAA,EAAE,EAAC;AAAR,MAFF,CADW,CAAb;AAMAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACAD,IAAAA,MAAM,CAACD,IAAI,CAACG,IAAL,CAAU,cAAV,EAA0BC,MAA3B,CAAN,CAAyCC,IAAzC,CAA8C,CAA9C;AACD,GATG,CAAJ;AAUD,CAlCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { mount } from 'enzyme';\nimport { TopologySideBar } from './index';\n\ndescribe('TopologySideBar', () => {\n  test('should display topology sidebar correctly', () => {\n    const view = mount(\n      <TopologySideBar className=\"my-test-class\" show header={<span id=\"test-header-id\">Header</span>}>\n        <div id=\"test-canvas\" />\n      </TopologySideBar>\n    );\n    expect(view).toMatchSnapshot();\n    expect(view.find('.pf-topology-side-bar__header #test-header-id').length).toBe(1);\n  });\n\n  test('should display topology sidebar w/ close correctly', () => {\n    const mockClose = jest.fn();\n    const view = mount(\n      <TopologySideBar className=\"my-test-class\" show onClose={mockClose}>\n      >\n        <div id=\"test-canvas\" />\n      </TopologySideBar>\n    );\n    expect(view).toMatchSnapshot();\n    view.find('button.pf-topology-side-bar__dismiss').simulate('click');\n    expect(mockClose).toBeCalled();\n  });\n\n  test('should hide the sidebar correctly', () => {\n    const view = mount(\n      <TopologySideBar className=\"my-test-class\" show={false} header={<span id=\"test-header-id\">Header</span>}>\n        >\n        <div id=\"test-canvas\" />\n      </TopologySideBar>\n    );\n    expect(view).toMatchSnapshot();\n    expect(view.find('#test-canvas').length).toBe(0);\n  });\n});\n"],"file":"TopologySideBar.test.js"}