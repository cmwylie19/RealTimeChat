{"version":3,"sources":["../../../esm/components/ClipboardCopy/ClipboardCopyButton.test.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","jest","fn","test","view","React","createElement","ClipboardCopyButton","expect","toMatchSnapshot","onclick","onClick","find","simulate","toBeCalled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,WAASA,QAAT,GAAoB;AAAEA,IAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,YAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,aAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,cAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,YAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,aAAOL,MAAP;AAAgB,KAA5P;;AAA8P,WAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAK7T,QAAMQ,KAAK,GAAG;AACZ,UAAM,OADM;AAEZ,cAAU,YAFE;AAGZ,iBAAa,mBAHD;AAIZ,eAAWC,IAAI,CAACC,EAAL,EAJC;AAKZ,iBAAa,IALD;AAMZ,kBAAc,IANF;AAOZ,gBAAY,OAPA;AAQZ,gBAAY,OARA;AASZ,kBAAc;AATF,GAAd;AAWAC,EAAAA,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAC/B,UAAMC,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyCP,KAAzC,EAAgD,SAAhD,CAAR,CAAb;AACAQ,IAAAA,MAAM,CAACJ,IAAD,CAAN,CAAaK,eAAb;AACD,GAHG,CAAJ;AAIAN,EAAAA,IAAI,CAAC,qBAAD,EAAwB,MAAM;AAChC,UAAMO,OAAO,GAAGT,IAAI,CAACC,EAAL,EAAhB;AACA,UAAME,IAAI,GAAG,qBAAQC,gBAAMC,aAAN,CAAoBC,wCAApB,EAAyCpB,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAChFW,MAAAA,OAAO,EAAED;AADuE,KAAZ,CAAjD,EAEjB,mBAFiB,CAAR,CAAb;AAGAN,IAAAA,IAAI,CAACQ,IAAL,CAAU,QAAV,EAAoBC,QAApB,CAA6B,OAA7B;AACAL,IAAAA,MAAM,CAACE,OAAD,CAAN,CAAgBI,UAAhB;AACD,GAPG,CAAJ","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nconst props = {\n  \"id\": 'my-id',\n  \"textId\": 'my-text-id',\n  \"className\": 'fancy-copy-button',\n  \"onClick\": jest.fn(),\n  \"exitDelay\": 1000,\n  \"entryDelay\": 2000,\n  \"maxWidth\": '500px',\n  \"position\": 'right',\n  'aria-label': 'click this button to copy text'\n};\ntest('copy button render', () => {\n  const view = shallow(React.createElement(ClipboardCopyButton, props, \"Copy Me\"));\n  expect(view).toMatchSnapshot();\n});\ntest('copy button onClick', () => {\n  const onclick = jest.fn();\n  const view = shallow(React.createElement(ClipboardCopyButton, _extends({}, props, {\n    onClick: onclick\n  }), \"Copy to Clipboard\"));\n  view.find('button').simulate('click');\n  expect(onclick).toBeCalled();\n});\n//# sourceMappingURL=ClipboardCopyButton.test.js.map"],"file":"ClipboardCopyButton.test.js"}