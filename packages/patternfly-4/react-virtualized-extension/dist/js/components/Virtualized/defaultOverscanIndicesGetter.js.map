{"version":3,"sources":["../../../../src/components/Virtualized/defaultOverscanIndicesGetter.ts"],"names":["SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_VERTICAL","defaultOverscanIndicesGetter","cellCount","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","Math","max","overscanStopIndex","min"],"mappings":";;;;;;;AAEO,IAAMA,yBAAyB,GAAG,CAAC,CAAnC;;AACA,IAAMC,wBAAwB,GAAG,CAAjC;;AAEA,IAAMC,2BAA2B,GAAG,YAApC;;AACA,IAAMC,yBAAyB,GAAG,UAAlC;AAEP;;;;;;;AAKe,SAASC,4BAAT,OAMkC;AAAA,MAL/CC,SAK+C,QAL/CA,SAK+C;AAAA,MAJ/CC,kBAI+C,QAJ/CA,kBAI+C;AAAA,MAH/CC,eAG+C,QAH/CA,eAG+C;AAAA,MAF/CC,UAE+C,QAF/CA,UAE+C;AAAA,MAD/CC,SAC+C,QAD/CA,SAC+C;;AAC/C,MAAIF,eAAe,KAAKN,wBAAxB,EAAkD;AAChD,WAAO;AACLS,MAAAA,kBAAkB,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,UAAZ,CADf;AAELK,MAAAA,iBAAiB,EAAEF,IAAI,CAACG,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAS,GAAGH,kBAApC;AAFd,KAAP;AAID;;AACD,SAAO;AACLI,IAAAA,kBAAkB,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,UAAU,GAAGF,kBAAzB,CADf;AAELO,IAAAA,iBAAiB,EAAEF,IAAI,CAACG,GAAL,CAAST,SAAS,GAAG,CAArB,EAAwBI,SAAxB;AAFd,GAAP;AAID","sourcesContent":["import { OverscanIndicesGetterParams, OverscanIndices } from './types';\n\nexport const SCROLL_DIRECTION_BACKWARD = -1;\nexport const SCROLL_DIRECTION_FORWARD = 1;\n\nexport const SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport const SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter({\n  cellCount,\n  overscanCellsCount,\n  scrollDirection,\n  startIndex,\n  stopIndex\n}: OverscanIndicesGetterParams): OverscanIndices {\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  }\n  return {\n    overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n    overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n  };\n}\n"],"file":"defaultOverscanIndicesGetter.js"}