{"version":3,"sources":["../../../../esm/components/Table/utils/headerUtils.test.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","describe","test","collapsibleTransfroms","onCollapse","undefined","expect","cell","formatters","toHaveLength","name","toBe","transforms","extraParams","toBeDefined","header","find","transform","selectableTransforms","onSelect","canSelectAll","actionsTransforms","actions","title","toEqual","areActionsDisabled","actionResolver","cells","mixed","oneCell","property","label","result","someData","toMatchObject","testFunc","formatter","cellTransforms","cellFormatters","rows","parent","children","mappedRows","isOpen","somethig"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { calculateColumns, mapOpenedRows } from './headerUtils';\ndescribe('headerUtils', () => {\n  describe('calculateColumns', () => {\n    test('collapsibleTransfroms', () => {\n      const collapsibleTransfroms = calculateColumns(['Some'], {\n        onCollapse: () => undefined\n      });\n      expect(collapsibleTransfroms[0].cell.formatters).toHaveLength(1);\n      expect(collapsibleTransfroms[0].cell.formatters[0].name).toBe('defaultTitle');\n      expect(collapsibleTransfroms[0].cell.transforms).toHaveLength(2);\n      expect(collapsibleTransfroms[0].extraParams.onCollapse).toBeDefined();\n      expect(collapsibleTransfroms[0].header.transforms).toHaveLength(3);\n      expect(collapsibleTransfroms[1].cell.transforms).toHaveLength(3);\n      expect(collapsibleTransfroms[1].cell.transforms.find(transform => transform.name === 'parentId')).toBeDefined();\n      expect(collapsibleTransfroms[1].cell.transforms.find(transform => transform.name === 'expandedRowFormatter')).toBeDefined();\n    });\n    test('selectableTransforms', () => {\n      const selectableTransforms = calculateColumns([], {\n        onSelect: () => undefined,\n        canSelectAll: true\n      });\n      expect(selectableTransforms[0].cell.formatters).toHaveLength(1);\n      expect(selectableTransforms[0].cell.formatters[0].name).toBe('defaultTitle');\n      expect(selectableTransforms[0].cell.transforms).toHaveLength(2);\n      expect(selectableTransforms[0].extraParams.onSelect).toBeDefined();\n      expect(selectableTransforms[0].header.transforms).toHaveLength(3);\n    });\n    test('basicActionsTransforms', () => {\n      const actionsTransforms = calculateColumns([], {\n        actions: [{\n          title: 'some'\n        }]\n      });\n      expect(actionsTransforms[0].cell.formatters).toHaveLength(1);\n      expect(actionsTransforms[0].cell.formatters[0].name).toBe('defaultTitle');\n      expect(actionsTransforms[0].cell.transforms).toHaveLength(2);\n      expect(actionsTransforms[0].extraParams).toEqual({\n        actions: [{\n          title: 'some'\n        }]\n      });\n      expect(actionsTransforms[0].header.transforms).toHaveLength(3);\n    });\n    test('actionsTransforms', () => {\n      const actionsTransforms = calculateColumns([], {\n        areActionsDisabled: () => false,\n        actionResolver: () => [{\n          title: 'some'\n        }]\n      });\n      expect(actionsTransforms[0].cell.formatters).toHaveLength(1);\n      expect(actionsTransforms[0].cell.formatters[0].name).toBe('defaultTitle');\n      expect(actionsTransforms[0].extraParams.areActionsDisabled).toBeDefined();\n      expect(actionsTransforms[0].extraParams.actionResolver).toBeDefined();\n      expect(actionsTransforms[0].cell.transforms).toHaveLength(2);\n      expect(actionsTransforms[0].header.transforms).toHaveLength(3);\n    });\n    test('emptyTransforms', () => {\n      const actionsTransforms = calculateColumns([], {});\n      expect(actionsTransforms).toHaveLength(0);\n    });\n    describe('mixed strings and objects', () => {\n      const cells = ['first', {\n        title: 'second'\n      }, 'third', {\n        title: 'some'\n      }];\n      const mixed = calculateColumns(cells, {});\n      cells.forEach((oneCell, key) => {\n        test(`${oneCell}`, () => {\n          expect(mixed[key].property).toBe(oneCell.title || oneCell);\n          expect(mixed[key].header.label).toBe(oneCell.title || oneCell);\n          expect(mixed[key].header.transforms).toHaveLength(2);\n          expect(mixed[key].cell.transforms).toHaveLength(1);\n          expect(mixed[key].cell.formatters).toHaveLength(1);\n        });\n      });\n    });\n    test('correct property', () => {\n      expect(calculateColumns(['some'], {})[0].property).toBe('some');\n      expect(calculateColumns(['some with space'], {})[0].property).toBe('some-with-space');\n      expect(calculateColumns([''], {})[0].property).toBe('column-0');\n    });\n    describe('generateHeader', () => {\n      test('additional data', () => {\n        const result = calculateColumns([{\n          header: {\n            someData: 'test'\n          }\n        }], {});\n        expect(result[0].header).toMatchObject({\n          someData: 'test'\n        });\n      });\n      test('custom functions', () => {\n        const testFunc = () => undefined;\n\n        const result = calculateColumns([{\n          title: '',\n          transforms: [testFunc],\n          formatters: [testFunc]\n        }], {});\n        expect(result[0].header.formatters.find(formatter => formatter.name === 'testFunc')).toBeDefined();\n        expect(result[0].header.transforms.find(transform => transform.name === 'testFunc')).toBeDefined();\n      });\n      test('custom functions in header', () => {\n        const testFunc = () => undefined;\n\n        const result = calculateColumns([{\n          title: '',\n          header: {\n            transforms: [testFunc],\n            formatters: [testFunc]\n          }\n        }], {});\n        expect(result[0].header.formatters.find(formatter => formatter.name === 'testFunc')).toBeDefined();\n        expect(result[0].header.transforms.find(transform => transform.name === 'testFunc')).toBeDefined();\n      });\n    });\n    describe('generateCell', () => {\n      test('additional data', () => {\n        const result = calculateColumns([{\n          cell: {\n            someData: 'test'\n          }\n        }], {});\n        expect(result[0].cell).toMatchObject({\n          someData: 'test'\n        });\n      });\n      test('custom functions', () => {\n        const testFunc = () => undefined;\n\n        const result = calculateColumns([{\n          title: '',\n          cellTransforms: [testFunc],\n          cellFormatters: [testFunc]\n        }], {});\n        expect(result[0].cell.formatters.find(formatter => formatter.name === 'testFunc')).toBeDefined();\n        expect(result[0].cell.transforms.find(transform => transform.name === 'testFunc')).toBeDefined();\n      });\n      test('custom functions in header', () => {\n        const testFunc = () => undefined;\n\n        const result = calculateColumns([{\n          title: '',\n          cell: {\n            transforms: [testFunc],\n            formatters: [testFunc]\n          }\n        }], {});\n        expect(result[0].cell.formatters.find(formatter => formatter.name === 'testFunc')).toBeDefined();\n        expect(result[0].cell.transforms.find(transform => transform.name === 'testFunc')).toBeDefined();\n      });\n    });\n  });\n  describe('mapOpenedRows', () => {\n    test('flat structure', () => {\n      const rows = [{}, {\n        parent: 0\n      }, {}, {\n        parent: 2\n      }];\n      const children = ['one', 'two', 'three', 'four'];\n      const mappedRows = mapOpenedRows(rows, children);\n      expect(mappedRows).toHaveLength(2);\n      expect(mappedRows[0].rows).toHaveLength(2);\n      expect(mappedRows[0]).toMatchObject({\n        rows: ['one', 'two']\n      });\n    });\n    test('nested children', () => {\n      const rows = [{}, {\n        parent: 0\n      }, {\n        parent: 1\n      }, {\n        parent: 2\n      }];\n      const children = ['one', 'two', 'three', 'four'];\n      const mappedRows = mapOpenedRows(rows, children);\n      expect(mappedRows).toHaveLength(1);\n      expect(mappedRows[0].rows).toHaveLength(4);\n      expect(mappedRows[0]).toMatchObject({\n        rows: children\n      });\n    });\n    test('no parent', () => {\n      const rows = [{\n        parent: 'something'\n      }, {\n        parent: 0\n      }, {}, {\n        parent: 2\n      }];\n      const children = ['one', 'two', 'three', 'four'];\n      const mappedRows = mapOpenedRows(rows, children);\n      expect(mappedRows).toHaveLength(1);\n      expect(mappedRows[0].rows).toHaveLength(2);\n      expect(mappedRows[0]).toMatchObject({\n        rows: ['three', 'four']\n      });\n    });\n    test('should add rest props', () => {\n      const rows = [{\n        isOpen: true,\n        somethig: 'other'\n      }, {\n        parent: 0\n      }, {\n        isOpen: false\n      }, {\n        parent: 2\n      }];\n      const children = ['one', 'two', 'three', 'four'];\n      const mappedRows = mapOpenedRows(rows, children);\n      expect(mappedRows).toHaveLength(2);\n      expect(mappedRows[0].rows).toHaveLength(2);\n      expect(mappedRows[0]).toMatchObject(_objectSpread({}, rows[0], {\n        rows: ['one', 'two']\n      }));\n    });\n  });\n});\n//# sourceMappingURL=headerUtils.test.js.map"],"file":"headerUtils.test.js"}