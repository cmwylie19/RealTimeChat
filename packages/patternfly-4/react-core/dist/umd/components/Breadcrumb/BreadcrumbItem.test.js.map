{"version":3,"sources":["../../../esm/components/Breadcrumb/BreadcrumbItem.test.js"],"names":["React","describe","test","view","createElement","BreadcrumbItem","expect","toMatchSnapshot","className","id","isActive","to","target"],"mappings":";;;;;;;;;;;;;;;MAAYA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGZC,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzCC,IAAAA,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjD,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC,IAApC,EAA0C,MAA1C,CAAR,CAAb;AACAC,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KAHG,CAAJ;AAIAL,IAAAA,IAAI,CAAC,6CAAD,EAAgD,MAAM;AACxD,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC;AACvDG,QAAAA,SAAS,EAAE;AAD4C,OAApC,EAElB,MAFkB,CAAR,CAAb;AAGAF,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KALG,CAAJ;AAMAL,IAAAA,IAAI,CAAC,sCAAD,EAAyC,MAAM;AACjD,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC;AACvDI,QAAAA,EAAE,EAAE;AADmD,OAApC,EAElB,MAFkB,CAAR,CAAb;AAGAH,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KALG,CAAJ;AAMAL,IAAAA,IAAI,CAAC,qCAAD,EAAwC,MAAM;AAChD,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC;AACvDK,QAAAA,QAAQ,EAAE;AAD6C,OAApC,EAElB,MAFkB,CAAR,CAAb;AAGAJ,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KALG,CAAJ;AAMAL,IAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC;AACvDM,QAAAA,EAAE,EAAE;AADmD,OAApC,EAElB,MAFkB,CAAR,CAAb;AAGAL,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KALG,CAAJ;AAMAL,IAAAA,IAAI,CAAC,0CAAD,EAA6C,MAAM;AACrD,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC;AACvDO,QAAAA,MAAM,EAAE;AAD+C,OAApC,EAElB,MAFkB,CAAR,CAAb;AAGAN,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KALG,CAAJ;AAMAL,IAAAA,IAAI,CAAC,kDAAD,EAAqD,MAAM;AAC7D,YAAMC,IAAI,GAAG,qBAAQH,KAAK,CAACI,aAAN,CAAoBC,8BAApB,EAAoC,IAApC,EAA0CL,KAAK,CAACI,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,QAAhC,CAA1C,CAAR,CAAb;AACAE,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,eAAb;AACD,KAHG,CAAJ;AAID,GAvCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { shallow } from 'enzyme';\ndescribe('BreadcrumbItem component', () => {\n  test('should render default breadcrumbItem', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, null, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render breadcrumbItem with className', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, {\n      className: \"Class\"\n    }, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render breadcrumbItem with id', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, {\n      id: \"Item 1\"\n    }, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render active breadcrumbItem', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, {\n      isActive: true\n    }, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render link breadcrumbItem', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, {\n      to: \"/somewhere\"\n    }, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render breadcrumbItem with target', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, {\n      target: \"/somewhere\"\n    }, \"Item\"));\n    expect(view).toMatchSnapshot();\n  });\n  test('should render breadcrumbItem with custom element', () => {\n    const view = shallow(React.createElement(BreadcrumbItem, null, React.createElement(\"h1\", null, \"Header\")));\n    expect(view).toMatchSnapshot();\n  });\n});\n//# sourceMappingURL=BreadcrumbItem.test.js.map"],"file":"BreadcrumbItem.test.js"}