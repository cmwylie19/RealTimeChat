{"version":3,"sources":["../../../../src/components/InlineEdit/editableRowWrapper.js"],"names":["propTypes","trRef","PropTypes","func","className","string","onScroll","onResize","row","shape","isOpen","bool","isExpanded","isEditing","isTableEditing","isFirstVisible","isLastVisible","isChildEditing","isParentEditing","isLastVisibleParent","editConfig","object","rowProps","defaultProps","undefined","tableConfirmationMapper","TABLE_TOP","hasConfirmationButtons","isTableConfirmation","areButtonsOnTop","hasBoldBorder","getEditStyles","styles","tableEditableRow","modifiers","tableEditingFirstRow","TABLE_BOTTOM","tableEditingLastRow","ROW","editing","NO_CONFIRM_ROW","NONE","getTableConfirmation","editConfirmationType","TableEditConfirmation","editableRowWrapper","RowWrapperComponent","RowWrapper","props","newState","setState","oldState","Object","keys","find","key","element","tableElem","closest","updateRowDimensions","setStateWith2dEquals","rowDimensions","event","fetchClientDimensions","state","window","getDerivedStateFromProps","onEditConfirmed","onEditCanceled","tableConfirmation","confirmButtons","options","actionObject","parentNode","document","body","trClassName","saveRowDimensions","handleScroll","handleResize","getConfirmationButtons","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEC,sBAAUC,IADD;AAEhBC,EAAAA,SAAS,EAAEF,sBAAUG,MAFL;AAGhBC,EAAAA,QAAQ,EAAEJ,sBAAUC,IAHJ;AAIhBI,EAAAA,QAAQ,EAAEL,sBAAUC,IAJJ;AAKhBK,EAAAA,GAAG,EAAEN,sBAAUO,KAAV,CAAgB;AACnBC,IAAAA,MAAM,EAAER,sBAAUS,IADC;AAEnBC,IAAAA,UAAU,EAAEV,sBAAUS,IAFH;AAGnBE,IAAAA,SAAS,EAAEX,sBAAUS,IAHF;AAInBG,IAAAA,cAAc,EAAEZ,sBAAUS,IAJP;AAKnBI,IAAAA,cAAc,EAAEb,sBAAUS,IALP;AAMnBK,IAAAA,aAAa,EAAEd,sBAAUS,IANN;AAOnBM,IAAAA,cAAc,EAAEf,sBAAUS,IAPP;AAQnBO,IAAAA,eAAe,EAAEhB,sBAAUS,IARR;AASnBQ,IAAAA,mBAAmB,EAAEjB,sBAAUS,IATZ;AAUnBS,IAAAA,UAAU,EAAElB,sBAAUmB;AAVH,GAAhB,CALW;AAiBhBC,EAAAA,QAAQ,EAAEpB,sBAAUmB;AAjBJ,CAAlB;AAoBA,IAAME,YAAY,GAAG;AACnBtB,EAAAA,KAAK,EAAEuB,SADY;AAEnBpB,EAAAA,SAAS,EAAE,EAFQ;AAGnBE,EAAAA,QAAQ,EAAEkB,SAHS;AAInBjB,EAAAA,QAAQ,EAAEiB,SAJS;AAKnBhB,EAAAA,GAAG,EAAE;AACHE,IAAAA,MAAM,EAAEc,SADL;AAEHZ,IAAAA,UAAU,EAAEY,SAFT;AAGHX,IAAAA,SAAS,EAAEW,SAHR;AAIHV,IAAAA,cAAc,EAAEU,SAJb;AAKHT,IAAAA,cAAc,EAAES,SALb;AAMHR,IAAAA,aAAa,EAAEQ,SANZ;AAOHP,IAAAA,cAAc,EAAEO,SAPb;AAQHN,IAAAA,eAAe,EAAEM,SARd;AASHL,IAAAA,mBAAmB,EAAEK,SATlB;AAUHJ,IAAAA,UAAU,EAAEI;AAVT,GALc;AAiBnBF,EAAAA,QAAQ,EAAE;AAjBS,CAArB,C,CAoBA;AACA;;AACA,IAAMG,uBAAuB,GAAG;AAC9BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,sBAAsB,EAAE;AAAA,UAAGb,cAAH,QAAGA,cAAH;AAAA,UAAmBC,cAAnB,QAAmBA,cAAnB;AAAA,aAAwCD,cAAc,IAAIC,cAA1D;AAAA,KADf;AAETa,IAAAA,mBAAmB,EAAE;AAAA,aAAM,IAAN;AAAA,KAFZ;AAGTC,IAAAA,eAAe,EAAE;AAAA,aAAM,IAAN;AAAA,KAHR;AAITC,IAAAA,aAAa,EAAE;AAAA,aAAM,IAAN;AAAA,KAJN;AAKTC,IAAAA,aAAa,EAAE;AAAA,UAAGjB,cAAH,SAAGA,cAAH;AAAA,UAAmBC,cAAnB,SAAmBA,cAAnB;AAAA,aACb,sBAAIiB,gCAAOC,gBAAX,EAA6BnB,cAAc,IAAIC,cAAlB,IAAoCiB,gCAAOE,SAAP,CAAiBC,oBAAlF,CADa;AAAA;AALN,GADmB;AAS9BC,EAAAA,YAAY,EAAE;AACZT,IAAAA,sBAAsB,EAAE;AAAA,UAAGb,cAAH,SAAGA,cAAH;AAAA,UAAmBE,aAAnB,SAAmBA,aAAnB;AAAA,aAAuCF,cAAc,IAAIE,aAAzD;AAAA,KADZ;AAEZY,IAAAA,mBAAmB,EAAE;AAAA,aAAM,IAAN;AAAA,KAFT;AAGZC,IAAAA,eAAe,EAAE;AAAA,aAAM,KAAN;AAAA,KAHL;AAIZC,IAAAA,aAAa,EAAE;AAAA,aAAM,IAAN;AAAA,KAJH;AAKZC,IAAAA,aAAa,EAAE;AAAA,UAAGjB,cAAH,SAAGA,cAAH;AAAA,UAAmBE,aAAnB,SAAmBA,aAAnB;AAAA,aACb,sBAAIgB,gCAAOC,gBAAX,EAA6BnB,cAAc,IAAIE,aAAlB,IAAmCgB,gCAAOE,SAAP,CAAiBG,mBAAjF,CADa;AAAA;AALH,GATgB;AAiB9BC,EAAAA,GAAG,EAAE;AACHX,IAAAA,sBAAsB,EAAE;AAAA,UAAGd,SAAH,SAAGA,SAAH;AAAA,UAAcK,eAAd,SAAcA,eAAd;AAAA,UAA+BC,mBAA/B,SAA+BA,mBAA/B;AAAA,UAAoDF,cAApD,SAAoDA,cAApD;AAAA,UAAoED,aAApE,SAAoEA,aAApE;AAAA,aACtBH,SAAS,IACT,EAAEI,cAAc,IAAIC,eAApB,CADA,IACwC;AACxC,QAAEA,eAAe,IAAIF,aAArB,CAFA,IAEuC;AACvC,QAAEC,cAAc,IAAI,CAACE,mBAArB,CAJsB;AAAA,KADrB;AAK0C;AAC7CS,IAAAA,mBAAmB,EAAE;AAAA,aAAM,KAAN;AAAA,KANlB;AAOHC,IAAAA,eAAe,EAAE;AAAA,UAAGb,aAAH,SAAGA,aAAH;AAAA,UAAkBG,mBAAlB,SAAkBA,mBAAlB;AAAA,aAA4CH,aAAa,IAAIG,mBAA7D;AAAA,KAPd;AAQHW,IAAAA,aAAa,EAAE;AAAA,aAAM,KAAN;AAAA,KARZ;AASHC,IAAAA,aAAa,EAAE;AAAA,UAAGlB,SAAH,SAAGA,SAAH;AAAA,aAAmB,sBAAImB,gCAAOC,gBAAX,EAA6BpB,SAAS,IAAImB,gCAAOE,SAAP,CAAiBK,OAA3D,CAAnB;AAAA;AATZ,GAjByB;AA4B9BC,EAAAA,cAAc,EAAE;AACdb,IAAAA,sBAAsB,EAAE;AAAA,aAAM,KAAN;AAAA,KADV;AAEdC,IAAAA,mBAAmB,EAAE;AAAA,aAAM,KAAN;AAAA,KAFP;AAGdC,IAAAA,eAAe,EAAE;AAAA,aAAM,KAAN;AAAA,KAHH;AAIdC,IAAAA,aAAa,EAAE;AAAA,aAAM,KAAN;AAAA,KAJD;AAKdC,IAAAA,aAAa,EAAE;AAAA,UAAGlB,SAAH,SAAGA,SAAH;AAAA,aAAmB,sBAAImB,gCAAOC,gBAAX,EAA6BpB,SAAS,IAAImB,gCAAOE,SAAP,CAAiBK,OAA3D,CAAnB;AAAA;AALD,GA5Bc;AAmC9BE,EAAAA,IAAI,EAAE;AACJd,IAAAA,sBAAsB,EAAE;AAAA,aAAM,KAAN;AAAA,KADpB;AAEJC,IAAAA,mBAAmB,EAAE;AAAA,aAAM,KAAN;AAAA,KAFjB;AAGJC,IAAAA,eAAe,EAAE;AAAA,aAAM,KAAN;AAAA,KAHb;AAIJC,IAAAA,aAAa,EAAE;AAAA,aAAM,KAAN;AAAA,KAJX;AAKJC,IAAAA,aAAa,EAAE;AAAA,aAAM,sBAAIC,gCAAOC,gBAAX,CAAN;AAAA;AALX;AAnCwB,CAAhC;;AA4CA,IAAMS,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,MAAGtB,UAAH,SAAGA,UAAH;AAAA,SAC3BK,uBAAuB,CAACL,UAAU,IAAIA,UAAU,CAACuB,oBAA1B,CAAvB,IACAlB,uBAAuB,CAACmB,iCAAsBH,IAAvB,CAFI;AAAA,CAA7B;;AAIA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,mBAAmB,EAAI;AAAA,MAC1CC,UAD0C;AAAA;AAAA;AAAA;;AAE9C,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,6EAaI,UAAAC,QAAQ,EAAI;AACjC,cAAKC,QAAL,CAAc,UAAAC,QAAQ;AAAA,iBACpBC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,IAAtB,CAA2B,UAAAC,GAAG;AAAA,mBAAI,CAAC,kCAAsBN,QAAQ,CAACM,GAAD,CAA9B,EAAqCJ,QAAQ,CAACI,GAAD,CAA7C,CAAL;AAAA,WAA9B,IAA0FN,QAA1F,GAAqG,IADjF;AAAA,SAAtB;AAGD,OAjBkB;;AAAA,0EAyBC,UAAAO,OAAO,EAAI;AAC7B,YAAIA,OAAJ,EAAa;AACX,gBAAKA,OAAL,GAAeA,OAAf;AACA,gBAAKC,SAAL,GAAiBD,OAAO,CAACE,OAAR,CAAgB,OAAhB,CAAjB;AACD;;AACD,cAAKC,mBAAL;AACD,OA/BkB;;AAAA,4EAiCG,YAAM;AAC1B,YAAI,MAAKH,OAAT,EAAkB;AAChB,gBAAKI,oBAAL,CAA0B;AACxBC,YAAAA,aAAa,EAAE,kCAAsB,MAAKL,OAA3B;AADS,WAA1B;AAGD;AACF,OAvCkB;;AAAA,qEAyCJ,UAAAM,KAAK,EAAI;AACtB,cAAKH,mBAAL;AACD,OA3CkB;;AAAA,qEA6CJ,UAAAG,KAAK,EAAI;AACtB,cAAKC,qBAAL;;AACA,cAAKJ,mBAAL;AACD,OAhDkB;;AAEjB,YAAKK,KAAL;AACEH,QAAAA,aAAa,EAAE,EADjB;AAEEI,QAAAA,MAAM,EAAE;AAFV,SAGKlB,UAAU,CAACmB,wBAAX,CAAoClB,KAApC,CAHL;AAFiB;AAOlB;;AAT6C;AAAA;AAAA,0CAqB1B;AAClB,YAAI,KAAKgB,KAAL,CAAWrC,sBAAf,EAAuC;AACrC,eAAKoC,qBAAL;AACD;AACF;AAzB6C;AAAA;AAAA,8CAoDtB;AACtB,aAAKH,oBAAL,CAA0B;AACxBK,UAAAA,MAAM,EAAE;AADgB,SAA1B;AAGD;AAxD6C;AAAA;AAAA,+CA0DrB;AAAA,0BACa,KAAKjB,KADlB;AAAA,YACfxC,GADe,eACfA,GADe;AAAA,YACVc,QADU,eACVA,QADU;AAAA,YACG0B,KADH;;AAAA,YAEfhC,aAFe,GAEqDR,GAFrD,CAEfQ,aAFe;AAAA,YAEAE,eAFA,GAEqDV,GAFrD,CAEAU,eAFA;AAAA,YAEiBC,mBAFjB,GAEqDX,GAFrD,CAEiBW,mBAFjB;AAAA,YAEsCC,UAFtC,GAEqDZ,GAFrD,CAEsCY,UAFtC;;AAIvB,YAAI,CAACA,UAAL,EAAiB;AACf,iBAAO,IAAP;AACD;;AANsB,YAOf+C,eAPe,GAOqB/C,UAPrB,CAOf+C,eAPe;AAAA,YAOEC,cAPF,GAOqBhD,UAPrB,CAOEgD,cAPF;AAQvB,YAAMC,iBAAiB,GAAG3B,oBAAoB,CAAClC,GAAD,CAA9C;AAEA,YAAI8D,cAAJ;;AACA,YAAI,KAAKd,OAAL,IAAgB,KAAKQ,KAAL,CAAWH,aAA/B,EAA8C;AAC5C,cAAMU,OAAO,GAAGF,iBAAiB,CAACzC,mBAAlB,KAA0C,EAA1C,GAA+CN,QAA/D;AACA,cAAMkD,YAAY,GAAGH,iBAAiB,CAACzC,mBAAlB,KAA0C,IAA1C,GAAiDpB,GAAtE;AACA8D,UAAAA,cAAc,GAAG,4BACf,gCAAC,0BAAD,eACMtB,KADN;AAEE,YAAA,SAAS,EAAE,mBAAAc,KAAK;AAAA,qBAAIK,eAAe,CAACL,KAAD,EAAQU,YAAR,EAAsBD,OAAtB,CAAnB;AAAA,aAFlB;AAGE,YAAA,QAAQ,EAAE,kBAAAT,KAAK;AAAA,qBAAIM,cAAc,CAACN,KAAD,EAAQU,YAAR,EAAsBD,OAAtB,CAAlB;AAAA,aAHjB;AAIE,YAAA,YAAY,EAAEF,iBAAiB,CAACxC,eAAlB,CAAkC;AAAEb,cAAAA,aAAa,EAAbA,aAAF;AAAiBE,cAAAA,eAAe,EAAfA,eAAjB;AAAkCC,cAAAA,mBAAmB,EAAnBA;AAAlC,aAAlC,CAJhB;AAKE,YAAA,UAAU,EAAEkD,iBAAiB,CAACvC,aAAlB,EALd;AAME,YAAA,WAAW,EAAE;AACXmC,cAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MADR;AAEXzD,cAAAA,GAAG,EAAE,kCAAsB,KAAKgD,OAA3B;AAFM;AANf,aADe,EAYf,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAegB,UAAhC,GAA6CC,QAAQ,CAACC,IAZvC,CAAjB;AAcD;;AACD,eAAOL,cAAP;AACD;AAxF6C;AAAA;AAAA,+BA0FrC;AAAA,2BAOH,KAAKtB,KAPF;AAAA,YAEL/C,KAFK,gBAELA,KAFK;AAAA,YAGLG,SAHK,gBAGLA,SAHK;AAAA,YAILE,QAJK,gBAILA,QAJK;AAAA,YAKLC,QALK,gBAKLA,QALK;AAAA,4CAMLC,GANK;AAAA,YAMEO,cANF,oBAMEA,cANF;AAAA,YAMkBC,aANlB,oBAMkBA,aANlB;AAAA,YAMiCH,SANjC,oBAMiCA,SANjC;AAAA,YAM4CC,cAN5C,oBAM4CA,cAN5C;AAAA,YAM4DM,UAN5D,oBAM4DA,UAN5D;AAAA,YAQCO,sBARD,GAQ4B,KAAKqC,KARjC,CAQCrC,sBARD;AASP,YAAMiD,WAAW,GAAGlC,oBAAoB,CAAC;AAAEtB,UAAAA,UAAU,EAAVA;AAAF,SAAD,CAApB,CAAqCW,aAArC,CAAmD;AACrElB,UAAAA,SAAS,EAATA,SADqE;AAErEC,UAAAA,cAAc,EAAdA,cAFqE;AAGrEC,UAAAA,cAAc,EAAdA,cAHqE;AAIrEC,UAAAA,aAAa,EAAbA;AAJqE,SAAnD,CAApB;AAOA,eACE,gCAAC,iBAAD,CAAO,QAAP,QACE,gCAAC,mBAAD,eACM,KAAKgC,KADX;AAEE,UAAA,KAAK,EAAE,6BAAiB,KAAK6B,iBAAtB,EAAyC5E,KAAzC,CAFT;AAGE,UAAA,SAAS,EAAE,4BAAW2E,WAAX,EAAwBxE,SAAxB,CAHb;AAIE,UAAA,QAAQ,EAAE,6BAAiBuB,sBAAsB,IAAI,KAAKmD,YAAhD,EAA8DxE,QAA9D,CAJZ;AAKE,UAAA,QAAQ,EAAE,6BAAiBqB,sBAAsB,IAAI,KAAKoD,YAAhD,EAA8DxE,QAA9D;AALZ,WADF,EAQGoB,sBAAsB,IAAI,KAAKqD,sBAAL,EAR7B,CADF;AAYD;AAtH6C;;AAAA;AAAA,IACvBC,kBAAMC,SADiB;;AAAA,kBAC1CnC,UAD0C,8BAWZ,UAACC,KAAD,EAAQgB,KAAR;AAAA,WAAmB;AACnDrC,MAAAA,sBAAsB,EAAEe,oBAAoB,CAACM,KAAK,CAACxC,GAAP,CAApB,CAAgCmB,sBAAhC,CAAuDqB,KAAK,CAACxC,GAA7D;AAD2B,KAAnB;AAAA,GAXY;;AAyHhDuC,EAAAA,UAAU,CAAC/C,SAAX,GAAuBA,SAAvB;AACA+C,EAAAA,UAAU,CAACxB,YAAX,GAA0BA,YAA1B;AAEA,SAAOwB,UAAP;AACD,CA7HD;;eA+HeF,kB","sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { css } from '@patternfly/react-styles';\nimport {\n  combineFunctions,\n  shallowLeftSideEquals,\n  getBoundingClientRect,\n  getClientWindowDimensions\n} from './utils/utils';\nimport ConfirmButtons from './ConfirmButtons';\nimport { TableEditConfirmation } from './constants';\nimport '@patternfly/react-styles/css/components/Table/inline-edit.css';\nimport { inlineEditStyles as styles } from './css/inline-edit-css';\n\nconst propTypes = {\n  trRef: PropTypes.func,\n  className: PropTypes.string,\n  onScroll: PropTypes.func,\n  onResize: PropTypes.func,\n  row: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isTableEditing: PropTypes.bool,\n    isFirstVisible: PropTypes.bool,\n    isLastVisible: PropTypes.bool,\n    isChildEditing: PropTypes.bool,\n    isParentEditing: PropTypes.bool,\n    isLastVisibleParent: PropTypes.bool,\n    editConfig: PropTypes.object\n  }),\n  rowProps: PropTypes.object\n};\n\nconst defaultProps = {\n  trRef: undefined,\n  className: '',\n  onScroll: undefined,\n  onResize: undefined,\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isEditing: undefined,\n    isTableEditing: undefined,\n    isFirstVisible: undefined,\n    isLastVisible: undefined,\n    isChildEditing: undefined,\n    isParentEditing: undefined,\n    isLastVisibleParent: undefined,\n    editConfig: undefined\n  },\n  rowProps: null\n};\n\n// TableEditConfirmation constants like TABLE_TOP cannot be referenced but must be hardcoded due to this issue:\n// https://github.com/reactjs/react-docgen/issues/317#issue-393678795\nconst tableConfirmationMapper = {\n  TABLE_TOP: {\n    hasConfirmationButtons: ({ isTableEditing, isFirstVisible }) => isTableEditing && isFirstVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => true,\n    hasBoldBorder: () => true,\n    getEditStyles: ({ isTableEditing, isFirstVisible }) =>\n      css(styles.tableEditableRow, isTableEditing && isFirstVisible && styles.modifiers.tableEditingFirstRow)\n  },\n  TABLE_BOTTOM: {\n    hasConfirmationButtons: ({ isTableEditing, isLastVisible }) => isTableEditing && isLastVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => true,\n    getEditStyles: ({ isTableEditing, isLastVisible }) =>\n      css(styles.tableEditableRow, isTableEditing && isLastVisible && styles.modifiers.tableEditingLastRow)\n  },\n  ROW: {\n    hasConfirmationButtons: ({ isEditing, isParentEditing, isLastVisibleParent, isChildEditing, isLastVisible }) =>\n      isEditing &&\n      !(isChildEditing && isParentEditing) && // buttons can't appear in the middle\n      !(isParentEditing && isLastVisible) && // parent will show the buttons on top\n      !(isChildEditing && !isLastVisibleParent), // child will show the buttons on bottom\n    isTableConfirmation: () => false,\n    areButtonsOnTop: ({ isLastVisible, isLastVisibleParent }) => isLastVisible || isLastVisibleParent,\n    hasBoldBorder: () => false,\n    getEditStyles: ({ isEditing }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NO_CONFIRM_ROW: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: ({ isEditing }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NONE: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: () => css(styles.tableEditableRow)\n  }\n};\n\nconst getTableConfirmation = ({ editConfig }) =>\n  tableConfirmationMapper[editConfig && editConfig.editConfirmationType] ||\n  tableConfirmationMapper[TableEditConfirmation.NONE];\n\nconst editableRowWrapper = RowWrapperComponent => {\n  class RowWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        rowDimensions: {},\n        window: {},\n        ...RowWrapper.getDerivedStateFromProps(props)\n      };\n    }\n\n    static getDerivedStateFromProps = (props, state) => ({\n      hasConfirmationButtons: getTableConfirmation(props.row).hasConfirmationButtons(props.row)\n    })\n\n    setStateWith2dEquals = newState => {\n      this.setState(oldState =>\n        Object.keys(newState).find(key => !shallowLeftSideEquals(newState[key], oldState[key])) ? newState : null\n      );\n    }\n\n    componentDidMount() {\n      if (this.state.hasConfirmationButtons) {\n        this.fetchClientDimensions();\n      }\n    }\n\n    saveRowDimensions = element => {\n      if (element) {\n        this.element = element;\n        this.tableElem = element.closest('table');\n      }\n      this.updateRowDimensions();\n    }\n\n    updateRowDimensions = () => {\n      if (this.element) {\n        this.setStateWith2dEquals({\n          rowDimensions: getBoundingClientRect(this.element)\n        });\n      }\n    }\n\n    handleScroll = event => {\n      this.updateRowDimensions();\n    }\n\n    handleResize = event => {\n      this.fetchClientDimensions();\n      this.updateRowDimensions();\n    }\n\n    fetchClientDimensions() {\n      this.setStateWith2dEquals({\n        window: getClientWindowDimensions()\n      });\n    }\n\n    getConfirmationButtons() {\n      const { row, rowProps, ...props } = this.props;\n      const { isLastVisible, isParentEditing, isLastVisibleParent, editConfig } = row;\n\n      if (!editConfig) {\n        return null;\n      }\n      const { onEditConfirmed, onEditCanceled } = editConfig;\n      const tableConfirmation = getTableConfirmation(row);\n\n      let confirmButtons;\n      if (this.element && this.state.rowDimensions) {\n        const options = tableConfirmation.isTableConfirmation() ? {} : rowProps;\n        const actionObject = tableConfirmation.isTableConfirmation() ? null : row;\n        confirmButtons = createPortal(\n          <ConfirmButtons\n            {...props}\n            onConfirm={event => onEditConfirmed(event, actionObject, options)}\n            onCancel={event => onEditCanceled(event, actionObject, options)}\n            buttonsOnTop={tableConfirmation.areButtonsOnTop({ isLastVisible, isParentEditing, isLastVisibleParent })}\n            boldBorder={tableConfirmation.hasBoldBorder()}\n            environment={{\n              window: this.state.window,\n              row: getBoundingClientRect(this.element)\n            }}\n          />,\n          this.tableElem ? this.tableElem.parentNode : document.body\n        );\n      }\n      return confirmButtons;\n    }\n\n    render() {\n      const {\n        trRef,\n        className,\n        onScroll,\n        onResize,\n        row: { isFirstVisible, isLastVisible, isEditing, isTableEditing, editConfig }\n      } = this.props;\n      const { hasConfirmationButtons } = this.state;\n      const trClassName = getTableConfirmation({ editConfig }).getEditStyles({\n        isEditing,\n        isTableEditing,\n        isFirstVisible,\n        isLastVisible\n      });\n\n      return (\n        <React.Fragment>\n          <RowWrapperComponent\n            {...this.props}\n            trRef={combineFunctions(this.saveRowDimensions, trRef)}\n            className={classNames(trClassName, className)}\n            onScroll={combineFunctions(hasConfirmationButtons && this.handleScroll, onScroll)}\n            onResize={combineFunctions(hasConfirmationButtons && this.handleResize, onResize)}\n          />\n          {hasConfirmationButtons && this.getConfirmationButtons()}\n        </React.Fragment>\n      );\n    }\n  }\n\n  RowWrapper.propTypes = propTypes;\n  RowWrapper.defaultProps = defaultProps;\n\n  return RowWrapper;\n};\n\nexport default editableRowWrapper;\n"],"file":"editableRowWrapper.js"}