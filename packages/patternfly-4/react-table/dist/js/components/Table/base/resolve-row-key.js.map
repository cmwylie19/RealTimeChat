{"version":3,"sources":["../../../../../src/components/Table/base/resolve-row-key.ts"],"names":["resolveRowKey","rowData","rowIndex","rowKey","process","env","NODE_ENV","undefined","console","warn"],"mappings":";;;;;;;AAOA;;AAPA;;;;;;AAUO,SAASA,aAAT,OAAiH;AAAA,MAAxFC,OAAwF,QAAxFA,OAAwF;AAAA,MAA/EC,QAA+E,QAA/EA,QAA+E;AAAA,MAArEC,MAAqE,QAArEA,MAAqE;;AACtH,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,qBAAUA,MAAM,CAAC;AAAEF,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,QAAQ,EAARA;AAAX,KAAD,CAAhB;AACD,GAFD,MAEO,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAChD;AACA,QAAI,CAAC,qBAAQL,OAAR,CAAD,IAAsBA,OAAD,CAAiBE,MAAjB,MAA6BI,SAAtD,EAAiE;AAC/D;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,oCAAb,EAAmDR,OAAnD,EAA4DE,MAA5D;AACD;AACF;;AAED,MAAKF,OAAD,CAAiBE,MAAjB,MAA6B,CAAjC,EAAoC;AAClC,qBAAWF,OAAD,CAAiBE,MAAjB,CAAV;AACD;;AAED,mBAAWF,OAAD,CAAiBE,MAAjB,KAAsCD,QAAhD;AACD","sourcesContent":["/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport { isArray } from 'lodash';\nimport { RowType, RowKeyType } from './types';\n\nexport function resolveRowKey({ rowData, rowIndex, rowKey }: { rowData: RowType, rowIndex: number, rowKey: RowKeyType}) {\n  if (typeof rowKey === 'function') {\n    return `${rowKey({ rowData, rowIndex })}-row`;\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!isArray(rowData) && (rowData as any)[rowKey] === undefined) {\n      // tslint:disable-next-line:no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if ((rowData as any)[rowKey] === 0) {\n    return `${(rowData as any)[rowKey] as string}-row`;\n  }\n\n  return `${(rowData as any)[rowKey] as string || rowIndex}-row`;\n}\n"],"file":"resolve-row-key.js"}