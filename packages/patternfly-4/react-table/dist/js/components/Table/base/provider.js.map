{"version":3,"sources":["../../../../../src/components/Table/base/provider.tsx"],"names":["ProviderContext","React","createContext","columns","renderers","Provider","props","components","children","finalRenderers","console","warn","provider","createElement","table","TableDefaults","header","body","Component","role","className"],"mappings":";;;;;;;;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,IAAMA,eAAe,GAAGC,KAAK,CAACC,aAAN,CAAoB;AACjDC,EAAAA,OAAO,EAAE,IADwC;AAEjDC,EAAAA,SAAS,EAAE;AAFsC,CAApB,CAAxB;;;IAKMC,Q;;;;;;;;;;;;;6BAIF;AAAA,wBAOH,KAAKC,KAPF;AAAA,UAELH,OAFK,eAELA,OAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILG,UAJK,eAILA,UAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMFF,KANE;;AASP,UAAIG,cAAc,GAAGL,SAArB;;AAEA,UAAIG,UAAJ,EAAgB;AACd;AACAG,QAAAA,OAAO,CAACC,IAAR,CACE,yHADF;AAGAF,QAAAA,cAAc,GAAGF,UAAjB;AACD;;AAED,UAAMK,QAAQ,GAAGX,KAAK,CAACY,aAAN,CAAoBT,SAAS,CAACU,KAAV,IAAmBC,qBAAcX,SAAd,CAAwBU,KAA/D,EAAsER,KAAtE,EAA6EE,QAA7E,CAAjB;AACA,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE;AACjCL,UAAAA,OAAO,EAAPA,OADiC;AAEjCC,UAAAA,SAAS,EAAE;AACTU,YAAAA,KAAK,EAAEL,cAAc,CAACK,KAAf,IAAwBC,qBAAcX,SAAd,CAAwBU,KAD9C;AAETE,YAAAA,MAAM,oBAAOD,qBAAcX,SAAd,CAAwBY,MAA/B,MAA0CP,cAAc,CAACO,MAAzD,CAFG;AAGTC,YAAAA,IAAI,oBAAOF,qBAAcX,SAAd,CAAwBa,IAA/B,MAAwCR,cAAc,CAACQ,IAAvD;AAHK;AAFsB;AAAjC,SAQCL,QARD,CADF;AAYD;;;;EApC2BX,KAAK,CAACiB,S;;;;gBAAvBb,Q;AAVXG,EAAAA,Q;AACAW,EAAAA,I;AACAC,EAAAA,S;;;gBAQWf,Q,kBACW;AACpBD,EAAAA,SAAS,EAAEW,qBAAcX;AADL,C","sourcesContent":["/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { RenderersTypes, TableDefaults, ColumnsType } from './types';\n\nexport interface ProviderProps extends RenderersTypes {\n  children?: React.ReactNode;\n  role?: string;\n  className?: string;\n}\n\nexport const ProviderContext = React.createContext({\n  columns: null as ColumnsType,\n  renderers: null as RenderersTypes['renderers']\n});\n\nexport class Provider extends React.Component<ProviderProps, {}> {\n  static defaultProps = {\n    renderers: TableDefaults.renderers\n  };\n  render() {\n    const {\n      columns,\n      renderers,\n      components,\n      children,\n      ...props\n    } = this.props;\n\n    let finalRenderers = renderers;\n\n    if (components) {\n      // tslint:disable-next-line:no-console\n      console.warn(\n        '`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!'\n      );\n      finalRenderers = components;\n    }\n\n    const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n    return (\n      <ProviderContext.Provider value={{\n      columns,\n      renderers: {\n        table: finalRenderers.table || TableDefaults.renderers.table,\n        header: { ...TableDefaults.renderers.header, ...finalRenderers.header },\n        body: { ...TableDefaults.renderers.body, ...finalRenderers.body }\n      }\n    }}>\n      {provider}\n      </ProviderContext.Provider>\n      );\n  }\n}\n"],"file":"provider.js"}