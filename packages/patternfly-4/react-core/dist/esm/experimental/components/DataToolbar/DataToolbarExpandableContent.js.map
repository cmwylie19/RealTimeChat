{"version":3,"sources":["../../../../../src/experimental/components/DataToolbar/DataToolbarExpandableContent.tsx"],"names":["React","styles","css","getModifier","DataToolbarExpandableContent","className","isExpanded","expandableContentRef","props","dataToolbarExpandableContent"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,0BAAjC;AAaA,OAAO,MAAMC,4BAAwF,GAAG,UAK7D;AAAA,MAL8D;AACrGC,IAAAA,SADqG;AAErGC,IAAAA,UAAU,GAAG,KAFwF;AAGrGC,IAAAA;AAHqG,GAK9D;AAAA,MADpCC,KACoC;;AAEzC,SACE;AACE,IAAA,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACQ,4BADK,EAEZH,UAAU,IAAIH,WAAW,CAACF,MAAD,EAAS,UAAT,CAFb,EAGZI,SAHY,CADhB;AAKE,IAAA,GAAG,EAAEE;AALP,KAMMC,KANN,EADF;AAUD,CAjBM;;AAPLH,EAAAA,S;AAEAC,EAAAA,U;AAEAC,EAAAA,oB","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DataToolbar/data-toolbar';\nimport { css, getModifier } from '@patternfly/react-styles';\n\nimport { RefObject } from 'react';\n\nexport interface DataToolbarExpandableContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** Classes added to the root element of the Data toolbar expandable content */\n  className?: string;\n  /** Flag indicating the expandable content is expanded */\n  isExpanded?: boolean;\n  /** Expandable content reference for passing to Data toolbar children */\n  expandableContentRef: RefObject<HTMLDivElement>;\n}\n\nexport const DataToolbarExpandableContent: React.FunctionComponent<DataToolbarExpandableContentProps> = ({\n    className,\n    isExpanded = false,\n    expandableContentRef,\n    ...props\n  }: DataToolbarExpandableContentProps) => {\n\n  return (\n    <div\n      className={css(\n        styles.dataToolbarExpandableContent,\n        isExpanded && getModifier(styles, 'expanded'),\n        className)}\n      ref={expandableContentRef}\n      {...props}\n    />\n  );\n};\n"],"file":"DataToolbarExpandableContent.js"}