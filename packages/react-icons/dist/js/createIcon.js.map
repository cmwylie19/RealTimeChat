{"version":3,"sources":["../../src/createIcon.js"],"names":["currentId","createIcon","iconDefinition","viewBox","xOffset","yOffset","width","height","join","transform","Icon","props","size","color","title","noStyle","noVerticalAlign","hasTitle","Boolean","heightWidth","baseAlign","Number","parseFloat","style","verticalAlign","id","svgPath","React","Component","name","propTypes","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,SAAS,GAAG,CAAhB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,cAAc,EAAI;AACnC,MAAMC,OAAO,GAAG,CAACD,cAAc,CAACE,OAAf,IAA0B,CAA3B,EAA8BF,cAAc,CAACG,OAAf,IAA0B,CAAxD,EAA2DH,cAAc,CAACI,KAA1E,EAAiFJ,cAAc,CAACK,MAAhG,EAAwGC,IAAxG,CAA6G,GAA7G,CAAhB;AACA,MAAMC,SAAS,GAAGP,cAAc,CAACO,SAAjC;;AAFmC,MAG7BC,IAH6B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,gFAQdV,SAAS,EARK;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAUxB;AAAA,0BAC4D,KAAKW,KADjE;AAAA,YACCC,IADD,eACCA,IADD;AAAA,YACOC,KADP,eACOA,KADP;AAAA,YACcC,KADd,eACcA,KADd;AAAA,YACqBC,OADrB,eACqBA,OADrB;AAAA,YAC8BC,eAD9B,eAC8BA,eAD9B;AAAA,YACkDL,KADlD;;AAGP,YAAMM,QAAQ,GAAGC,OAAO,CAACJ,KAAD,CAAxB;AACA,YAAMK,WAAW,GAAG,qBAAQP,IAAR,CAApB;AACA,YAAMQ,SAAS,GAAG,CAAC,IAAD,GAAQC,MAAM,CAACC,UAAP,CAAkBH,WAAlB,CAA1B;AACA,YAAMI,KAAK,GAAGP,eAAe,GAAG,IAAH,GAAU;AAAEQ,UAAAA,aAAa,YAAKJ,SAAL;AAAf,SAAvC;AAEA,eACE;AACE,UAAA,KAAK,EAAEG,KADT;AAEE,UAAA,IAAI,EAAEV,KAFR;AAGE,UAAA,MAAM,EAAEM,WAHV;AAIE,UAAA,KAAK,EAAEA,WAJT;AAKE,UAAA,OAAO,EAAEhB,OALX;AAME,6BAAiBc,QAAQ,GAAG,KAAKQ,EAAR,GAAa,IANxC;AAOE,yBAAaR,QAAQ,GAAG,IAAH,GAAU,IAPjC;AAQE,UAAA,IAAI,EAAC;AARP,WASMN,KATN,GAWGM,QAAQ,IAAI;AAAO,UAAA,EAAE,EAAE,KAAKQ;AAAhB,WAAqBX,KAArB,CAXf,EAYE;AAAM,UAAA,CAAC,EAAEZ,cAAc,CAACwB,OAAxB;AAAiC,UAAA,SAAS,EAAEjB;AAA5C,UAZF,CADF;AAgBD;AAlCgC;;AAAA;AAAA,IAGhBkB,kBAAMC,SAHU;;AAAA,kBAG7BlB,IAH6B,iBAIZR,cAAc,CAAC2B,IAJH;;AAAA,kBAG7BnB,IAH6B,eAKdoB,iBALc;;AAAA,kBAG7BpB,IAH6B,kBAMXqB,oBANW;;AAqCnC,SAAOrB,IAAP;AACD,CAtCD;;eAwCeT,U","sourcesContent":["import React from 'react';\nimport { getSize, propTypes, defaultProps } from './common';\n\nlet currentId = 0;\n\nconst createIcon = iconDefinition => {\n  const viewBox = [iconDefinition.xOffset || 0, iconDefinition.yOffset || 0, iconDefinition.width, iconDefinition.height].join(' ');\n  const transform = iconDefinition.transform;\n  class Icon extends React.Component {\n    static displayName = iconDefinition.name;\n    static propTypes = propTypes;\n    static defaultProps = defaultProps;\n\n    id = `icon-title-${currentId++}`;\n\n    render() {\n      const { size, color, title, noStyle, noVerticalAlign, ...props } = this.props;\n\n      const hasTitle = Boolean(title);\n      const heightWidth = getSize(size);\n      const baseAlign = -.125 * Number.parseFloat(heightWidth);\n      const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n\n      return (\n        <svg\n          style={style}\n          fill={color}\n          height={heightWidth}\n          width={heightWidth}\n          viewBox={viewBox}\n          aria-labelledby={hasTitle ? this.id : null}\n          aria-hidden={hasTitle ? null : true}\n          role=\"img\"\n          {...props}\n        >\n          {hasTitle && <title id={this.id}>{title}</title>}\n          <path d={iconDefinition.svgPath} transform={transform} />\n        </svg>\n      );\n    }\n  }\n\n  return Icon;\n};\n\nexport default createIcon;\n"],"file":"createIcon.js"}