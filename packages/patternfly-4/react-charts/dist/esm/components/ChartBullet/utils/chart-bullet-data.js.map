{"version":3,"sources":["../../../../../src/components/ChartBullet/utils/chart-bullet-data.ts"],"names":["Data","getBulletComparativeErrorMeasureTheme","getBulletComparativeMeasureTheme","getBulletComparativeWarningMeasureTheme","getBulletPrimaryDotMeasureTheme","getBulletPrimaryNegativeMeasureTheme","getBulletPrimarySegmentedMeasureTheme","getBulletQualitativeRangeTheme","getComparativeErrorMeasureData","data","themeColor","themeVariant","theme","y","getComparativeMeasureData","datum","formatData","forEach","dataPoint","index","push","_index","computedData","map","x","_x","y0","_y","_y0","_color","bar","style","fill","getComparativeWarningMeasureData","getPrimaryDotMeasureData","invert","getPrimarySegmentedMeasureData","negativeMeasureTheme","negativeDatum","positiveDatum","negativeComputedData","sort","a","b","group","colorScale","length","reverse","positiveComputedData","getQualitativeRangeData"],"mappings":"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","sourcesContent":["import { DataGetterPropType } from 'victory';\nimport { Data } from 'victory-core';\nimport { ChartThemeDefinition } from '../../ChartTheme';\nimport {\n  getBulletComparativeErrorMeasureTheme,\n  getBulletComparativeMeasureTheme,\n  getBulletComparativeWarningMeasureTheme,\n  getBulletPrimaryDotMeasureTheme,\n  getBulletPrimaryNegativeMeasureTheme,\n  getBulletPrimarySegmentedMeasureTheme,\n  getBulletQualitativeRangeTheme\n} from '../../ChartUtils';\n\ninterface ChartBulletDataInterface {\n  data?: any[];\n  invert?: boolean;\n  negativeMeasureTheme?: ChartThemeDefinition;\n  theme?: ChartThemeDefinition;\n  themeColor?: string;\n  themeVariant?: string;\n  y?: DataGetterPropType;\n  y0?: DataGetterPropType;\n}\n\nexport const getComparativeErrorMeasureData = ({\n  data,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletComparativeErrorMeasureTheme(themeColor, themeVariant),\n  y\n}: ChartBulletDataInterface) => {\n  return getComparativeMeasureData({\n    data,\n    theme,\n    themeColor,\n    themeVariant,\n    y\n  });\n};\n\nexport const getComparativeMeasureData = ({\n  data,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletComparativeMeasureTheme(themeColor, themeVariant),\n  y\n}: ChartBulletDataInterface) => {\n  const datum: any[] = [];\n\n  Data.formatData(data, {y}, ['y']).forEach(((dataPoint: any, index: number) => {\n    datum.push({\n      ...dataPoint,\n      _index: index // Save to sync legend color\n    });\n  }));\n\n  const computedData = datum.map((dataPoint: any, index: number) => {\n    return {\n      ...dataPoint,\n      x: 1,\n      _x: 1,\n      y0: dataPoint._y,\n      _y0: dataPoint._y,\n      _color: theme.bar.style.data.fill // Save to sync legend color\n    };\n  });\n  return computedData;\n};\n\nexport const getComparativeWarningMeasureData = ({\n  data,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant),\n  y\n}: ChartBulletDataInterface) => {\n  return getComparativeMeasureData({\n    data,\n    theme,\n    themeColor,\n    themeVariant,\n    y\n  });\n};\n\nexport const getPrimaryDotMeasureData = ({\n  data,\n  invert,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletPrimaryDotMeasureTheme(themeColor, themeVariant),\n  y,\n  y0\n}: ChartBulletDataInterface) => {\n  return getComparativeMeasureData({\n    data,\n    invert,\n    theme,\n    themeColor,\n    themeVariant,\n    y,\n    y0\n  });\n};\n\nexport const getPrimarySegmentedMeasureData = ({\n  data,\n  invert,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletPrimarySegmentedMeasureTheme(themeColor, themeVariant),\n  negativeMeasureTheme = getBulletPrimaryNegativeMeasureTheme(themeColor, themeVariant),\n  y,\n  y0\n}: ChartBulletDataInterface) => {\n  const negativeDatum: any[] = [];\n  const positiveDatum: any[] = [];\n\n  Data.formatData(data, {y, y0}, ['y', 'y0']).forEach(((dataPoint: any, index: number) => {\n    if (dataPoint._y < 0) {\n      negativeDatum.push({\n        ...dataPoint,\n        _index: index // Save to sync legend color\n      });\n    } else {\n      positiveDatum.push({\n        ...dataPoint,\n        _index: index // Save to sync legend color\n      });\n    }\n  }));\n\n  // Instead of relying on colorScale, colors must be added to each measure in ascending order\n  const negativeComputedData = negativeDatum.sort((a: any, b: any) => b._y - a._y).\n    map((dataPoint: any, index: number) => {\n      return {\n        ...dataPoint,\n        x: 1,\n        _x: 1,\n        _color: invert\n          ? theme.group.colorScale[index % theme.group.colorScale.length]\n          : negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length]\n      };\n      // Sort descending so largest bar is appears behind others\n    }).reverse();\n\n  // Instead of relying on colorScale, colors must be added to each measure in ascending order\n  const positiveComputedData = positiveDatum.sort((a: any, b: any) => a._y - b._y).\n    map((dataPoint: any, index: number) => {\n      return {\n        ...dataPoint,\n        x: 1,\n        _x: 1,\n        _color: invert\n          ? negativeMeasureTheme.group.colorScale[index % theme.group.colorScale.length]\n          : theme.group.colorScale[index % theme.group.colorScale.length]\n      };\n      // Sort descending so largest bar is appears behind others\n    }).reverse();\n\n  return [\n    ...negativeComputedData,\n    ...positiveComputedData\n  ];\n};\n\nexport const getQualitativeRangeData = ({\n  data,\n  invert,\n  themeColor,\n  themeVariant,\n\n  // destructure last\n  theme = getBulletQualitativeRangeTheme(themeColor, themeVariant),\n  y,\n  y0\n}: ChartBulletDataInterface) => {\n  const datum: any[] = [];\n\n  Data.formatData(data, {y, y0}, ['y', 'y0']).forEach(((dataPoint: any, index: number) => {\n    datum.push({\n      ...dataPoint,\n      _index: index // Save to sync legend color\n    });\n  }));\n\n  const computedData = datum.sort((a: any, b: any) => invert ? b._y - a._y : a._y - b._y).\n    map((dataPoint: any, index: number) => {\n      return {\n        ...dataPoint,\n        x: 1,\n        _x: 1,\n        // Instead of relying on colorScale, colors must be added to each measure in ascending order\n        _color: theme.group.colorScale[index % theme.group.colorScale.length]\n      };\n      // Sort descending so largest bar is appears behind others\n    }).reverse();\n\n  return computedData;\n};\n"],"file":"chart-bullet-data.js"}