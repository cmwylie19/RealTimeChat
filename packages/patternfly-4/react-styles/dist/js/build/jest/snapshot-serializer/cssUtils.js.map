{"version":3,"sources":["../../../../../src/build/jest/snapshot-serializer/cssUtils.js"],"names":["JSDOM","jsdom","getSelectors","nodes","reduce","selectors","node","props","getSelectorsFromProps","className","toString","split","map","cn","componentToHex","c","hex","length","rgbToHex","r","g","b","getComputedStyles","classNames","cssStr","dom","cs","window","getComputedStyle","document","body","children","values","i","key","value","getPropertyValue","replace","full","match","n","parseInt","getStylesAST","bufferedStyles","globalCSS","ast","css","parse","vars","getVarValue","stylesheet","rules","rule","type","declarations","decl","property","startsWith","formatComputedStyles","nodeSelectors","computedStyles","selector","join","cssString","Object","keys","k","stringify","getStyles","insertedStyles","acc","sel","re","RegExp","test","s"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEQA,K,GAAUC,K,CAAVD,K;;AAER,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACC,MAAN,CAAa,UAACC,SAAD,EAAYC,IAAZ,EAAqB;AACvC,QAAMC,KAAK,GAAG,OAAOD,IAAI,CAACC,KAAZ,KAAsB,UAAtB,GAAmCD,IAAI,CAACC,KAAL,EAAnC,GAAkDD,IAAI,CAACC,KAArE;AACA,wCAAWF,SAAX,IAAsBG,qBAAqB,CAACD,KAAD,CAA3C;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AAED,SAASC,qBAAT,GAA2C;AAAA,MAAZD,KAAY,uEAAJ,EAAI;AACzC,MAAME,SAAS,GAAGF,KAAK,CAACE,SAAN,IAAmBF,KAAK,SAA1C;;AACA,MAAIE,SAAJ,EAAe;AACb,WAAOA,SAAS,CACbC,QADI,GAEJC,KAFI,CAEE,GAFF,EAGJC,GAHI,CAGA,UAAAC,EAAE;AAAA,wBAAQA,EAAR;AAAA,KAHF,CAAP;AAID;;AACD,SAAO,EAAP;AACD;;AAED,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,MAAMC,GAAG,GAAGD,CAAC,CAACL,QAAF,CAAW,EAAX,CAAZ;AACA,SAAOM,GAAG,CAACC,MAAJ,KAAe,CAAf,cAAuBD,GAAvB,IAA+BA,GAAtC;AACD;;AAED,SAASE,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,oBAAWP,cAAc,CAACK,CAAD,CAAzB,SAA+BL,cAAc,CAACM,CAAD,CAA7C,SAAmDN,cAAc,CAACO,CAAD,CAAjE;AACD;;AAED,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,MAAvC,EAA+C;AAC7C,MAAMC,GAAG,GAAG,IAAIzB,KAAJ,+CAEOwB,MAFP,uDAGYD,UAHZ,8BAAZ;AAMA,MAAMG,EAAE,GAAGD,GAAG,CAACE,MAAJ,CAAWC,gBAAX,CAA4BH,GAAG,CAACE,MAAJ,CAAWE,QAAX,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,CAAlC,CAA5B,CAAX;AACA,MAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,EAAE,CAACT,MAAvB,EAA+BgB,CAAC,EAAhC,EAAoC;AAClC,QAAMC,GAAG,GAAGR,EAAE,CAACO,CAAD,CAAd;AACA,QAAME,KAAK,GAAGT,EAAE,CACbU,gBADW,CACMF,GADN,EAEXG,OAFW,CAEH,sBAFG,EAEqB,UAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBrB,QAAQ,MAAR,4BAAYqB,KAAK,CAAC5B,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAAA4B,CAAC;AAAA,eAAIC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAZ;AAAA,OAAtB,CAAZ,EAAjB;AAAA,KAFrB,CAAd;AAGAR,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcC,KAAd;AACD;;AACD,SAAOH,MAAP;AACD;;AAED,SAASU,YAAT,CAAsBC,cAAtB,EAAsD;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;AACpD,MAAMC,GAAG,GAAGC,GAAG,CAACC,KAAJ,WAAaH,SAAb,eAA2BD,cAA3B,EAAZ;AACA,MAAMK,IAAI,GAAG,EAAb;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAd,KAAK;AAAA,WAAIA,KAAK,CAACE,OAAN,CAAc,mBAAd,EAAmC,UAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBS,IAAI,CAACT,KAAD,CAArB;AAAA,KAAnC,CAAJ;AAAA,GAAzB;;AACAM,EAAAA,GAAG,CAACK,UAAJ,CAAeC,KAAf,GAAuBN,GAAG,CAACK,UAAJ,CAAeC,KAAf,CAAqBvC,GAArB,CAAyB,UAAAwC,IAAI,EAAI;AACtD,QAAIA,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;AACxBD,MAAAA,IAAI,CAACE,YAAL,GAAoBF,IAAI,CAACE,YAAL,CAAkB1C,GAAlB,CAAsB,UAAA2C,IAAI,EAAI;AAChD,YAAIA,IAAI,CAACF,IAAL,KAAc,aAAlB,EAAiC;AAAA,cACvBG,QADuB,GACHD,IADG,CACvBC,QADuB;AAAA,cACbrB,KADa,GACHoB,IADG,CACbpB,KADa;;AAE/B,cAAIqB,QAAQ,CAACC,UAAT,CAAoB,IAApB,CAAJ,EAA+B;AAC7BT,YAAAA,IAAI,CAACQ,QAAD,CAAJ,GAAiBP,WAAW,CAACd,KAAD,CAA5B;AACD;;AACDoB,UAAAA,IAAI,CAACpB,KAAL,GAAac,WAAW,CAACd,KAAD,CAAxB;AACD;;AACD,eAAOoB,IAAP;AACD,OATmB,CAApB;AAUD;;AACD,WAAOH,IAAP;AACD,GAdsB,CAAvB;AAeA,SAAOP,GAAP;AACD;;AAED,SAASa,oBAAT,CAA8BC,aAA9B,EAA6CC,cAA7C,EAA6D;AAC3D,MAAMC,QAAQ,GAAGF,aAAa,CAACG,IAAd,CAAmB,EAAnB,CAAjB;AACA,MAAMC,SAAS,aAAMF,QAAN,qBACXG,MAAM,CAACC,IAAP,CAAYL,cAAZ,EACChD,GADD,CACK,UAAAsD,CAAC;AAAA,qBAAOA,CAAP,eAAaN,cAAc,CAACM,CAAD,CAA3B;AAAA,GADN,EAECJ,IAFD,CAEM,IAFN,CADW,UAAf;AAKA,SAAOhB,GAAG,CAACqB,SAAJ,CAAcrB,GAAG,CAACC,KAAJ,CAAUgB,SAAV,CAAd,CAAP;AACD;;AAED,SAASK,SAAT,CAAmBT,aAAnB,EAAkCU,cAAlC,EAAkDzB,SAAlD,EAA6D;AAC3D,MAAI,CAACe,aAAa,CAAC1C,MAAnB,EAA2B;AACzB,WAAO,EAAP;AACD;;AACD,MAAM4B,GAAG,GAAGH,YAAY,CAAC2B,cAAD,EAAiBzB,SAAjB,CAAxB;AACA,SAAOe,aAAa,CACjBvD,MADI,CACG,UAACkE,GAAD,EAAMC,GAAN,EAAc;AACpB,QAAI,CAACA,GAAG,CAACtD,MAAT,EAAiB;AACf,aAAOqD,GAAP;AACD;;AAED,QAAME,EAAE,GAAG,IAAIC,MAAJ,YAAeF,GAAG,CAACT,IAAJ,CAAS,GAAT,CAAf,QAAiC,GAAjC,CAAX;;AACA,QAAI,CAACU,EAAE,CAACE,IAAH,CAAQL,cAAR,CAAL,EAA8B;AAC5B,aAAOC,GAAP;AACD;;AAED,QAAMV,cAAc,GAAGtC,iBAAiB,CAACiD,GAAG,CAAC3D,GAAJ,CAAQ,UAAA+D,CAAC;AAAA,aAAIA,CAAC,CAACtC,OAAF,CAAU,GAAV,EAAe,EAAf,CAAJ;AAAA,KAAT,EAAiCyB,IAAjC,CAAsC,GAAtC,CAAD,EAA6ChB,GAAG,CAACqB,SAAJ,CAActB,GAAd,CAA7C,CAAxC;AAEA,wCAAWyB,GAAX,IAAgBZ,oBAAoB,CAACa,GAAD,EAAMX,cAAN,CAApC;AACD,GAdI,EAcF,EAdE,EAeJE,IAfI,CAeC,IAfD,CAAP;AAgBD","sourcesContent":["import * as css from 'css';\nimport * as jsdom from 'jsdom';\n\nconst { JSDOM } = jsdom;\n\nfunction getSelectors(nodes) {\n  return nodes.reduce((selectors, node) => {\n    const props = typeof node.props === 'function' ? node.props() : node.props;\n    return [...selectors, getSelectorsFromProps(props)];\n  }, []);\n}\n\nfunction getSelectorsFromProps(props = {}) {\n  const className = props.className || props.class;\n  if (className) {\n    return className\n      .toString()\n      .split(' ')\n      .map(cn => `.${cn}`);\n  }\n  return [];\n}\n\nfunction componentToHex(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n}\n\nfunction getComputedStyles(classNames, cssStr) {\n  const dom = new JSDOM(\n    `<!DOCTYPE html>\n      <head><style>${cssStr}</style></head>\n      <body><div class=\"${classNames}\"></div>\n      </body>`\n  );\n  const cs = dom.window.getComputedStyle(dom.window.document.body.children[0]);\n  const values = {};\n  for (let i = 0; i < cs.length; i++) {\n    const key = cs[i];\n    const value = cs\n      .getPropertyValue(key)\n      .replace(/rgb\\(([\\d|,|\\s]+)\\)/g, (full, match) => rgbToHex(...match.split(',').map(n => parseInt(n, 10))));\n    values[key] = value;\n  }\n  return values;\n}\n\nfunction getStylesAST(bufferedStyles, globalCSS = '') {\n  const ast = css.parse(`${globalCSS}\\n${bufferedStyles}`);\n  const vars = {};\n  const getVarValue = value => value.replace(/var\\(([\\w|-]*)\\)/g, (full, match) => vars[match]);\n  ast.stylesheet.rules = ast.stylesheet.rules.map(rule => {\n    if (rule.type === 'rule') {\n      rule.declarations = rule.declarations.map(decl => {\n        if (decl.type === 'declaration') {\n          const { property, value } = decl;\n          if (property.startsWith('--')) {\n            vars[property] = getVarValue(value);\n          }\n          decl.value = getVarValue(value);\n        }\n        return decl;\n      });\n    }\n    return rule;\n  });\n  return ast;\n}\n\nfunction formatComputedStyles(nodeSelectors, computedStyles) {\n  const selector = nodeSelectors.join('');\n  const cssString = `${selector} {\n    ${Object.keys(computedStyles)\n      .map(k => `${k}: ${computedStyles[k]};`)\n      .join('\\n')}\n  }`;\n  return css.stringify(css.parse(cssString));\n}\n\nfunction getStyles(nodeSelectors, insertedStyles, globalCSS) {\n  if (!nodeSelectors.length) {\n    return '';\n  }\n  const ast = getStylesAST(insertedStyles, globalCSS);\n  return nodeSelectors\n    .reduce((acc, sel) => {\n      if (!sel.length) {\n        return acc;\n      }\n\n      const re = new RegExp(`(${sel.join('|')})`, 'g');\n      if (!re.test(insertedStyles)) {\n        return acc;\n      }\n\n      const computedStyles = getComputedStyles(sel.map(s => s.replace('.', '')).join(' '), css.stringify(ast));\n\n      return [...acc, formatComputedStyles(sel, computedStyles)];\n    }, [])\n    .join('\\n');\n}\n\nexport { getSelectors, getStyles };\n"],"file":"cssUtils.js"}