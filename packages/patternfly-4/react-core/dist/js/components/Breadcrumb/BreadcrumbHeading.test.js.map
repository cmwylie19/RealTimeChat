{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbHeading.test.tsx"],"names":["describe","test","view","expect","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5CC,EAAAA,IAAI,CAAC,yCAAD,EAA4C,YAAM;AACpD,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,oCAAD,eAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,uBAAD,EAA0B,YAAM;AAClC,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,oCAAD;AAAmB,MAAA,SAAS,EAAC;AAA7B,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,uBAAD,EAA0B,YAAM;AAClC,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,oCAAD;AAAmB,MAAA,EAAE,EAAC;AAAtB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,oCAAD,EAAuC,YAAM;AAC/C,QAAMC,IAAI,GAAG,qBAAQ,oBAAC,oCAAD;AAAmB,MAAA,EAAE,EAAC;AAAtB,cAAR,CAAb;AACAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,6CAAD,EAAgD,YAAM;AACxD,QAAMC,IAAI,GAAG,qBACX,oBAAC,oCAAD;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,MAAM,EAAC;AAArC,cADW,CAAb;AAKAC,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAPG,CAAJ;AAQD,CA7BO,CAAR","sourcesContent":["import * as React from 'react';\nimport { BreadcrumbHeading } from './BreadcrumbHeading';\nimport { shallow } from 'enzyme';\n\ndescribe('BreadcrumbHeading component', () => {\n  test('should render default breadcrumbHeading', () => {\n    const view = shallow(<BreadcrumbHeading>Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should pass classname', () => {\n    const view = shallow(<BreadcrumbHeading className=\"Class\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should pass custom id', () => {\n    const view = shallow(<BreadcrumbHeading id=\"Id\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render link breadcrumbTitle', () => {\n    const view = shallow(<BreadcrumbHeading to=\"/somewhere\">Item</BreadcrumbHeading>);\n    expect(view).toMatchSnapshot();\n  });\n\n  test('should render breadcrumbHeading with target', () => {\n    const view = shallow(\n      <BreadcrumbHeading to=\"#here\" target=\"_blank\">\n        Item\n      </BreadcrumbHeading>\n    );\n    expect(view).toMatchSnapshot();\n  });\n});\n"],"file":"BreadcrumbHeading.test.js"}