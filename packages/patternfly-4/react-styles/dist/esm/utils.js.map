{"version":3,"sources":["../../src/utils.js"],"names":["camelcase","injectGlobal","caches","emotionCache","isValidStyleDeclaration","styleObj","Boolean","__className","__inject","createStyleDeclaration","className","rawCss","replace","trim","isModifier","startsWith","getModifier","modifier","defaultModifier","modifiers","formatClassName","getCSSClasses","cssString","match","getClassName","getInsertedStyles","Object","values","inserted","pickProperties","object","properties","reduce","picked","property"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,MAAM,IAAIC,YAAjC,QAAqD,SAArD;AAEA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAChD,SAAOC,OAAO,CAACD,QAAD,CAAP,IAAqB,OAAOA,QAAQ,CAACE,WAAhB,KAAgC,QAArD,IAAiE,OAAOF,QAAQ,CAACG,QAAhB,KAA6B,UAArG;AACD;AAED,OAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA2CC,MAA3C,EAAmD;AACxD,SAAO;AACLJ,IAAAA,WAAW,EAAEG,SAAS,CAACE,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,EAA2BC,IAA3B,EADR;;AAELL,IAAAA,QAAQ,GAAG;AACTP,MAAAA,YAAY,CAACU,MAAD,CAAZ;AACD;;AAJI,GAAP;AAMD;AAED,OAAO,SAASG,UAAT,CAAoBJ,SAApB,EAA+B;AACpC,SAAOJ,OAAO,CAACI,SAAS,IAAIA,SAAS,CAACK,UAAxB,CAAP,IAA8CL,SAAS,CAACK,UAAV,CAAqB,QAArB,CAArD;AACD;AAED,OAAO,SAASC,WAAT,CAAqBX,QAArB,EAA+BY,QAA/B,EAAyCC,eAAzC,EAA0D;AAC/D,MAAI,CAACb,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,QAAMc,SAAS,GAAGd,QAAQ,CAACc,SAAT,IAAsBd,QAAxC;AACA,SAAOc,SAAS,CAACF,QAAD,CAAT,IAAuBE,SAAS,CAACnB,SAAS,CAACiB,QAAD,CAAV,CAAhC,IAAyDC,eAAhE;AACD;AAED,OAAO,SAASE,eAAT,CAAyBV,SAAzB,EAAoC;AACzC,SAAOV,SAAS,CAACU,SAAS,CAACE,OAAV,CAAkB,0BAAlB,EAA8C,EAA9C,CAAD,CAAhB;AACD;AAED,OAAO,SAASS,aAAT,CAAuBC,SAAvB,EAAkC;AACvC,SAAOA,SAAS,CAACC,KAAV,CAAgB,2CAAhB,CAAP,CADuC,CAC8B;AACtE;AAED,OAAO,SAASC,YAAT,CAAsBnB,QAAQ,GAAG,EAAjC,EAAqC;AAC1C,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAOA,QAAP;AACD;;AAED,SAAOD,uBAAuB,CAACC,QAAD,CAAvB,GAAoCA,QAAQ,CAACE,WAA7C,GAA2D,EAAlE;AACD;AAED,OAAO,SAASkB,iBAAT,GAA6B;AAClC,SAAOC,MAAM,CAACC,MAAP,CAAcxB,YAAY,CAACyB,QAA3B,CAAP;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,UAAhC,EAA4C;AACjD,SAAOA,UAAU,CAACC,MAAX,CAAkB,CAACC,MAAD,EAASC,QAAT,uBAA4BD,MAA5B;AAAoC,KAACC,QAAD,GAAYJ,MAAM,CAACI,QAAD;AAAtD,IAAlB,EAAuF,EAAvF,CAAP;AACD","sourcesContent":["import camelcase from 'camel-case';\nimport { injectGlobal, caches as emotionCache } from 'emotion';\n\nexport function isValidStyleDeclaration(styleObj) {\n  return Boolean(styleObj) && typeof styleObj.__className === 'string' && typeof styleObj.__inject === 'function';\n}\n\nexport function createStyleDeclaration(className, rawCss) {\n  return {\n    __className: className.replace('.', '').trim(),\n    __inject() {\n      injectGlobal(rawCss);\n    }\n  };\n}\n\nexport function isModifier(className) {\n  return Boolean(className && className.startsWith) && className.startsWith('.pf-m-');\n}\n\nexport function getModifier(styleObj, modifier, defaultModifier) {\n  if (!styleObj) {\n    return null;\n  }\n\n  const modifiers = styleObj.modifiers || styleObj;\n  return modifiers[modifier] || modifiers[camelcase(modifier)] || defaultModifier;\n}\n\nexport function formatClassName(className) {\n  return camelcase(className.replace(/pf-((c|l|m|u|is|has)-)?/g, ''));\n}\n\nexport function getCSSClasses(cssString) {\n  return cssString.match(/(\\.)(?!\\d)([^\\s\\.,{\\[>+~#:)]*)(?![^{]*})/g); //eslint-disable-line\n}\n\nexport function getClassName(styleObj = {}) {\n  if (typeof styleObj === 'string') {\n    return styleObj;\n  }\n\n  return isValidStyleDeclaration(styleObj) ? styleObj.__className : '';\n}\n\nexport function getInsertedStyles() {\n  return Object.values(emotionCache.inserted);\n}\n\nexport function pickProperties(object, properties) {\n  return properties.reduce((picked, property) => ({ ...picked, [property]: object[property] }), {});\n}\n"],"file":"utils.js"}